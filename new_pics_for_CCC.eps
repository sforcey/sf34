%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: Untitled-1.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: sf34
%%CreationDate: 9/15/2011
%%BoundingBox: 0 0 592 749
%%HiResBoundingBox: 0 0 591.7129 748.3179
%%CropBox: 0 0 591.7129 748.3179
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic CMYK</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2011-09-15T17:00:32-04:00</xmp:MetadataDate>
         <xmp:ModifyDate>2011-09-15T17:00:32-04:00</xmp:ModifyDate>
         <xmp:CreateDate>2011-09-15T17:00:32-04:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>204</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A6b+ZOq+Sj53trLUNburH&#xA;UYYlmnj9NZtOjSC2u5v9JiJQu0sTOKLyYiiinLFLH9e1H8s9Qn09bbzvrtjqPl+PT9LmisIrqGTl&#xA;A/oiS5R4FYOfrvF9waFloTUYqnGvat5W8zWl75nsvNvmHS/0fbC/v9NsJ3SNIGhMKIUBNvyL1aqS&#xA;7sG3+GqqpBOnlCbV7m5vPzM816d9XuQnoR6grQu4u7uH044oBctT/QWO6gcSn83EKEb5Y8w/lro+&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:A3F44EC0DDDFE011AD82A491E319C4C0</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:A3F44EC0DDDFE011AD82A491E319C4C0</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:94782b2b-b887-a548-af0c-54e93ec08a6c</stRef:instanceID>
            <stRef:documentID>xmp.did:F77F117407206811ACAFB8DA80854E76</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:A3F44EC0DDDFE011AD82A491E319C4C0</stEvt:instanceID>
                  <stEvt:when>2011-09-15T17:00:32-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>614.000000</stDim:w>
            <stDim:h>773.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Consolas</stFnt:fontName>
                  <stFnt:fontFamily>Consolas</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.00</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>CONSOLA.TTF</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Calibri</stFnt:fontName>
                  <stFnt:fontFamily>Calibri</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.02</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>CALIBRI.TTF</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPS-ItalicMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Italic</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 2.90</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>TIMESI.TTF</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>SymbolMT</stFnt:fontName>
                  <stFnt:fontFamily>Symbol</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.60</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>SYMBOL.TTF</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>CMR12</stFnt:fontName>
                  <stFnt:fontFamily>CMR12</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>MyriadPro-Regular*1</stFnt:fontName>
                  <stFnt:fontFamily>MyriadPro Regular*1</stFnt:fontFamily>
                  <stFnt:fontFace>Regular*1</stFnt:fontFace>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>SymbolMT*1</stFnt:fontName>
                  <stFnt:fontFamily>SymbolMT*1</stFnt:fontFamily>
                  <stFnt:fontType>Unknown</stFnt:fontType>
                  <stFnt:versionString>Version 2.037;PS 2.000;hotconv 1.0.51;makeotf.lib2.0.18671</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>MyriadPro-Regular.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>84.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000001</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000002</xmpG:magenta>
                           <xmpG:yellow>84.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999999</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000004</xmpG:cyan>
                           <xmpG:magenta>30.000001</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>30.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000001</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>44.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>69.999999</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>94.999999</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000002</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>94.999999</xmpG:magenta>
                           <xmpG:yellow>19.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>44.999999</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000002</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000001</xmpG:cyan>
                           <xmpG:magenta>60.000002</xmpG:magenta>
                           <xmpG:yellow>64.999998</xmpG:yellow>
                           <xmpG:black>39.999998</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999998</xmpG:magenta>
                           <xmpG:yellow>64.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000001</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000002</xmpG:cyan>
                           <xmpG:magenta>60.000002</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>64.999998</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>35.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>69.999999</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>69.999999</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>69.999999</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>89.999402</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>79.998797</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>69.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>59.999102</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>39.999402</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>29.998803</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>19.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>9.999102</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>4.998803</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Crosses Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=70 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>69.999999</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=50 Y=80 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=65 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>64.999998</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=90 Y=10 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>10.000002</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=85 Y=60 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>84.999996</xmpG:magenta>
                           <xmpG:yellow>60.000002</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -748.318 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 748.318 li
591.713 748.318 li
591.713 0 li
cp
clp
[1 0 0 1 0 0 ]ct
false sop
/0 
[/DeviceCMYK] /CSA add_res
.746094 .675781 .667969 .898438 cmyk
%ADOBeginSubsetFont: Consolas Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Consolas def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 62 /greater put
def
/FontBBox {-122 -230 619 952} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B795A0F00806EC1F0EC057E4AA29D2637ABBF4814B35
0292A9DE554208F340EDD1FA5945C009611F5AF5AAA26ED5307AA5CDE9211138
07BD0763A8144600921E6300E489964F1177286037324F8AB20C30049C1C9EBA
8DE646E820DA45E27865F1C584681D7D07690BB92258B94870D94D1E0F6BC821
25B31C53A31D4939A451BC0EE4A866CA84DD3FA42BB36799586815028E6879E8
6CDDFCF12552C015F8AECE44B5D57540AD6783FBF9D2E8A3E6575D4DD21ACBA1
54F961A3D1273E6F394A1A4B2BC8D0C1359A2E2A86D890714BE41DE0C2C83A9A
03C3C7CE96FA9E899459E45BEA8454A4AAADE435D5118F92A4ACCADFD7F220FF
C214> |-
/greater <1C60D8A8C9B795A0BEA4415401760199C18911A9A077C77378E753
953FFE926D59FF289B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SNAUOF+Consolas /Consolas findfont ct_VMDictPut
/SNAUOF+Consolas*1 
[62{/.notdef}rp /greater 193{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
7.41211 9.52295 mo
(>)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B795A0BEDBD55997C9B6E5A7819E80C38A6ACCFC1D10D41B
8B710B9A47F21A44D734713C84A448> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[49{/.notdef}rp /one 12{/.notdef}rp /greater 193{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
14.0483 9.52295 mo
(1)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B795A0B13703C1538647A766ABCF85055824C9F15
77FA4B92ED5B542CDF511A1419420106A79AEEEF48FB1851E6018A83DF188CB7
BA2D68239806FAB1B980486DA9FB43B149F6DA4DEC55924A8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[41{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 193{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
20.6851 9.52295 mo
(\))sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B795A048> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
193{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
27.3213 9.52295 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B795A0BEF62C5D082A95A57BFB8DE0E9293E781189A3BF7DD0
CF5003DA614B4E4D51A7101EABDA6A7C44900FB02FFBDE545381FA7D763E8EEC
72FB185080F338B1F2ABA48336D4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 87 /W put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 168{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
33.958 9.52295 mo
(W)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B795A0BED236AB944A521572F9CECB636063A0C8FA8460A0EA
51FBBFCC57A264792474EF8F93FE9C78898C79825AD04649FA4E08E840DC689B
0D06964CE991E3ECE6BDD624E1193CC1B2AFC24F55B6E808DDF054B358D47A6D
AB35B7EF46EE4CADE8E46BF5C77500C7AC5E43299DF3302A415C09921416C9A2
4BA751829E993C7F1CF8B9F764EBCC578BD1CCE7C18E97CEDBC4B0281B7DB630
A1A7C747ECED61017971F7A34DC4F179F8E9B97037956F53D16E2FA0EC056004
BE003E31289EE0C146811E30FE653AB19850EE9D7249DE81A801EC2A4923A7CB
AD296094AAE748AB5E6503FA6C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 13{/.notdef}rp /e 154{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
39.7803 9.52295 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
46.417 9.52295 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B795A0AB5B82AF1B76824E2C2AFD965D415C1F61DC8ABBFB72
D58C1605E6D91A8A184815EC6ED235F1602B3A54E545E3F81039FFE2B10BB74E
A6A2A9FDC9B2EC74A3B2E0FCECAFD815EF656EBADB2C3F33A93853A3202ED119> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 13{/.notdef}rp /e 12{/.notdef}rp /r 141{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
53.0532 9.52295 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
58.876 9.52295 mo
(e)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B795A0BEFFFBB2D28C41BF20AEC508E5FAFA323AE8238B50EC
6562B657B08BC52CCD0D622C0245315A54856BC96B589F36FD6450E047A73019
7F386CA6F4B36D82A9633FBEDEF24201ECCF2D4EDF123AF97EF1AC15C3032841
096ECAA5CE8F27D2C9C92A0EC00891F43A177E09299FE5E2DF4CB3170CB15329
ABA727ED8140A6BB057BF1E230CA6AC06255EBBD2EEA6F6E31A7077011EF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 11{/.notdef}rp /c /.notdef /e 12{/.notdef}rp /r 
141{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
65.5122 9.52295 mo
(c)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B795A0BEDE8CC6EA44D383823570EBAABE4D61A58AB3DDDE6C
4A0697CC41E3971A674F65B115DDB720829750F5F2C7495E9289872257A5FB32
51B7B3B8631F120C9AFD10B4F18D6CC929A77A75A3FC5CF9F8DD5E85FAF48AD1
A8BC15D948CC93F7C127A58E3B3B0E297C7FCD7AE0F63A7BF1FDE6BAB768FAA7
F16122D4FA34A9D59AD8CD68ABD3A2F1BE3D01F263EEBD99EC2C1FEF1FFA0883
2C78DFCF357E6DFA4877029E438408B93917FD41C3051779BE9A648327B20B65
B0C739E233FFE6D5F3F76D88BCFCEC6EC4597AA797E1AA697C69588C019F77A4
D6D3A5E26C2642B5C1169FE95E067B2260A525513106> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 11{/.notdef}rp /c /.notdef /e 9{/.notdef}rp /o 
2{/.notdef}rp /r 141{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
72.1489 9.52295 mo
(o)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B795A0BE352353225ED39AFB817AD485A3F33BDDDACDBC8CEC
075C94FE973697DF513C86D46E8ECBABC8D8D9EB566ECF413AC0350438AC8E68
6DA8F1CFCDC1A8D2A77574002BECC50A977F9D094997B43F55409E635FB57B95
E10E93CCEB14E38886D1CE9887CC7D6312E85D109944EE92B3651C4E8D3FE012
5F122E617C087A8D8B5D5F30C30DE4E2273E3B5022516B4E630B31878E74A9AC
CB175B58D46C8B382B4D3CBD31520E0A291A256407D845A8CAC84944C2FC0C6D
F6BB1E0DE06A4DED61D0773859AEC77EF2848254509DC2DB132156B149852317
9DB001406D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 11{/.notdef}rp /c /.notdef /e 7{/.notdef}rp /m 
/.notdef /o 2{/.notdef}rp /r 141{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
77.9717 9.52295 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
84.6079 9.52295 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
91.2441 9.52295 mo
(e)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B795A09FB667E8CE08F250E20A58EA3FB4D6C23356C5B6C88F
BC848891E4F734179A33976EBA53191AFEE5656FE323424D28EC704154401B03
8873AE0381C329E5A8953F3A0043F94AFDE0904F4C9E878C22C152F3CAC00A2B
CC220EEE6FF66CE0F97A9C8C8A472E71EA255644> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 11{/.notdef}rp /c /.notdef /e 7{/.notdef}rp /m 
/n /o 2{/.notdef}rp /r 141{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
97.8809 9.52295 mo
(n)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B795A08DEA81EB2A251074BB61974201F93456F7C0CF0F8D03
222166D84BBF3C23DD170958743493B8DCE9EE2D400D213206D6B9B256B4FD5D
9AE6804B0E96FFBD12F756D12B1E07B1A68EDDB83EC23AB5771B83C3689BBD7B
B3CF680532F76BBDC389F1C6211D22D1E125896AC726BAACA8A5DA96E246119A
7E3535AA5BBB9C824747FCDE70555AFAB7FD20DE797693FE60D144FED2D56645
9094444878532F7937EC31E03C34CF1AA544> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 11{/.notdef}rp /c /d /e 7{/.notdef}rp /m 
/n /o 2{/.notdef}rp /r 141{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
103.703 9.52295 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
110.34 9.52295 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B795A0BECD1D6972A0AC46B3CB5857251F55F187D0F6C6B449
11B510322226B2439AB87203FBAD9F934D5F05A78C4E101A4A0986FEAC7BD70D
DECEF71E4ADDF76677A11144B90D98C8AC3B2A504482955BEFB44EDA7C96FB70
50D07BC2D98D60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 11{/.notdef}rp /c /d /e 7{/.notdef}rp /m 
/n /o 2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
116.976 9.52295 mo
(t)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B795A0BECC00AB96167A06BA726E33294428552620859BECFB
15A8C51ADA8AD1D6E930C4E48F229C24ACB8A80FC03E2586852017A42FFE638A
03ECD48E7FF8C75A753577FF121666143BB3B763045959443F08B4A9B1AA520A
F845023E6DD6A3533C1367423840A88E3724BA9C8FC9EDD774D2> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 104 /h put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 11{/.notdef}rp /c /d /e 2{/.notdef}rp /h 
4{/.notdef}rp /m /n /o 2{/.notdef}rp /r /.notdef /t 
139{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
122.799 9.52295 mo
(h)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B795A0BEC99A293BDD1FD7E87668D69536CE5E0BDA3CD89981
3AF2089E48426CF0AC46A41B72B5FBE7B3CED2F8E90D10C722425B6FB0AB75BF
7903C6C6AF3C36DB12AB8FD377477E2061EF7CBC570F9EB587129F5854B2E44E
7B3F61B5443AADD6D067C21E7F4177955F425B2C4D1DDF63E6D508C0801EEC8E
4AFB126DF71269473BE75DF5F7D06A30629FB455309113D012B3CC72B1B5A4E7
C50CC944032F37B6A1628B85831D6341AB42AE5736FA66CF147B4654C3B6824B
845EB6ABFE4827E0DCC3084180FB201DCCBE1056952B7365EE7D076B80C32415
52BB3CD4C87BF4F0D5448B48892CC05E38C73B6F3F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 7{/.notdef}rp /one 12{/.notdef}rp /greater 
24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c /d /e 
2{/.notdef}rp /h 4{/.notdef}rp /m /n /o 2{/.notdef}rp /r 
/.notdef /t 139{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
129.435 9.52295 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
136.072 9.52295 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
141.895 9.52295 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
148.531 9.52295 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
155.167 9.52295 mo
(o)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B795A0BE99204C0B7A470B9DBA37B7836EC4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h 4{/.notdef}rp /m /n /o 
2{/.notdef}rp /r /.notdef /t 139{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
161.881 9.52295 mo
(-)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
167.693 9.52295 mo
(a)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B795A0BEFFE0A8598A428D64C3EE1D264674B1F5E1AF291EA9
B93F686B78BA888B1ED4A191D6B00787FB813D447EC998FF08BC4B8B1F5A193F
4C4B124DB2215F8506CBC226FA9895774C315D3FC92044E471A8FA7973010DF6
4744CB55F95FBBF9458925C9374FC10A1688D423D965EA8B2E9C4A890C1929F1
99BA0AD6BE0383DD068FCC132B8D49C1D921A47E8E06049A964CB8203F256C25
3ADF9EE4DE5850C1C787CEC8F05BFC65BFF9A2F3DE1BD5EAC907FC3D2196C191
68F9A06F72D76C6937137A132E23E8421BB40F22D45880E441BD068623377F77
4842D594E97A328085F5998AE758B68EC9E2765289F25486C3620FD23C660135
0F32204C49C8606001EA9791113359E8FE3C515D2440C55650838AAD1CB151F6
A93998828200AB36F6B0B6A343> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h 4{/.notdef}rp /m /n /o 
2{/.notdef}rp /r /s /t 139{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
174.33 9.52295 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
180.966 9.52295 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
186.789 9.52295 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
193.425 9.52295 mo
(c)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B795A0B1ADF3BC0795D5E9F9A336E81457C333AFDB3BC63ABE
B15DE4B0464D31D1C14EBCB9E68E056CF44185C9E6E09C51128355F38FCB56B5
41891A2DCAE7B2233005AEE7266B05CA6962C2D46507C292B97338B2E013B255
88F51A90622863B37B6DA5FC10565685FA4F57D1B4C5ECA4C6E9D429E45F06AE
93584BBBD5CD23D0770F8AEA0BA5A5E3C9FDE0813C3018BBD20A0485B3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n 
/o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
200.062 9.52295 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
205.884 9.52295 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
212.537 9.52295 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
219.173 9.52295 mo
(i)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B795A0B151E7921616C3BD53E5147C17666AE1CFC702438743
482C7C8E381B00A14030> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n 
/o 2{/.notdef}rp /r /s /t /.notdef /v 137{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
225.81 9.52295 mo
(v)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
231.633 9.52295 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
238.269 9.52295 mo
(t)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B795A0BE98F109FF1329821FEC60FDCE7A9FF9A86F0E259CEA
4AC95374F8817626E0FCA45F6502E4417FF749DD12FEE0BF5BBA483AFD966433
C2475DFFCE6F7D922D51ED5AC62271615C76B4D7F65024AF34752458B0419525
CFDC169643979E807958952BDEE2D6212F83FD94FBDEB554804C39C42F3815ED
A4CB9A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n 
/o 2{/.notdef}rp /r /s /t /.notdef /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
244.905 9.52295 mo
(y)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
250.728 9.52295 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
257.365 9.52295 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
264.001 9.52295 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
269.823 9.52295 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
276.46 9.52295 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
283.097 9.52295 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
289.732 9.52295 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
295.584 9.52295 mo
(-)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
302.225 9.52295 mo
(m)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u <1C60D8A8C9B795A0BECC0FE63711DE6F2D317B4782F025B652B375F4FFE7
DADF54807E22CAE7A93D22C86EE7BBAF10BCD0AA501748C58E28B02934BA59A2
0B9FC827D48AC697E67A53D50A96F7CBCD072608278B4653FB801A4BC8A2E61B
EB082B13581F1B4009089EDBA4B4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h /i 3{/.notdef}rp /m /n 
/o 2{/.notdef}rp /r /s /t /u /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
308.861 9.52295 mo
(u)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B795A0B1ADF3BC0795D5E9F9A336E81457C333AFDBF31895AF
95DEC4B7CDE85271> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m 
/n /o 2{/.notdef}rp /r /s /t /u /v 
2{/.notdef}rp /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
314.684 9.52295 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
321.32 9.52295 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
327.956 9.52295 mo
(i)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B795A0BEDAB645499F740B58FBCA241DED5C8587FC084053EF
E032FAE03A538C7ADA819BF6EE3987117FE6988FB8623B6A07EE3729E971D636
2E9BF2C9CBDF808DF9BF2996F21FDBFB6B296CCE5FE8C390BCD8C0CEF5C528F5
C23BC47A7902A5AEF396A3DF1DB95E22696C956993B62A4A27E40B2C5BD8BCE7
529B9EF1962127233DDB10F7AAC81EA22433564AA459217D2695AA2BC1D338CF
F6D8DC4511F3A4F3709B4BB5279EDD2341C633D1C5DCBB00AAAE8C2AC3E8973F
7ACB4837C55F8311C66BD2CB5A8E45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /.notdef /c 
/d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v 2{/.notdef}rp /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
333.779 9.52295 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
340.416 9.52295 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
347.052 9.52295 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
353.688 9.52295 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
359.511 9.52295 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
366.147 9.52295 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
372.784 9.52295 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
378.606 9.52295 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
385.243 9.52295 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
391.88 9.52295 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B795A0BEDAB645499F740B58FBCA241DED5C8587FC084053EF
E032FAE03A538C7ADA819BF6EE3987117C8B61B9584C5EDBC74EA9980FEE6AF7
F1966FB58BCE353A0C48364BD26AE6A8A63B3F7F685BB77B511FE613ACF35D7A
BBB6600926D40CCE00065B585E004354EE85B33F37B8F3FD298CB98E98196F4D
9AD29BD9D4A15CA3D9F11B4ADCAE23A467A14DD7480718D6811AF97B84F325D5
CA0F73911C8655A07F48DC688F4C07716E7DC0E9C11DB7619FAEE5AF9AC59C08
FD2BBD81FFEBABE498B90AC419432510FF3AA2105FF26190D95C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e 2{/.notdef}rp /h /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v 2{/.notdef}rp /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
397.702 9.52295 mo
(b)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
404.339 9.52295 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
410.193 9.52295 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
7.41211 22.8042 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
14.0483 22.8042 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
20.6851 22.8042 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
27.3213 22.8042 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
33.958 22.8042 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
39.7803 22.8042 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
46.417 22.8042 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
53.0532 22.8042 mo
(y)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
58.876 22.8042 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
65.5122 22.8042 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
72.1489 22.8042 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
77.9717 22.8042 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
84.6079 22.8042 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
91.2441 22.8042 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
97.8809 22.8042 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
103.703 22.8042 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
110.34 22.8042 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
116.976 22.8042 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
122.799 22.8042 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
129.435 22.8042 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
136.072 22.8042 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B795A0BE35CCAAE437DD86DB8DA16661EB08B023A1EFED9945
35FAF2F364B376251A161CAB94BFA196CFEDC37C2E521DE9E7F91E4EF2D99F33
FAA96895715140> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen 3{/.notdef}rp /one 
12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /f /.notdef /h /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /v 2{/.notdef}rp /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
141.895 22.8042 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
148.531 22.8042 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
155.167 22.8042 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
161.804 22.8042 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
167.626 22.8042 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
174.263 22.8042 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
180.899 22.8042 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
186.722 22.8042 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
193.358 22.8042 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
199.995 22.8042 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
205.817 22.8042 mo
(1)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B795A0B1A7BD57985AC5A64DA7509BF184AB3B2CDA05C
5674FB6A773345D7F21005A300DE6A3AAF6BD824BB631A23583BBBA237605BFC
8C9EE37C2F5EB06BD4873E5966D3068D46245B70E7FA10EE75AB3B31CC5C8F38
C7F52E5C982F8EA519D4BD9E65B7929DEF2230A579126AE451F6E58CA12A54B1
D9E0E2B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 46 /period put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one 12{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e /f /.notdef /h /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
212.454 22.8042 mo
(.)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B795A0BE209AFBE4225092DF2732B33E9A29165A1509F624
DB94C8D019A566AD344030FF5158F8EA2C0A42A3EB580C2585305E98F6F42DCB
FE978131F9A8365918EB3DD812D450183889311D3B83E398AA3C242B4B518440
5306808633F53B09247B6A4E96B20F14F9772239710E4BAE82471D7F0489632B
318FF6D6CDAAC69BA7BA1F7767C0EC93F22893815C625A235CA14C4583E3E242
87A6A8624583CDC2A847039C0B1E11059D60> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two 11{/.notdef}rp /greater 24{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /f /.notdef /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
219.09 22.8042 mo
(2)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
225.727 22.8042 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
231.549 22.8042 mo
(2)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
238.186 22.8042 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
244.1 22.8042 mo
( )sh
0 0 0 1 cmyk
%ADOBeginSubsetFont: SymbolMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /SymbolMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 68 /Delta put
def
/FontBBox {0 -220 1113 1005} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7C3C9ED920C533BFCEF627DC3963E487931C80D1235
BDD70699E096A6312D> |-
/Delta <1C60D8A8C9B7D7E8D37714888B3A9969C9B649A6AE211DE5892AE2A8
71F281F62C724D805D2A> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SNAUOG+SymbolMT /SymbolMT findfont ct_VMDictPut
/SNAUOG+SymbolMT*1 
[68{/.notdef}rp /Delta 187{/.notdef}rp]
SNAUOG+SymbolMT nf
SNAUOG+SymbolMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
47.5669 61.9263 mo
(D)sh
%ADOBeginSubsetFont: CMR12 Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /CMR12 def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/parenleft <1C60D8A8C9B84E0A47D7FED6098F93D599A35099EC3AF2C571CF
0E48D8A711D412E34AAB2732DF92ADCDC95C7C6D97E8C44CE2751654BC55BD12
CD842E> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SNAUOH+CMR12 /CMR12 findfont ct_VMDictPut
/SNAUOH+CMR12*1 
[40{/.notdef}rp /parenleft 215{/.notdef}rp]
SNAUOH+CMR12 nf
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
54.8813 61.9263 mo
(\()sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPS-ItalicMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 70 /F put
def
/FontBBox {-498 -307 1120 1023} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD1638113E4B58C0B5F39100186722805B704
AA3988900AFCFF05DD> |-
/F <1C60D8A8C9B7D8BE19D38CCF292DFC046A81C46904D6DBA45C92F5D70D3F
6EE199C42E4A4C9B3B0D87C6E3C2EDE67CD75D9ACE82154AD3064B8072C730BD
5E33CCE728F682C21B15C05744AD9C71CFA42728B71E17CDFE99F456763B119B
A3FA610548CF33938B2F236B852C1938DD05A18BA75E2CBAAEE0B3BF3055B956
ECB1A81C46282785CBAC883541E9D58F06378B9B39109988D498391B51FF826B
82A0206DB5AB25618DD21E217BBB77AE2DD83767DEE5C5D18C6FD1A87CA361B1
1F32974B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SNAUOI+TimesNewRomanPS-ItalicMT /TimesNewRomanPS-ItalicMT findfont ct_VMDictPut
/SNAUOI+TimesNewRomanPS-ItalicMT*1 
[70{/.notdef}rp /F 185{/.notdef}rp]
SNAUOI+TimesNewRomanPS-ItalicMT nf
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
61.8643 61.9263 mo
(F)sh
.6 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
75.5479 57.8042 mo
81.5479 63.8037 li
.878906 .765625 0 0 cmyk
@
81.5479 63.8042 mo
81.5479 66.8042 li
@
81.5479 57.8042 mo
84.5479 60.8042 li
@
87.5479 57.8042 mo
81.5479 63.8037 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: CMR12 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SNAUOH+CMR12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B84E0A47D7FED609B3683507871E5C5015E3549BF
91653A329EF8D5BF37DF948A5A8471707D087A577F9EE79FD91DC92667BCDE58
8EC87D3> |-
/equal <1C60D8A8C9B7C7F3AB181AB0C0D4CCBD039E0B840C2FD0290F361F5F
ADEFB5C66FFFF03997F6A3C47D6E28F621A8DA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOH+CMR12 /Encoding get
dup 41 /parenright put
dup 61 /equal put
pop
%ADOEndSubsetFont
/SNAUOH+CMR12*1 
[40{/.notdef}rp /parenleft /parenright 19{/.notdef}rp /equal 194{/.notdef}rp]
SNAUOH+CMR12 nf
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
97.0488 61.9263 mo
(\)\)=)
[10.6162 10.6157 0 ]xsh
%ADOBeginSubsetFont: SymbolMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOG+SymbolMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOG+SymbolMT /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/SNAUOG+SymbolMT*1 
[32{/.notdef}rp /space 35{/.notdef}rp /Delta 187{/.notdef}rp]
SNAUOG+SymbolMT nf
SNAUOG+SymbolMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
132.627 61.9263 mo
(             )sh
%ADOBeginSubsetFont: CMR12 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SNAUOH+CMR12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7BA8F425ECEA255C7F445C46B341EF282C71048D555A5D5
98E89496E7235E7E5E61E755DE1DD927709B69AF39C5FFA2F961FADB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOH+CMR12 /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
/SNAUOH+CMR12*1 
[40{/.notdef}rp /parenleft /parenright 7{/.notdef}rp /one 11{/.notdef}rp /equal 194{/.notdef}rp]
SNAUOH+CMR12 nf
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
171.481 61.9263 mo
(\(1)
[3.39551 0 ]xsh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
196.577 61.9263 mo
(F)sh
%ADOBeginSubsetFont: CMR12 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SNAUOH+CMR12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7C7F3FCFFFDB16D71949556271E5F2AA88700268763C9A
CD3F9E0997704EFB58B3C8E85BE2CD24BB97B678052C8703CE2AE55> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOH+CMR12 /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/SNAUOH+CMR12*1 
[40{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp /one 11{/.notdef}rp 
/equal 194{/.notdef}rp]
SNAUOH+CMR12 nf
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
226.346 61.9263 mo
(+)sh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
241.006 61.9263 mo
(F)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
299.53 61.9263 mo
(+)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
41.5166 61.9712 mo
(\()sh
205.52 57.8105 mo
211.52 63.8101 li
.878906 .765625 0 0 cmyk
@
211.52 63.8105 mo
211.52 66.8105 li
@
211.52 57.8105 mo
214.52 60.8105 li
@
217.52 57.8105 mo
211.52 63.8101 li
@
.664619 lw
0 lc
0 lj
188.972 58.418 mo
188.972 60.0264 187.67 61.3301 186.064 61.3301 cv
184.459 61.3301 183.158 60.0264 183.158 58.418 cv
183.158 56.8091 184.459 55.5054 186.064 55.5054 cv
187.67 55.5054 188.972 56.8091 188.972 58.418 cv
cp
0 0 0 1 cmyk
@
183.999 56.4219 mo
188.227 60.4141 li
@
188.177 56.6338 mo
183.951 60.2026 li
@
.6 lw
1 lc
1 lj
246.829 60.811 mo
252.829 66.8105 li
.878906 .765625 0 0 cmyk
@
252.829 66.811 mo
252.829 69.811 li
@
258.829 60.811 mo
252.829 66.8105 li
@
0 0 0 1 cmyk
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
271.154 61.0146 mo
(F)sh
.664619 lw
0 lc
0 lj
267.549 57.5063 mo
267.549 59.1147 266.247 60.4185 264.642 60.4185 cv
263.036 60.4185 261.735 59.1147 261.735 57.5063 cv
261.735 55.8975 263.036 54.5938 264.642 54.5938 cv
266.247 54.5938 267.549 55.8975 267.549 57.5063 cv
cp
@
262.576 55.5103 mo
266.804 59.5024 li
@
266.754 55.7222 mo
262.528 59.291 li
@
.6 lw
1 lc
1 lj
278.537 60.415 mo
284.537 66.4146 li
.878906 .765625 0 0 cmyk
@
284.537 66.415 mo
284.537 69.415 li
@
290.537 60.415 mo
284.537 66.4146 li
@
0 0 0 1 cmyk
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
314.296 62.0308 mo
(F)sh
323.239 57.915 mo
329.239 63.9146 li
.878906 .765625 0 0 cmyk
@
329.239 63.915 mo
329.239 66.915 li
@
329.239 57.915 mo
332.239 60.915 li
@
335.239 57.915 mo
329.239 63.9146 li
@
.664619 lw
0 lc
0 lj
349.24 59.5024 mo
349.24 61.1108 347.938 62.4146 346.332 62.4146 cv
344.727 62.4146 343.426 61.1108 343.426 59.5024 cv
343.426 57.8936 344.727 56.5898 346.332 56.5898 cv
347.938 56.5898 349.24 57.8936 349.24 59.5024 cv
cp
0 0 0 1 cmyk
@
344.268 57.5063 mo
348.494 61.4985 li
@
348.445 57.7183 mo
344.219 61.2871 li
@
%ADOBeginSubsetFont: CMR12 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SNAUOH+CMR12 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B896187A> |-
/period <1C60D8A8C9B89DB76243241956147685E9D11B558168E06D18275E2
338D279B9913C7A1D115D13271EAC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOH+CMR12 /Encoding get
dup 32 /space put
dup 46 /period put
pop
%ADOEndSubsetFont
/SNAUOH+CMR12*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 2{/.notdef}rp 
/period 2{/.notdef}rp /one 11{/.notdef}rp /equal 194{/.notdef}rp]
SNAUOH+CMR12 nf
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
354.1 62.4145 mo
(1 \))sh
366.162 62.4145 mo
(.)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
118.1 94.3042 mo
(=)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
130.284 94.2319 mo
(1  )sh
141.486 94.2319 mo
(   )sh
149.089 94.2319 mo
(1)sh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
170.812 94.2319 mo
(F)sh
.6 lw
1 lc
1 lj
179.755 90.1162 mo
185.755 96.1157 li
.878906 .765625 0 0 cmyk
@
185.755 96.1162 mo
185.755 99.1162 li
@
185.755 90.1162 mo
188.755 93.1162 li
@
191.755 90.1162 mo
185.755 96.1157 li
@
.664619 lw
0 lc
0 lj
167.207 90.7236 mo
167.207 92.332 165.905 93.6357 164.3 93.6357 cv
162.694 93.6357 161.393 92.332 161.393 90.7236 cv
161.393 89.1147 162.694 87.811 164.3 87.811 cv
165.905 87.811 167.207 89.1147 167.207 90.7236 cv
cp
0 0 0 1 cmyk
@
162.234 88.7275 mo
166.462 92.7197 li
@
166.413 88.9395 mo
162.186 92.5083 li
@
144.481 90.7231 mo
144.481 92.3315 143.18 93.6353 141.574 93.6353 cv
139.969 93.6353 138.667 92.3315 138.667 90.7231 cv
138.667 89.1143 139.969 87.8105 141.574 87.8105 cv
143.18 87.8105 144.481 89.1143 144.481 90.7231 cv
cp
@
139.509 88.7271 mo
143.736 92.7192 li
@
143.687 88.939 mo
139.46 92.5078 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
198.693 92.5078 mo
(+)sh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
228.771 93.3599 mo
(F)sh
.6 lw
1 lc
1 lj
234.594 92.2446 mo
240.594 98.2441 li
.878906 .765625 0 0 cmyk
@
240.594 98.2446 mo
240.594 101.245 li
@
246.594 92.2446 mo
240.594 98.2441 li
@
0 0 0 1 cmyk
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
258.919 92.4482 mo
(F)sh
.664619 lw
0 lc
0 lj
255.314 88.9399 mo
255.314 90.5483 254.012 91.8521 252.407 91.8521 cv
250.801 91.8521 249.5 90.5483 249.5 88.9399 cv
249.5 87.3311 250.801 86.0273 252.407 86.0273 cv
254.012 86.0273 255.314 87.3311 255.314 88.9399 cv
cp
@
250.341 86.9438 mo
254.569 90.936 li
@
254.52 87.1558 mo
250.293 90.7246 li
@
.6 lw
1 lc
1 lj
266.302 91.8486 mo
272.302 97.8481 li
.878906 .765625 0 0 cmyk
@
272.302 97.8486 mo
272.302 100.849 li
@
278.302 91.8486 mo
272.302 97.8481 li
@
0 0 0 1 cmyk
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
211.917 93.5288 mo
(1  )sh
223.119 93.5288 mo
(   )sh
.664619 lw
0 lc
0 lj
226.115 89.6167 mo
226.115 91.2251 224.813 92.5288 223.208 92.5288 cv
221.602 92.5288 220.301 91.2251 220.301 89.6167 cv
220.301 88.0078 221.602 86.7041 223.208 86.7041 cv
224.813 86.7041 226.115 88.0078 226.115 89.6167 cv
cp
@
221.142 87.6206 mo
225.37 91.6128 li
@
225.32 87.8325 mo
221.094 91.4014 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
285.568 93.7202 mo
(+)sh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
349.794 93.6606 mo
(F)sh
346.189 90.1523 mo
346.189 91.7607 344.887 93.0645 343.281 93.0645 cv
341.676 93.0645 340.375 91.7607 340.375 90.1523 cv
340.375 88.5435 341.676 87.2397 343.281 87.2397 cv
344.887 87.2397 346.189 88.5435 346.189 90.1523 cv
cp
@
341.217 88.1563 mo
345.443 92.1484 li
@
345.395 88.3682 mo
341.168 91.937 li
@
.6 lw
1 lc
1 lj
357.178 93.061 mo
363.178 99.0605 li
.878906 .765625 0 0 cmyk
@
363.178 99.061 mo
363.178 102.061 li
@
369.178 93.061 mo
363.178 99.0605 li
@
0 0 0 1 cmyk
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
299.871 94.4839 mo
(F)sh
305.693 93.3687 mo
311.693 99.3682 li
.878906 .765625 0 0 cmyk
@
311.693 99.3687 mo
311.693 102.369 li
@
317.693 93.3687 mo
311.693 99.3682 li
@
0 0 0 1 cmyk
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
332.663 93.3686 mo
(1  )sh
343.864 93.3686 mo
(   )sh
.664619 lw
0 lc
0 lj
328.839 90.2412 mo
328.839 91.8496 327.536 93.1533 325.931 93.1533 cv
324.325 93.1533 323.024 91.8496 323.024 90.2412 cv
323.024 88.6323 324.325 87.3286 325.931 87.3286 cv
327.536 87.3286 328.839 88.6323 328.839 90.2412 cv
cp
@
323.866 88.2451 mo
328.093 92.2373 li
@
328.044 88.457 mo
323.817 92.0259 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
135.775 124.304 mo
(+1 )
[14.3462 13.3535 0 ]xsh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
169.427 124.666 mo
(F)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
220.072 124.304 mo
(+)sh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
234.732 124.304 mo
(F)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
309.256 124.304 mo
(+)sh
.6 lw
1 lc
1 lj
178.37 120.551 mo
184.37 126.55 li
.878906 .765625 0 0 cmyk
@
184.37 126.551 mo
184.37 129.551 li
@
184.37 120.551 mo
187.37 123.551 li
@
190.37 120.551 mo
184.37 126.55 li
@
.664619 lw
0 lc
0 lj
165.822 121.158 mo
165.822 122.767 164.521 124.07 162.915 124.07 cv
161.31 124.07 160.008 122.767 160.008 121.158 cv
160.008 119.549 161.31 118.246 162.915 118.246 cv
164.521 118.246 165.822 119.549 165.822 121.158 cv
cp
0 0 0 1 cmyk
@
160.85 119.162 mo
165.077 123.154 li
@
165.028 119.374 mo
160.801 122.943 li
@
.6 lw
1 lc
1 lj
240.555 123.189 mo
246.555 129.188 li
.878906 .765625 0 0 cmyk
@
246.555 129.189 mo
246.555 132.189 li
@
252.555 123.189 mo
246.555 129.188 li
@
0 0 0 1 cmyk
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
264.88 123.393 mo
(F)sh
.664619 lw
0 lc
0 lj
261.275 119.884 mo
261.275 121.493 259.973 122.796 258.368 122.796 cv
256.762 122.796 255.461 121.493 255.461 119.884 cv
255.461 118.275 256.762 116.972 258.368 116.972 cv
259.973 116.972 261.275 118.275 261.275 119.884 cv
cp
@
256.302 117.888 mo
260.53 121.88 li
@
260.48 118.1 mo
256.254 121.669 li
@
.6 lw
1 lc
1 lj
272.263 122.793 mo
278.263 128.792 li
.878906 .765625 0 0 cmyk
@
278.263 128.793 mo
278.263 131.793 li
@
284.263 122.793 mo
278.263 128.792 li
@
0 0 0 1 cmyk
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
325.022 124.409 mo
(F)sh
333.965 120.293 mo
339.965 126.292 li
.878906 .765625 0 0 cmyk
@
339.965 126.293 mo
339.965 129.293 li
@
339.965 120.293 mo
342.965 123.293 li
@
345.965 120.293 mo
339.965 126.292 li
@
.664619 lw
0 lc
0 lj
359.967 121.88 mo
359.967 123.489 358.664 124.792 357.059 124.792 cv
355.453 124.792 354.152 123.489 354.152 121.88 cv
354.152 120.271 355.453 118.968 357.059 118.968 cv
358.664 118.968 359.967 120.271 359.967 121.88 cv
cp
0 0 0 1 cmyk
@
354.994 119.884 mo
359.221 123.876 li
@
359.172 120.096 mo
354.945 123.665 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
364.826 124.792 mo
(1  )sh
376.027 124.792 mo
(   )sh
383.63 124.792 mo
(   .)
[2.53418 2.53467 2.53418 0 ]xsh
202.574 120.795 mo
202.574 122.404 201.272 123.708 199.667 123.708 cv
198.062 123.708 196.76 122.404 196.76 120.795 cv
196.76 119.187 198.062 117.883 199.667 117.883 cv
201.272 117.883 202.574 119.187 202.574 120.795 cv
cp
@
197.602 118.799 mo
201.829 122.792 li
@
201.78 119.011 mo
197.553 122.58 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
206.755 124.07 mo
(1 )
[13.3535 0 ]xsh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
296.337 124.369 mo
(1 )
[13.3535 0 ]xsh
293.137 120.86 mo
293.137 122.468 291.835 123.772 290.229 123.772 cv
288.624 123.772 287.323 122.468 287.323 120.86 cv
287.323 119.251 288.624 117.947 290.229 117.947 cv
291.835 117.947 293.137 119.251 293.137 120.86 cv
cp
@
288.164 118.864 mo
292.392 122.856 li
@
292.342 119.076 mo
288.116 122.645 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
383.301 124.879 mo
(1 )
[13.3535 0 ]xsh
380.1 121.371 mo
380.1 122.979 378.799 124.283 377.193 124.283 cv
375.588 124.283 374.286 122.979 374.286 121.371 cv
374.286 119.762 375.588 118.458 377.193 118.458 cv
378.799 118.458 380.1 119.762 380.1 121.371 cv
cp
@
375.127 119.375 mo
379.355 123.367 li
@
379.306 119.586 mo
375.079 123.155 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
118.1 150.304 mo
(=)sh
25.6226 58.6167 mo
25.6226 60.2251 24.3218 61.5288 22.7163 61.5288 cv
21.1108 61.5288 19.8091 60.2251 19.8091 58.6167 cv
19.8091 57.0078 21.1108 55.7041 22.7163 55.7041 cv
24.3218 55.7041 25.6226 57.0078 25.6226 58.6167 cv
cp
@
20.6499 56.6206 mo
24.8784 60.6128 li
@
24.8286 56.8325 mo
20.6021 60.4014 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
4.82373 62.1255 mo
(\()sh
SNAUOG+SymbolMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
8.21875 62.1255 mo
(D)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
15.5332 62.1255 mo
(      1\))
[2.53418 2.53467 2.53418 2.53467 2.53418 2.53418 6.13281 0 ]xsh
SNAUOG+SymbolMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
176.385 150.965 mo
(D)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
183.7 150.965 mo
(\()sh
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
190.683 150.965 mo
(F)sh
.6 lw
1 lc
1 lj
204.366 146.843 mo
210.366 152.843 li
.878906 .765625 0 0 cmyk
@
210.366 152.843 mo
210.366 155.843 li
@
210.366 146.843 mo
213.366 149.843 li
@
216.366 146.843 mo
210.366 152.843 li
@
0 0 0 1 cmyk
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
225.867 150.965 mo
(\)\))
[10.6162 0 ]xsh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
170.335 151.01 mo
(\()sh
.664619 lw
0 lc
0 lj
154.441 147.656 mo
154.441 149.264 153.14 150.568 151.535 150.568 cv
149.929 150.568 148.627 149.264 148.627 147.656 cv
148.627 146.047 149.929 144.743 151.535 144.743 cv
153.14 144.743 154.441 146.047 154.441 147.656 cv
cp
@
149.468 145.66 mo
153.697 149.652 li
@
153.647 145.872 mo
149.42 149.44 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
133.642 151.165 mo
(\(1 )sh
145.705 151.165 mo
(   )sh
153.308 151.165 mo
(  )
[2.53418 0 ]xsh
SNAUOG+SymbolMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
158.376 151.165 mo
(D)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
165.69 151.165 mo
(\))sh
gsave
75.9565 268.811 mo
75.9565 300.984 li
363.887 300.984 li
363.887 268.811 li
75.9565 268.811 li
cp
clp
.330076 lw
2 lc
98.6226 286.374 mo
113.506 269.044 li
.742188 .632813 0 0 cmyk
@
82.3271 269.208 mo
97.2998 286.374 li
@
106.574 276.868 mo
99.2852 269.044 li
@
110.147 272.957 mo
106.574 269.208 li
@
97.9609 298.421 mo
97.9609 288.189 li
@
98.0083 298.635 mo
98.0083 288.403 li
@
98.0083 298.635 mo
98.0083 288.403 li
@
98.0083 298.635 mo
98.0083 288.403 li
@
1.57594 lw
92.6694 281.175 mo
98.0083 287.331 li
0 .988281 1 0 cmyk
@
103.022 281.514 mo
98.0083 287.331 li
@
98.0083 287.331 mo
98.0083 298.635 li
@
.330076 lw
167.237 286.957 mo
182.12 269.626 li
.742188 .632813 0 0 cmyk
@
150.941 269.792 mo
165.914 286.957 li
@
175.188 277.451 mo
167.9 269.626 li
@
178.411 273.539 mo
175.188 269.792 li
@
166.575 299.003 mo
166.575 288.771 li
@
166.623 299.218 mo
166.623 288.986 li
@
166.623 299.218 mo
166.623 288.986 li
@
166.623 299.218 mo
166.623 288.986 li
@
1.57594 lw
161.284 281.757 mo
166.623 287.914 li
0 .988281 1 0 cmyk
@
171.636 282.097 mo
166.623 287.914 li
@
166.623 287.914 mo
166.623 299.218 li
@
.330076 lw
239.728 298.941 mo
239.728 288.708 li
.742188 .632813 0 0 cmyk
@
250.228 269.564 mo
239.728 281.695 li
@
239.728 298.941 mo
239.728 288.708 li
@
239.728 281.695 mo
228.273 269.564 li
@
239.728 298.941 mo
239.728 281.695 li
@
1.57594 lw
239.728 288.708 mo
239.728 298.941 li
0 .988281 1 0 cmyk
@
.330076 lw
208.471 286.787 mo
196.807 269.457 li
.742188 .632813 0 0 cmyk
@
221.242 269.623 mo
209.508 286.787 li
@
208.99 298.833 mo
208.99 288.601 li
@
208.953 299.048 mo
208.953 288.816 li
@
208.953 299.048 mo
208.953 288.816 li
@
208.953 299.048 mo
208.953 288.816 li
@
1.57594 lw
213.136 281.587 mo
208.953 287.744 li
0 .988281 1 0 cmyk
@
205.023 281.927 mo
208.953 287.744 li
@
208.953 287.744 mo
208.953 299.048 li
@
.330076 lw
143.121 290.381 mo
143.073 269.792 li
.742188 .632813 0 0 cmyk
@
1.57594 lw
143.073 284.666 mo
143.198 299.218 li
0 .988281 1 0 cmyk
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: SymbolMT*1 Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /SymbolMT*1 def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 127 /Delta put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/Delta <1C60D8A8C9B7E2CE5B1E125D553FF0A0936129FA60076728B5888FCD
F61E4F705A55061EE0AD56E63DDC0718FF354FCF4444718D5B07E683652AE36C
CFD32696F4142920D7> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SNAUOJ+SymbolMT*1 /SymbolMT*1 findfont ct_VMDictPut
/SNAUOJ+SymbolMT*1*1 
[127{/.notdef}rp /Delta 128{/.notdef}rp]
SNAUOJ+SymbolMT*1 nf
SNAUOJ+SymbolMT*1*1 [9.4556 0 0 -9.4556 0 0 ]msf
75.9561 287.702 mo
(\177)sh
%ADOBeginSubsetFont: MyriadPro-Regular*1 Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /MyriadPro-Regular*1 def
/FontInfo 7 dict dup begin
/Notice (Copyright 1992, 1994, 1997, 2000, 2004 Adobe Systems Incorporated. All rights reserved. Protected by U.S. Patents D454,582. Myriad is either a registered trademark or a trademark of Adobe Systems Incorporated in the United States and/or other countries.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 61 /equal put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/equal <1C60D8A8C9B7C7F3AB181AB0C0D4CCBD039E0B840C2FD0290F361F5F
ADEFB5C66FFFF03997F6A3C47D6E28F621A8DA> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SNAUOK+MyriadPro-Regular*1 /MyriadPro-Regular*1 findfont ct_VMDictPut
/SNAUOK+MyriadPro-Regular*1*1 
[61{/.notdef}rp /equal 194{/.notdef}rp]
SNAUOK+MyriadPro-Regular*1 nf
SNAUOK+MyriadPro-Regular*1*1 [7.94271 0 0 -7.94271 0 0 ]msf
118.789 285.601 mo
(=)sh
.393983 lw
0 lc
149.24 286.783 mo
149.24 285.566 150.21 284.58 151.407 284.58 cv
152.604 284.58 153.574 285.566 153.574 286.783 cv
153.574 288 152.604 288.986 151.407 288.986 cv
150.21 288.986 149.24 288 149.24 286.783 cv
cp
@
153.075 288.189 mo
149.726 285.394 li
@
153.075 285.005 mo
149.942 288.403 li
@
%ADOBeginSubsetFont: MyriadPro-Regular*1 AddGlyphs
%ADOt1write: (1.0.24)
systemdict begin
SNAUOK+MyriadPro-Regular*1 dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7C7F3FCFFFDB16D71949556271E5F2AA88700268763C9A
CD3F9E0997704EFB58B3C8E85BE2CD24BB97B678052C8703CE2AE55> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOK+MyriadPro-Regular*1 /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
/SNAUOK+MyriadPro-Regular*1*1 
[43{/.notdef}rp /plus 17{/.notdef}rp /equal 194{/.notdef}rp]
SNAUOK+MyriadPro-Regular*1 nf
SNAUOK+MyriadPro-Regular*1*1 [7.56448 0 0 -7.56448 0 0 ]msf
183.938 288.368 mo
(+)sh
252.229 288.403 mo
(+)sh
313.014 288.709 mo
(+)sh
227.947 286.651 mo
227.947 285.435 226.979 284.449 225.781 284.449 cv
224.585 284.449 223.614 285.435 223.614 286.651 cv
223.614 287.868 224.585 288.853 225.781 288.853 cv
226.979 288.853 227.947 287.868 227.947 286.651 cv
cp
@
224.113 288.056 mo
227.463 285.263 li
@
224.113 284.874 mo
227.246 288.271 li
@
.330076 lw
2 lc
300.004 298.888 mo
300.004 288.656 li
.742188 .632813 0 0 cmyk
@
310.505 269.511 mo
300.004 281.642 li
@
300.004 298.888 mo
300.004 288.656 li
@
300.004 281.642 mo
288.551 269.511 li
@
300.004 298.888 mo
300.004 281.642 li
@
1.57594 lw
300.004 288.656 mo
300.004 298.888 li
0 .988281 1 0 cmyk
@
.330076 lw
268.748 286.733 mo
257.084 269.404 li
.742188 .632813 0 0 cmyk
@
281.52 269.568 mo
269.786 286.733 li
@
269.268 298.781 mo
269.268 288.548 li
@
269.23 298.995 mo
269.23 288.762 li
@
269.23 298.995 mo
269.23 288.762 li
@
269.23 298.995 mo
269.23 288.762 li
@
1.57594 lw
273.413 281.535 mo
269.23 287.69 li
0 .988281 1 0 cmyk
@
265.301 281.874 mo
269.23 287.69 li
@
269.23 287.69 mo
269.23 298.995 li
@
.393983 lw
0 lc
288.225 286.597 mo
288.225 285.381 287.255 284.395 286.058 284.395 cv
284.861 284.395 283.892 285.381 283.892 286.597 cv
283.892 287.814 284.861 288.8 286.058 288.8 cv
287.255 288.8 288.225 287.814 288.225 286.597 cv
cp
0 0 0 1 cmyk
@
284.39 288.003 mo
287.739 285.209 li
@
284.39 284.82 mo
287.522 288.218 li
@
.330076 lw
2 lc
276.664 276.556 mo
271.649 269.208 li
.742188 .632813 0 0 cmyk
@
340.341 287.927 mo
355.225 270.599 li
@
324.045 270.763 mo
339.017 287.927 li
@
348.292 278.421 mo
341.003 270.599 li
@
351.838 274.482 mo
348.292 270.763 li
@
339.679 299.975 mo
339.679 289.743 li
@
339.727 300.189 mo
339.727 289.957 li
@
339.727 300.189 mo
339.727 289.957 li
@
339.727 300.189 mo
339.727 289.957 li
@
1.57594 lw
334.388 282.729 mo
339.727 288.884 li
0 .988281 1 0 cmyk
@
344.739 283.068 mo
339.727 288.884 li
@
339.727 288.884 mo
339.727 300.189 li
@
.330076 lw
363.045 291.353 mo
363.092 270.763 li
.742188 .632813 0 0 cmyk
@
1.57594 lw
363.092 285.637 mo
362.967 300.189 li
0 .988281 1 0 cmyk
@
.393983 lw
0 lc
356.925 287.754 mo
356.925 286.539 355.955 285.552 354.759 285.552 cv
353.562 285.552 352.592 286.539 352.592 287.754 cv
352.592 288.97 353.562 289.957 354.759 289.957 cv
355.955 289.957 356.925 288.97 356.925 287.754 cv
cp
0 0 0 1 cmyk
@
353.091 289.16 mo
356.44 286.367 li
@
353.091 285.977 mo
356.223 289.375 li
@
.330076 lw
2 lc
243.964 276.556 mo
237.767 269.208 li
.742188 .632813 0 0 cmyk
@
grestore
.746094 .675781 .667969 .898438 cmyk
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
1.37744 194.265 mo
(>)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
8.01367 194.265 mo
(2)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
14.6504 194.265 mo
(\))sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
21.2866 194.265 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B795A0BE9061E092EDDF4A8861318B5E3D86F92771C85D9207
6E3DBCC15E5390694B838018ACCF642AE093AE34330843C38E21C97DCD60EDB8
0E6F8FB0608D173616A861A955B876FDC3E4BFC71A5E6C5F7C4B74272AAAA8EE
C732969C4F0E21D3CFA3B75FE618180F31F3EF7E123BB551BAA40E7B55ADE687
31CD6B39F1041B95A715E7C86AEA4B86CAE5AFA9D500148FA9FE7CB10F31F7F3
75F2C80B4C90A246A4C10B9A9189D4B68FD5D8582510738190E0282AC3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two 11{/.notdef}rp /greater 19{/.notdef}rp /R 4{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /f /.notdef 
/h /i 2{/.notdef}rp /l /m /n /o /p 
/.notdef /r /s /t /u /v 2{/.notdef}rp /y 
134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
27.9233 194.265 mo
(R)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
33.7456 194.265 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
40.3823 194.265 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
47.0186 194.265 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
52.8413 194.265 mo
(r)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B795A0B18DA43400A1B0D6A51AB61780BCEE3C637E9629A015
63D2A0B70DB18B88044CEF5CE81245F3B47C9B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two 11{/.notdef}rp /greater 19{/.notdef}rp /R 4{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /f /.notdef 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
59.4775 194.265 mo
(k)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
66.1143 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
71.937 194.265 mo
(2)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
78.5732 194.265 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
85.2095 194.265 mo
(2)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
91.8462 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
97.6685 194.265 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
104.305 194.265 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
110.941 194.265 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
116.764 194.265 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
123.4 194.265 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
130.037 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
135.86 194.265 mo
(b)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
142.496 194.265 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
149.132 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
155.769 194.265 mo
(e)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B795A0B1F86C8374AD43DE3AC74570E753418AF7625B33881F
CEFE310EDDA627AA9D25C5B98B28A56CE1B5B6FEEBF14F13B23B353794AD9C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two 11{/.notdef}rp /greater 19{/.notdef}rp /R 4{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /f /.notdef 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /.notdef 
/x /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
161.592 194.265 mo
(x)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
168.228 194.265 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
174.864 194.265 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
180.687 194.265 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
187.324 194.265 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
193.96 194.265 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
199.783 194.265 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
206.419 194.265 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B795A0BEF5FFA7C479FA39F415C58A06D4206960858EB27881
92545B75BA7A8180800723E5B9F08B117292A2B26E7DC1EF7DD749E44443E972
0A4700873CEB6197209E28> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two 11{/.notdef}rp /greater 19{/.notdef}rp /R 4{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /f /.notdef 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
213.055 194.265 mo
(w)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
219.692 194.265 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
225.515 194.265 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
232.151 194.265 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
238.787 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
244.61 194.265 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
251.247 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
257.883 194.265 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
263.706 194.265 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
270.342 194.265 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
276.978 194.265 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
283.615 194.265 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
289.437 194.265 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
296.074 194.265 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
302.71 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
308.533 194.265 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
315.169 194.265 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
321.805 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
327.628 194.265 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
334.264 194.265 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
340.901 194.265 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
347.538 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
353.36 194.265 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
359.997 194.265 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
366.633 194.265 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
372.456 194.265 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
379.092 194.265 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
385.728 194.265 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
391.551 194.265 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
398.187 194.265 mo
(n)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B795A0BE3232D423D711804A493E8E88B12B3C9505DC74F119
7CB7D8C92D3B86F5E8CE1F7DBCF3E529384392A764F196BC231451A9EB2EED0C
1F850C10A77953DF5910C6C7325DA57ADC80CB8CD4E3C89E6369B6F14C0F9FB7
DDE8F17E797322063BD1D23F509784119611544D89D99529D7918F4676FB8488
C5047DDF75F857ACD74A6A7A20774B3B13C33E5C121AF390FE891E4788D7967A
7EFCE467D1F9055FB137D3BFB6F691F8881C79786042E63CA036DCDB8F737C6E
599386B06BF8B5EE53E8125EEF456EC8AA9D46F15BADA5E5C7FB8AA0EDFA31D8
2537B320CC04DBEC1DD1C14CE1A671719ACD5E7395311EC40C7A5E5B549F41BC
A840143869FB413226D82D55DB09837A4BDC48855768431404BD1E0A5D65AD55
221C6BD8B5A8F277FBB54700EE8D7DFCB7EAEFE9AA5456BEF35DDE4D9BBAACEF
7BBD666768CB44C7DA4C5E8C11A52DB80724E47BBE5FAB20812DF000F877DDA3
0A88DF77FD9F459222C8AA66513390CDDB15B402FF0F8313693242A0C1B6803D
C3C958C10F0B5B5E3594678C4B7E9227C40F0DC7AE6C1B24AE91E5A0D6059251
EE4EE9BE0FB49FC3D6BA4EB60E2D6DB813A6CB9FF18B95D59598AF6B03A707D1
59B3DEB4A0F708AFFF8876BD662E00C990AC0DC29ED0B99E0D0EE7F6388C5CDD
F5F41A31CF00E6E35CF424C56C993D1F426AE7A22098D161B25740396F77843D
40F81B9E58E3F814C8D26989315135B193706E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two 11{/.notdef}rp /greater 19{/.notdef}rp /R 4{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
404.824 194.265 mo
(g)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
411.46 194.265 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
417.283 194.265 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
423.919 194.265 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
430.555 194.265 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
436.378 194.265 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
442.354 194.265 mo
( )sh
.85 .5 0 0 cmyk
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/J <1C60D8A8C9B795A0AA8667839B8988FD5F1999C90B0A448EA492E6C786FC
78E471C470E266A84F3EBE335E0EFD98D1D60A3DDA19C669CA5ABB2675F577D9
0E1FADBC0E9ED298FA5CFC40C9C688FE8E87A15277723615CB9D048251EB48FB
60D76A8BD18016C4561A9BCA5E98FB7A27> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 74 /J put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two 11{/.notdef}rp /greater 11{/.notdef}rp /J 7{/.notdef}rp /R 
4{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /.notdef /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w /x /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
1.37744 221.671 mo
(J)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
8.01367 221.671 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
14.6504 221.671 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
21.2866 221.671 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
27.9233 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
33.7456 221.671 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
40.3823 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
47.0186 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
52.8413 221.671 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
59.4775 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
66.1143 221.671 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
71.937 221.671 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
78.5732 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
85.2095 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
91.8462 221.671 mo
(x)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
97.6685 221.671 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
104.305 221.671 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
110.941 221.671 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
116.764 221.671 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
123.4 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
130.037 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
135.86 221.671 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
142.496 221.671 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
149.132 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
155.769 221.671 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
161.592 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
168.228 221.671 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
174.864 221.671 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
180.687 221.671 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
187.324 221.671 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
193.96 221.671 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
199.783 221.671 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
206.419 221.671 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
213.055 221.671 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
219.692 221.671 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
225.515 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
232.151 221.671 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
238.787 221.671 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
244.61 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
251.247 221.671 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
257.883 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
263.706 221.671 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
270.342 221.671 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
276.978 221.671 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
283.615 221.671 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
289.437 221.671 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
296.074 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
302.71 221.671 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
308.533 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
315.169 221.671 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
321.805 221.671 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
327.628 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
334.264 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
340.901 221.671 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
347.538 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
353.36 221.671 mo
(W)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
359.997 221.671 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
366.633 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
372.456 221.671 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
379.092 221.671 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
385.728 221.671 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
391.551 221.671 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
398.187 221.671 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
404.824 221.671 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
411.46 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
417.283 221.671 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
423.919 221.671 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
430.555 221.671 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
436.378 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
443.014 221.671 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
449.651 221.671 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
455.473 221.671 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
462.11 221.671 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
468.747 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
475.383 221.671 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
481.206 221.671 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
487.842 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
494.478 221.671 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
500.301 221.671 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
506.937 221.671 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
1.37744 234.96 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
8.01367 234.96 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
14.6504 234.96 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
21.2866 234.96 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
27.9233 234.96 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B795A0BE008FAEDA13779C7E0BC70EEBD400B570F013E9E
034FC6957F7FFC9531A9E2930EDC00A80EAF0C85EE38099AD15B994048F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two /.notdef /four 9{/.notdef}rp /greater 11{/.notdef}rp /J 
7{/.notdef}rp /R 4{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /.notdef /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
33.7456 234.96 mo
(4)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
40.3823 234.96 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
47.0186 234.96 mo
(1)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
52.8413 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
59.4775 234.96 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
66.1143 234.96 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
71.937 234.96 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
78.5732 234.96 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/j <1C60D8A8C9B795A0993206B9CCA3D568FC0350F345DBBE8005B672DB8674
B85BBF08097B9D84CF711D50C1814E449F34F2C325D4AB9110661AE15330680B
63F4CB2789EE14F62BC07E0954E217DB78D13A53D03FD5E379C543A6BEA1A9D8
56EECFCB89B8ABC7F30CDE59A42FC197F98AB002746F8E8D75B96B47EC3D876E
663EA8BF77880131ABD5BC641094F180DE70B8AE21E1BA8AE15C17451C18A518
29F42FD41B8DD36BEE3A1A5013970593AA57DCC280CA416C88D1892DF014688F
76545387EA83652CD2C9C165F9A2B5BE53E1D64DE9CCC3C97CFC966491077B72
433475F59541> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 106 /j put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two /.notdef /four 9{/.notdef}rp /greater 11{/.notdef}rp /J 
7{/.notdef}rp /R 4{/.notdef}rp /W 9{/.notdef}rp /a /b /c 
/d /e /f /g /h /i /j /k 
/l /m /n /o /p /.notdef /r /s 
/t /u /v /w /x /y 134{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
85.2095 234.96 mo
(j)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
91.8462 234.96 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
97.6685 234.96 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
104.305 234.96 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
110.941 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
116.764 234.96 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
123.4 234.96 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
130.037 234.96 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
135.86 234.96 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
142.496 234.96 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
149.132 234.96 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
155.769 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
161.592 234.96 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
168.228 234.96 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
174.864 234.96 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
180.687 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
187.324 234.96 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
193.96 234.96 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
199.783 234.96 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
206.419 234.96 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
213.055 234.96 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
219.692 234.96 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
225.515 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
232.151 234.96 mo
(t)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B795A0BEC0B38BC1825E3A65955E90A0B017BC825EA6A34F50
A60CB823CF3E13FEF198> |-
/quoteright <1C60D8A8C9B795A0B12CE4CAB62A9989C9E47EEDB92B0059399
F58E849737B7932B0AD8C3AD4D0560D686D3BABC4E033C4B07C0B8F3C66F799D
6ACD58AAD33D62886F7587761579F62A4D453EE802A8F9DA800DE069DDC7A71C
13BA3D61E6F91B96140FDCF7A742A5FA8C675B290475CBC085B2C80AFBF832A7
2C055551A714BB438859FBBA7B61E9908465445BD9F6D83677F87F3628C6DBE0
912> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 70 /F put
dup 146 /quoteright put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two /.notdef /four 9{/.notdef}rp /greater 7{/.notdef}rp /F 
3{/.notdef}rp /J 7{/.notdef}rp /R 4{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /.notdef 
/r /s /t /u /v /w /x /y 
24{/.notdef}rp /quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
1.37744 248.913 mo
(time to put in the F\222s just now--but maybe Frank was going to do that anyway.)
[6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 
6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 
6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 
6.39209 6.39209 6.39258 6.39209 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 
6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 
6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 
6.39258 6.39258 6.3916 6.39258 0 ]xsh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
238.893 234.96 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
244.716 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
251.352 234.96 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
257.989 234.96 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
263.811 234.96 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
270.448 234.96 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
277.084 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
283.72 234.96 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
289.543 234.96 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
296.179 234.96 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
302.816 234.96 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
308.638 234.96 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
315.275 234.96 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
321.912 234.96 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
327.734 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
334.371 234.96 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
341.007 234.96 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
347.643 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
353.466 234.96 mo
(R)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
360.102 234.96 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
366.739 234.96 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
372.561 234.96 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
379.198 234.96 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
385.834 234.96 mo
(k)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
391.657 234.96 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
398.293 234.96 mo
(2)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
404.93 234.96 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
411.566 234.96 mo
(2)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B795A0B15FEE80EC17A7243A8F15C0DFF5F6E0D5A7ADB4A8BA
9358FDA1D4A7D447CF3D8F4BA0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two /.notdef /four 9{/.notdef}rp /greater 7{/.notdef}rp /F 
2{/.notdef}rp /I /J 7{/.notdef}rp /R 4{/.notdef}rp /W 9{/.notdef}rp 
/a /b /c /d /e /f /g /h 
/i /j /k /l /m /n /o /p 
/.notdef /r /s /t /u /v /w /x 
/y 24{/.notdef}rp /quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
417.389 234.96 mo
(.  I don\222t have)
[6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 
6.39258 6.3916 0 ]xsh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
423.252 234.96 mo
( )sh
.746094 .675781 .667969 .898438 cmyk
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B795A0BEC84A4C8D1D9B04C8466C4F4ACDD1E948B924DD
9C7E2820AFEA9C4BEA1B66A13D24BD0CA76610E38F1A2C08DC0D22C20697EF0F
6C914967B1CA0A922D6E08D70085A16210D2D5F4850081094E7D6048A5ABAB3C
4B2B7EE1412D4B4B71EAADF9F1593BE8CB8D469F21EE155B9454409EA4AAC43A
5A33AD62E166FCC8AD845FB33C47EB9855A0343BE32F53E15D6D669D97073BD1
4102D40A2495C68D485DC2FD9242A9F714482AF26F18A480BA68E8E018B6FE45
1364327E4B18886A041B8F607ABB308F911C68A9C8A6BD4037A27DFE1C494D87
37148925DF4311118818C538E8F29FD5D0D8FA738FE98FDD7F49759E977FE2C7
8EB9658201EB9D2057E60C11D77FE705E74CEE3DB76470EFB002DAC3883D964E
E7212972CF6E3B> |-
/A <1C60D8A8C9B795A0B1C7E1C64E773037D84E5C98A0E62CAC0CC7F1A9159F
18AF4652F30733352866833292C49FEC7F6323ADCA59C6F8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 51 /three put
dup 65 /A put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two /three /four 9{/.notdef}rp /greater 2{/.notdef}rp /A 
4{/.notdef}rp /F 2{/.notdef}rp /I /J 7{/.notdef}rp /R 4{/.notdef}rp 
/W 9{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /j /k /l /m /n 
/o /p /.notdef /r /s /t /u /v 
/w /x /y 24{/.notdef}rp /quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
4.42676 351.226 mo
(>)sh
11.063 351.226 mo
(3)sh
17.6997 351.226 mo
(\))sh
24.3359 351.226 mo
( )sh
30.9727 351.226 mo
(A)sh
36.7949 351.226 mo
( )sh
43.4316 351.226 mo
(d)sh
50.0679 351.226 mo
(i)sh
55.8906 351.226 mo
(a)sh
62.5269 351.226 mo
(g)sh
69.1636 351.226 mo
(r)sh
74.9863 351.226 mo
(a)sh
81.6226 351.226 mo
(m)sh
88.2588 351.226 mo
(a)sh
94.8955 351.226 mo
(t)sh
100.718 351.226 mo
(i)sh
107.354 351.226 mo
(c)sh
113.991 351.226 mo
( )sh
119.813 351.226 mo
(i)sh
126.45 351.226 mo
(l)sh
133.086 351.226 mo
(l)sh
138.909 351.226 mo
(u)sh
145.545 351.226 mo
(s)sh
152.182 351.226 mo
(t)sh
158.818 351.226 mo
(r)sh
164.641 351.226 mo
(a)sh
171.277 351.226 mo
(t)sh
177.914 351.226 mo
(i)sh
183.736 351.226 mo
(o)sh
190.373 351.226 mo
(n)sh
197.009 351.226 mo
( )sh
202.832 351.226 mo
(i)sh
209.468 351.226 mo
(n)sh
216.104 351.226 mo
(v)sh
222.741 351.226 mo
(o)sh
228.564 351.226 mo
(l)sh
235.2 351.226 mo
(v)sh
241.836 351.226 mo
(i)sh
247.659 351.226 mo
(n)sh
254.296 351.226 mo
(g)sh
260.932 351.226 mo
( )sh
266.755 351.226 mo
(p)sh
273.392 351.226 mo
(a)sh
280.027 351.226 mo
(i)sh
286.664 351.226 mo
(n)sh
292.486 351.226 mo
(t)sh
299.123 351.226 mo
(e)sh
305.76 351.226 mo
(d)sh
311.582 351.226 mo
( )sh
318.219 351.226 mo
(t)sh
324.854 351.226 mo
(r)sh
330.678 351.226 mo
(e)sh
337.313 351.226 mo
(e)sh
343.95 351.226 mo
(s)sh
350.587 351.226 mo
( )sh
356.409 351.226 mo
(c)sh
363.046 351.226 mo
(o)sh
369.683 351.226 mo
(u)sh
375.505 351.226 mo
(l)sh
382.142 351.226 mo
(d)sh
388.777 351.226 mo
( )sh
394.601 351.226 mo
(b)sh
401.236 351.226 mo
(e)sh
407.873 351.226 mo
(n)sh
414.51 351.226 mo
(e)sh
420.332 351.226 mo
(f)sh
426.969 351.226 mo
(i)sh
433.604 351.226 mo
(t)sh
439.591 351.226 mo
( )sh
4.42676 364.515 mo
(t)sh
11.063 364.515 mo
(h)sh
17.6997 364.515 mo
(e)sh
24.3359 364.515 mo
( )sh
30.9727 364.515 mo
(c)sh
36.7949 364.515 mo
(o)sh
43.4316 364.515 mo
(f)sh
50.0679 364.515 mo
(r)sh
55.8906 364.515 mo
(e)sh
62.5269 364.515 mo
(e)sh
69.1636 364.515 mo
(n)sh
74.9863 364.515 mo
(e)sh
81.6226 364.515 mo
(s)sh
88.2588 364.515 mo
(s)sh
94.8955 364.515 mo
( )sh
100.718 364.515 mo
(t)sh
107.354 364.515 mo
(h)sh
113.991 364.515 mo
(e)sh
119.813 364.515 mo
(o)sh
126.45 364.515 mo
(r)sh
133.086 364.515 mo
(e)sh
138.909 364.515 mo
(m)sh
145.545 364.515 mo
( )sh
152.182 364.515 mo
(2)sh
158.818 364.515 mo
(.)sh
164.641 364.515 mo
(4)sh
171.277 364.515 mo
(.)sh
177.169 364.515 mo
( )sh
.85 .5 0 0 cmyk
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
4.42676 378.625 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
4.42676 391.921 mo
(W)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
11.063 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
17.6997 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
24.3359 391.921 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
30.9727 391.921 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
36.7949 391.921 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
43.4316 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
50.0679 391.921 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
55.8906 391.921 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
62.5269 391.921 mo
(y)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
69.1636 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
74.9863 391.921 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
81.6226 391.921 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
88.2588 391.921 mo
(v)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
94.8955 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
100.718 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
107.354 391.921 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
113.991 391.921 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
119.813 391.921 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
126.45 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
133.086 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
138.909 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
145.545 391.921 mo
(x)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
152.182 391.921 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
158.818 391.921 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
164.641 391.921 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
171.277 391.921 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
177.914 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
183.736 391.921 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
190.373 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
197.009 391.921 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
202.832 391.921 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
209.468 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
216.104 391.921 mo
(4)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
222.741 391.921 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
228.564 391.921 mo
(1)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
235.2 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
241.836 391.921 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
247.659 391.921 mo
(1)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/five <1C60D8A8C9B795A0BEFB2A0E70ED3251135194DA4298E3D268C5D28FF
7D8BF29E28A18345A94E9E8BE8C04859AC66BFC7165E912F48B95EEDED959AAB
891E2902B6891B576A5D285A343D63C895B53F78FB01974F26481DC7B6409785
53F60AB1C9EEAED6DFE1A0206B636444CBD54D9AC7E915F998B650BFEE6C207D
FA2F417118A2217EA3E299388BF421DD4C43513DEBBD264A4916A0BD6AA3ACF3
6B0D732E056635566EF4AFDB2B32CD9127E8983> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 53 /five put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 3{/.notdef}rp /hyphen /period 2{/.notdef}rp 
/one /two /three /four /five 8{/.notdef}rp /greater 2{/.notdef}rp 
/A 4{/.notdef}rp /F 2{/.notdef}rp /I /J 7{/.notdef}rp /R 
4{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d /e 
/f /g /h /i /j /k /l /m 
/n /o /p /.notdef /r /s /t /u 
/v /w /x /y 24{/.notdef}rp /quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
254.296 391.921 mo
(5)sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/comma <1C60D8A8C9B795A0B12CE7165843DD69806ABF95192C12714B84FEB2
FB85668E0D3919FE523E5A90EECFB4F7A397E2255EC00B99741D5C8475B40554
075828FA17EB220A8EDD27FB978AC4BC69E5461D0419D4075DD74C09E9383E16
6BC21014AB7C51A32825161F061C45FA8927053BBD904CB4CFE3AEA0D08FE407
5C2054CBE1D82335AEDE23233FF8AE8F97EA921CAAB5439D656CB7466620E1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 44 /comma put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four /five 8{/.notdef}rp /greater 
2{/.notdef}rp /A 4{/.notdef}rp /F 2{/.notdef}rp /I /J 7{/.notdef}rp 
/R 4{/.notdef}rp /W 9{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /j /k /l 
/m /n /o /p /.notdef /r /s /t 
/u /v /w /x /y 24{/.notdef}rp /quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
260.932 391.921 mo
(,)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
266.755 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
273.392 391.921 mo
(w)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
280.027 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
286.664 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
292.486 391.921 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
299.123 391.921 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
305.76 391.921 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
311.582 391.921 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
318.219 391.921 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
324.854 391.921 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
330.678 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
337.313 391.921 mo
(j)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
343.95 391.921 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
350.587 391.921 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
356.409 391.921 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
363.046 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
369.683 391.921 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
375.505 391.921 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
382.142 391.921 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
388.777 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
394.601 391.921 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
401.236 391.921 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
407.873 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
414.51 391.921 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
420.332 391.921 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
426.969 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
433.604 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
439.428 391.921 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
446.063 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
452.7 391.921 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
458.522 391.921 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
465.159 391.921 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
471.796 391.921 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
478.433 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
484.255 391.921 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
490.892 391.921 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
497.527 391.921 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
4.42676 406.039 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
11.063 406.039 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
17.6997 406.039 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
24.3359 406.039 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
30.9727 406.039 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
36.7949 406.039 mo
(s)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
43.4316 406.039 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
50.0679 406.039 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
55.8906 406.039 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
62.5269 406.039 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
69.1636 406.039 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
74.9863 406.039 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
81.6226 406.039 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
87.4736 406.039 mo
( )sh
.746094 .675781 .667969 .898438 cmyk
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
0 450.476 mo
(>)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
6.63623 450.476 mo
(4)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
13.2729 450.476 mo
(\))sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
19.9092 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
26.5459 450.476 mo
(A)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
32.3682 450.476 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
39.0049 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
45.6411 450.476 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
51.4639 450.476 mo
(x)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
58.1001 450.476 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
64.7368 450.476 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
70.5596 450.476 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
77.1958 450.476 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
83.832 450.476 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
90.4688 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
96.291 450.476 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
102.928 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
109.564 450.476 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
115.387 450.476 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B795A0BE30D4489A0B65EB7280BDF04F54FE841C17DB15981B
0BF579C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four /five 8{/.notdef}rp /greater 
2{/.notdef}rp /A 4{/.notdef}rp /F 2{/.notdef}rp /I /J 7{/.notdef}rp 
/R /.notdef /T 2{/.notdef}rp /W 9{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /.notdef /r 
/s /t /u /v /w /x /y 24{/.notdef}rp 
/quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
122.023 450.476 mo
(T)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
128.66 450.476 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
134.482 450.476 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
141.119 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
147.755 450.476 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
154.392 450.476 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
160.214 450.476 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
166.851 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
173.487 450.476 mo
(3)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
179.31 450.476 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
185.946 450.476 mo
(1)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
192.583 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
198.405 450.476 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
205.042 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
211.678 450.476 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
218.314 450.476 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
224.137 450.476 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
230.773 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
237.41 450.476 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
243.232 450.476 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
249.869 450.476 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
256.505 450.476 mo
(r)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
262.328 450.476 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
268.965 450.476 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
275.601 450.476 mo
(y)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
282.237 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
288.06 450.476 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
294.696 450.476 mo
(h)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
301.333 450.476 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
307.155 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
313.792 450.476 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
320.428 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
326.251 450.476 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
332.887 450.476 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
339.523 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
346.16 450.476 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
351.982 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
358.619 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
365.256 450.476 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
371.078 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
377.715 450.476 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
384.351 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
390.174 450.476 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
396.81 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
403.446 450.476 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
410.083 450.476 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
415.905 450.476 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
422.542 450.476 mo
(c)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
429.178 450.476 mo
(t)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
435.001 450.476 mo
(i)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
441.637 450.476 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
448.273 450.476 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
454.266 450.476 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
0 463.765 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
6.63623 463.765 mo
(n)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
13.2729 463.765 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
19.9092 463.765 mo
(a)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
26.5459 463.765 mo
( )sh
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/H <1C60D8A8C9B795A0BE2479AE06A9CEE42125B000730EEDA6AF3FF7DBB39C
63A2E6704B3222DF0421B323DA82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 72 /H put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four /five 8{/.notdef}rp /greater 
2{/.notdef}rp /A 4{/.notdef}rp /F /.notdef /H /I /J 
7{/.notdef}rp /R /.notdef /T 2{/.notdef}rp /W 9{/.notdef}rp /a 
/b /c /d /e /f /g /h /i 
/j /k /l /m /n /o /p /.notdef 
/r /s /t /u /v /w /x /y 
24{/.notdef}rp /quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
32.3682 463.765 mo
(H)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
39.0049 463.765 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
45.6411 463.765 mo
(p)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
51.4639 463.765 mo
(f)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
58.1001 463.765 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
64.7368 463.765 mo
(m)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
70.5596 463.765 mo
(o)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
77.1958 463.765 mo
(d)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
83.832 463.765 mo
(u)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
90.4688 463.765 mo
(l)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
96.291 463.765 mo
(e)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
102.928 463.765 mo
(.)sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
108.797 463.765 mo
( )sh
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
0 477.89 mo
( )sh
.85 .5 0 0 cmyk
%ADOBeginSubsetFont: Calibri Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Calibri def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 84 /T put
def
/FontBBox {-476 -194 1214 952} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C69233
4252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244
BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5
D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0
693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F53
02816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98
D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6F
ECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269
E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F
3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997
B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7
BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C0324
49885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D
5A11AF573B17CF9F38> |-
/T <1C60D8A8C9B7544E0B190CCF17AC40FC5FB79E17D90F4D9996E4640AEC72
0DEE3DD9AB43080A2A2747E4FEB9D27010F0C393805606540F888AB7849F19EB
2260FBF5614F1BF356A0D83CA6E9E401826D12829CB1B7D4D1A2437297EAD434
CA7A5112006DA550CD6F8ABF5CB7D09F31273FF39DA8643484195F09918F574C
6BDB08CEC3EACB50E1F97A19618B6DB73370B0F21CA3B501ECD63174F03F4E7B
6D0BF229F39E4FEFE132F59B547C9249B01AC066ABD268352D20498D98E84766
9D322216405EAED7> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/SNAUOL+Calibri /Calibri findfont ct_VMDictPut
/SNAUOL+Calibri*1 
[84{/.notdef}rp /T 171{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
.0078125 492.007 mo
(T)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB7C5767A7762DBDEADBE99BB9DD1507EDF7CB5B44C
FB5AE7F50CE798A09AFFC2F8A1E21C8BA96A3248C2464366A8BF234A7465BA6B
08C9AB7474ED94583744D778660448C601BC1D9C2E8788B65F173F45C272BBE3
CD6AC55E870CEE94D478E3D51C8A2E608A02982A9D048914B7569407A83B9D3C
DA9FE7ECB2AF4F7816F117CC85330A774976280DEB1A8C317A8A170186F61B3F
5FC1D130A0DA1A6A5AE24C0FB08191CD76F47EDEDB0EAC8DE369D515B3B14661
497F94A2412A37D63D31ABC4AE50DD37B3DDB58CFDBCD2A17246A6058BA85E12
DAD2711083774A128264C809F70CFC31D164703798D4642E5D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 104 /h put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[84{/.notdef}rp /T 19{/.notdef}rp /h 151{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
5.8291 492.007 mo
(h)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A9C0DC897A849B356D31E2254DD2E5BDA9320580C3E0839C
715C00D9D27B634D4BEEF0FE1F6AD3CCFBCCE9FDE38A84A563FB744619F62FCB
F09ACBF7337FE050BE068BCA744FAC4471C4195B7CEC353B3CAECCCEC91AAE22
E8955469041D97A8837F9398CE520ABB35C688EEF4229957FD92C79439BF99D2
4AD4D8B3CAC5B975D966AB01856E8FAEAE3BEB03E1CC76DF299391134BFB02DD
61F6D73B2AAAA0D725ABCA9FE504FB3A1EC1E2449C5D921F0DE45A9278013CF0
832F39E3771D2B318D27AFF5849066ED5A64AA8E3E404B520DE5F08BE74DD8D5
8BD1B0FA461EBCBB4DC632B680CFAE62B61DD4FC04FC017D59147CB2E0FBEAAF
A402B5BFBD0C4F13F4BD9227D1353527A23B3EF7CA3E7F599CB51DDAF43A5674
78E4C81011D9D8D5DAD9CB1F948F5FCE67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[84{/.notdef}rp /T 16{/.notdef}rp /e 2{/.notdef}rp /h 151{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
12.4609 492.007 mo
(e)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7347873EC11B675AA6F6B461106EA2C61A0AE571750A08267
9294B529694EFA74202690239BCD02BDE93B33BD8DE0F0F0056B04093EE6C4E8
3D6F00E22E61E0A53509E628E3614EF2EF2CA3A8502F22A560E46ED3E4AED0BF
D271CCE464114B6332D17C4A046EF74FFF1283283A642C8C06B85A0D72357B56
65CD862A8E3D30EFFEE242F88B9C12DF917A74252DB462B49970474974786963
8F8FD8E70AF4405F95B11DFD154B7101933A31068AA1E65CC021277CCB9EC0EA
A7B978A081D1A4252A6693984AAF2CEC4413666DCF8B310A71A67C6E7B1DB954
E186EA16C83551DD0516966C156876A3DE36ED7253FFBBC1504668DC98301370
300A04E6753189718288CD7EF0ED409765A888272FDB25977C8A74BC113E188B
3DF6A69F7851A7E60496291AA0B15532572787EAC7F32F09F1E72589E0E74E03
49313472D872E64E7DB78BAB05598FE04B70E52D818F2F7B0B56A5688299352E
62F16B011595A7D7701FD641BB2FCFCADB2E33263B8A208C4183E753AD5C2586
1BF542F2009EA70BB7A67B3BE61085D37469DCDCB97CB2B41A0E2B4DB3BE67C2
BA9A1482E51611AB708AAB8BC978B06758006F3287DD3A3CABA09A9F59A21B0D
386F88> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[84{/.notdef}rp /T 16{/.notdef}rp /e 2{/.notdef}rp /h 10{/.notdef}rp /s 
140{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
19.0952 492.007 mo
(se)
[4.87207 0 ]xsh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B888C146> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 16{/.notdef}rp /e 2{/.notdef}rp /h 
10{/.notdef}rp /s 140{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
30.165 492.007 mo
( )sh
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
32.6572 492.007 mo
(e)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/x <1C60D8A8C9B76A0D39202D65B3E28787C1CC43B503732F31391DBCE572A2
CA2079F64BC5B594607AA87D000626A2545C2F92C4488974BEE02BFDB5EF846B
F92A6767B071A1575D7917AC4A860992133465690B1A7D35F13489CCB65C68A5
51A50F7D5FE7268F974AE88AF02F0676DC68E49F56F9749803892469EB313C81
6FA79F4E722677598E3E97FE77F7E623BDC63C2F2C92A6A872F78617F1E4F886
E2D0FE3546DBCDFFFA5E4DDD143D076BF94A42BE3EB61D005FC9D628F696E707
AC2730FB246E5D69586A7207A5C66CA927382E61516706448C9FC049414B97AF
ACB4BF470D99F74F500BB6FED6F03C0B03924527D6EBE063E7443300BBFAE73D
541C5D7B5CED7E3DA24F8B93E2A8ABB9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 120 /x put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 16{/.notdef}rp /e 2{/.notdef}rp /h 
10{/.notdef}rp /s 4{/.notdef}rp /x 135{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
38.4819 492.007 mo
(x)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75CBB53379352952B97D633633CE49B1F5650B8155AFDFA57
F94D359804093E4912F3B89577762AB5877203F1CDAD240C521DE74183EDA105
01967DB6487C182138B12C453C5DB9629F7EF021028117511EFEAB941896E32D
9CC68D6E66540771999A4E30C4826A52D7536EDDF7E00016C895CE43408B44BE
33E2D9A6163827E05AB8B1144BC909A74F6D7828DE6E08164A25E320920E3540
20A41D59E9E3B008A20EC107F9E18745DE21F9AF293EB0F319B529D840D8BA93
19522EDDCACA13336C059581181C082BF0D7F4117FAEB429D871E099AEE4394F
ED2FB3A1C712D1799055BA832AD846B95DA8BB4E63B103C908FA309FAA3B7814
0CE2A22AE06B2A1EA5BD3AA13DD1ED75DA4AD37493780FE662EF5D1B53C4AF41
845C0C77655CE94F0C9DEBE29248A1EAAF3A6EA79D5BB5C090457B818DD62F70
E197CEA94F90229AB4FD685A1ADB5E4E4C1DBDB28AA3854323EE2FD22692EC70> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 
2{/.notdef}rp /h 10{/.notdef}rp /s 4{/.notdef}rp /x 135{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
44.2881 492.007 mo
(a)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6D24F7D3842850F4949AEB6B9100F2B78F4C8889450CED823
786FEB32A1B63E88AD56EE02413123CB64791A93EF92133FE4595DA2691E3035
F9F72C6031AE554C5E100D6D83A5170AEAC660F3CD2D2E423C32E393EEDCE69B
38CE6373F6B6777FFB71A30474298882FF21A6474EA00B23874CB701D4949FDA
B683EF52B401CF01FBFB5320858391C36D1B0A5131B6AD88B31FBA5AF7369B53
8683192205F94F973772FC0D1A80750F5CA55E65F4A8760D9FFB5A3E462EB76A
F894987A3AB123C31C6F61A2DE381C11A73194BB9FA663DEB4E0E047953FDCCB
40254C512459EA81EABD29705BEDA8917220B4CD736962EC932D0F91B2A5DC80
8623631D3854D7B6297589945BF94293721596CC4C62C71F5A8040654672D59A
8C73FC39F2C6919502A1FD8EB49A6BB72701DD42520B2F6CD223AC11A22A5CED
8614ABBE01C624D0AED39BB3AE4E8B513F61C37C6BA440280E139545B39C87A0
6867746DDC81F39BACA8E048A7276011988ACE081223D841AEA6DE2418F28BD5
9A30A454BE8DAE3786DDCC7D1BEEFB13E445F279EE7EA8CB61C194C9B25497E6
925AF3BEE4F64F897F4A57BD4C4A1E06EBC8223C35049061> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 
2{/.notdef}rp /h 4{/.notdef}rp /m 5{/.notdef}rp /s 4{/.notdef}rp /x 
135{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
50.1055 492.007 mo
(m)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B78E05EA9D973060387C73D1F6FC5283CF49F42B90E3572253
2C0305E99FC2B2F5E8253F0317294CB5BA6F51657EA79E1841CF363B43BBE54B
9E5F683986378119A60103220843BA6B4E1CF012F4407937B0EDEEE409EED971
ED71424C1DE9F58B3C06F2342302220C155C0C840BFB4693FFF8A2CFEEF274FF
E1F4AFBE9757FB2568EE33B9D585CBE0600A7110E1A53D85847EA919EFD9BF18
F44D7EE9518AE64D9DFE7C7267D6429C8F5FD0EF0AF9ABA737132F4E330A3308
77D5AECA1F6DF97EC1ACF219E33EDD988EC9A670EC23A43243C991A099EEE943
0EF67488C01ED11E3C4B1CEB11239FEDA600217AC3F2A3708004F1E2E90E2967
30C207690B19E7D8BB6E1920E2F46C4C2E0CC81AE0ED43696970A1FBC9D409BB
55BDECDE83A356A07B210C4055759107919A9C98A0B1493E8E6816D87FE47A8C
1A70E30E74BD97D6D39D9D984A0D52D9B81565B3C3A0B773497C465883E30959
64CC84> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 
2{/.notdef}rp /h 4{/.notdef}rp /m 2{/.notdef}rp /p 2{/.notdef}rp /s 
4{/.notdef}rp /x 135{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
60.0688 492.007 mo
(p)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B887F0644B8EDF7E394B2B17D648B60040EB6DBE2B8847CEEB
752ACB6F5AD37E1FA4A050E94786AD18088ED8DC4464B0DE1BE6F00A802A61F4
A34EAA84659717045B37042963C71284B8AC29AE9E0F8305F213AE4489E2DB55
EC12AFE94E44F64596D135D1BEB997D5B9A0BB5A35AE0E0CE05B7B1F89372931
9FB81429> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 
2{/.notdef}rp /h 3{/.notdef}rp /l /m 2{/.notdef}rp /p 2{/.notdef}rp 
/s 4{/.notdef}rp /x 135{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
65.8911 492.007 mo
(l)sh
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
68.3887 492.007 mo
(e)sh
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
75.0225 492.007 mo
(s)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g415 <1C60D8A8C9B7EE7C19B443CEEE64B62F72B217010F179031A1FDCDEC8
5460F50B5257D26EAACB1C0118110C61E3BC09F1143623234AB9520C70609D67
88D3B8674EC7EAF548CAB5150CB96972650BC86F6D911C30EF608BCF76A23F47
B4DB9457389A0186F9616B88A640613D433500EBCE83CE3DC285BB7DBE48CF99
89775D959E0819F35D855FDF9061E2F70763321D8F9688E8CAA9A38E30AD7419
ACE7D51C4274C966C3E0A0B80897616647629A5DE150A6B93644F6F16A46DD8E
D6BC7225824A3CF00262EFE193B54DC1384A8170B79AC5244FACC98CAAABFF28
1112B95E2E041173F584913836DB0091E6CC54731076CBF7E406BB47E7DB0040
6B9E7153BA61AC0C21D092EE7F690B17C686FBCA211B765EA38DB6890BCA4B11
BE899ED12DC1F33D95A468091AE2838AC3A0102D3E95F3249708DA6731455697
481909F759EC34599B9CF28955AFBFD215C269DBE9735C02ADE1E1D57CD41F58
4C12570C4635F44B939F788F5E90164049A5D650EE436132591EB8C0EC7409AC
4C9E89D409D64E52881C5B5C33148474BB8E9A3F7EECE6BE25408> |-
/c <1C60D8A8C9B714A578818061920CBD3BB0F0FEC7EB28869C0269DBFC0262
5554E339FA8F23FF202BF6BBA51F73386176CF41E41162B391BD65C46864E1ED
BE38C4A175836382F89D1B282918F37F6A98A1C310371E84DC05CA4D214BBF40
D0904F28663CAA2B1AF41B75D4680E3731D792C10C395648F8CE6283B6D2EA4E
A25EB0077385CC26E37C0D4F9F091C8BC196661820383DC1CFC26D318A92B139
8AE8D24532A475AF0A93A6DC660BFF9F07C9678F9C3412071B0DAC612FC7D6B5
FAE3214E7C7AB18E3145411FCE0CA8B75D2C8C25C05252A375257E1693A2B9D1
1EE377C95BA1746CBCD896C9D8284A96EC1B8BEF12D6460B6828EC26350E91CC
593B47372BD95FFBF8C2322BFC435A5494ED398AAAE3E6E4293369CDCFAC0147
8225F7C60BA6A2722907E6FF92F4B9457F52836FAB37F27C55593B43AB457EA2
91D6DE23> |-
/f <1C60D8A8C9B83BB8632FB1D3D91BD66E5512F6DD2CCB59074315803E2F43
0B096626F50C9126DF15B1D22935F28B97AB5D3B7DB8B1B8EC17F9868DFC8B9B
A6A909CA8727D3C9D8FCF13C3B6D5F4F33EA07DFD158F20416D4C6EEC8FD3EF1
4FC86346A94355FA1C2B6FA55C0124FFA9705858D4628EE39DA0E3A156A386DF
00613D8189EFFC0AEADC5BE3915D9C022BA6356303A46539775608C62B3D24CB
372AF4E663162E7C4ACC81D2F2C5F206BB702A5D73C1A974C0BFD7875757B79A
A73010AE51501D97B980E0F2ACE1EF1ED3F60A9C6E02B8D29057E3D98A685003
06E46C9A2B914F56A55773A150BF63B33B5E351FC714462135973FE682DBCBC0
C1B38B7A71A2F4C684D75344384C54C140B13A70313E2F4EDF68E127B4C55F26
525A530E7BB82AEC944EFDC27B6BB93FA6C499E5069AA3B6387EF0576DB7B6BE
E15BB0B269E8ACB562> |-
/n <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB1FCB2A451DA55CBA774B9C40CA48F3B7AD8E41B3F
0C2665E2AF85619561E070ABE3E4EFEC9983825210D2A0599E48D162F3133798
2CE0D843D2D41F1F7924A343E37439CC75937984C88A0080C28B8BFBFB8F444A
FA11CBAA4BCF4C8D3087770F88F26B0A8B30E46AE29C6BF9720949C50E19D624
8BB58DE961D63651843F9B3B8EE9AA75CDE28D1F95D7703116FE7AA23945B580
8B97F9947888D114BE2523F872057145410E975A2CA83D430B49A7CAE2661901
2C2444BEBF6DC1397EFC38FADD0435CE6D4A1478744BC983827B31CF502C4487
AF1E48BBC2EB6153C1C5367B96A212BCD3FEE3B9DEC12C4E> |-
/o <1C60D8A8C9B78C66ECF3075BCC0F7D87F2E9EA9E473D66D53E6D1735C12E
AC0562A2F6FB428E7F7051A3A7B2D4CA6ED90F77808579359B7E539B5388F6F5
4555E1422B5F329989100C1CD5239E87FECD85E14E914ADC27391A1F5624B31E
E69A68B9016D73D6A01A100E004523AC53318A2FC2260E74BA80D4ABD1433EC6
7800CC9F77763DCF8156EA5CA478ABF1FAF7864EAD55939BE7FA4A9E8660CE98
DDE8CBC35F3FFF4E5C2DA4A292CE30D82057E70A8562AFB17C90FC331A4C46B4
8C7BBCED55DB7F94D559D534C59FF211B5A85F0207876BD8D6B2C7BBBC06964A
16F72BBAE841F001B71209E6C81DC64817ADE625E8FF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 33 /g415 put
dup 99 /c put
dup 102 /f put
dup 110 /n put
dup 111 /o put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space /g415 50{/.notdef}rp /T 12{/.notdef}rp /a /.notdef 
/c /.notdef /e /f /.notdef /h 3{/.notdef}rp /l 
/m /n /o /p 2{/.notdef}rp /s 4{/.notdef}rp /x 
135{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
79.9941 492.007 mo
( of connec!ons)
[2.81641 6.56885 3.80176 2.81641 5.26709 6.56934 6.54443 6.54492 6.19824 5.26709 6.94043 6.56885 
6.54492 0 ]xsh
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
157.315 492.007 mo
( )sh
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
159.807 492.007 mo
(a)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B80F37F21112BA81A46E1A1A16E843530DEF66F6901DB9A722
A358478F1B0799F6041BFFF7D05EE602307D474F1DB84BF73C4EC1FF13A4D2D5
B370042C9A314A700782F944BCE36786AFBD72FA62259FABABA90F1F2BE008B7
993D5E1813324C60BD953524A1040FB1A790007846FA5DED6ACE6C7D436FF1C0
B97E4BBDDDA28F066E204B37F8321753E1473DDD8EE76C12A0011B04832F5C47
D3FF30EE31FE70EF82623D628622FAE52A70984ACD43F9718BC02CE5AA3F5832
FAB343FD6D53F2375C811D54E6B415E257D8BB3A2542930D7E0D6DF96FAA0688
822B6655966904164F87FA904C272BFAD51FAFF11CA14EBB5F6472235CA20889
D111211CF90F83807D99EF12B3B6827C1CA4720D03729BEEEA22A1313C4BDCE8
78453F5E6DCAD449D1F3B7D54D32C49DA0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space /g415 50{/.notdef}rp /T 12{/.notdef}rp /a /.notdef 
/c /.notdef /e /f /.notdef /h 3{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s 4{/.notdef}rp 
/x 135{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
165.625 492.007 mo
(r)sh
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
169.781 492.007 mo
(e)sh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/period <1C60D8A8C9B86ED904792469819B411F782D644953F5FB87FEF6645
79CE5AF47E01D6D9A7DF6EB24F15E9AD1EE074A41E03462D7DE0F1E92BD9640F
3458F7DADF49E5D4EB0B3> |-
/zero <1C60D8A8C9B7A0860A0ABA2698AC8E090156BBF2C9C30ADDAE7DCB3D9
7848CC5D38A5C6D85B8937F2533AAB8D6BFA0DD62B7BCE11E4F148006AA53F16
B7661785227AEDEF098A1104625EF68DF52BAE87BC71C0E793E6FAD1A965E4D3
8BA9CF4CEDAADD0504EE4CE20EF80FE3B0F494717869AEF9FD48C1A316DF08AD
A9E5D4CE0C25CB68B43C1EB2B9FE55F89B0B22C758BDED5FDD580CE702C559F6
E1F276FBE929DD9A2C3557CE4E2CABBF3EDF814307556BE2579995A57ECC922B
3376DB39CC4DC2518F12025BDC7A3EE507BE357864FDBF8F62FBD571913B8657
13255C738D4AEB39D8820C2AC5F5D7DF55CB64B7CD192349742D481F16CF8009
5A893636D91177B06233710432F07D42A84BDDC> |-
/one <1C60D8A8C9B7A0860A305D7D1540DECC7BE2F83965065BA1F58088FE75
1F51768999AF3CB0CBD98712B4A20A30CFDD23F3D718AE6664545AA64C90E87A
977C061638AE7B9844BD53D39E1CD919540EC0AFC0ADDD639213BAA3C2156ECF
4D5FEFDF4B77C92C9A62F21FEF596A47F254F30F662D97990A276CD1E50761DD
9D07D78B626617E74128BC5D647B42ED807FE6DD0588AD25D211834DAC9410A0
AEBD06E6565C1DCBD86013B11A7BE0A2010B12635869FAC3323D92D6BCCC10D0
2550F431D6753E5E6C65DB63D883AF6BCE4C75C5A66BF9AE47A5570BA4B61C57
63C152A7FDEC11C0C748631E999D604A7F2938BB57220CBE02AE758E60183316
61C475AA9DED7C59> |-
/three <1C60D8A8C9B7A0860A2FEF09FCB80607108B3B71A30E2FFE5A0F53F1
F3CE33E25BDD9A37F12480657F287B11234D872A9341B8D761BAC5B337758ED3
4FBDB0155B2DB8FB089986F2CBFC580855A552E4E7BA3E50F802AF5BABA1A72C
62BC1E6D108EEB3A3C66741F416B352CC414FB931072A8C5863DBBAA93C49B22
4ADC9F8CAA75F5C9BFEB2915D3505CD6144D20AF6779286AAF407AAC26D69248
C394FBB9BF32373F684ACA2E19C0F36192202ACAF72B1025D6F0CF7066494E82
7BB306A2A776E0F2B6F3F0E76AC8A13169FA8D6AD525762CBAE08E1976BA0FA8
68484244B2C6286C74EE91A2C98728E442E286200142B1A5906E7DF9201821B2
7907537A9A18D5757AABAE23C46953763B0140A749D71AFB31CB71FE8CEB3596
B5D9F27628C8660D823DA7A912BCD8F676248CEB1E8BAEB1BE8A438B018DEAB6
2C462D1458D0606C924EBCEC79E3D916B8F995C300564C3F71FF08DB1F5BD306
FF743BF5E6C612870C09ECDB532B05A7DD75F09723F8164F23FA51923DA26610
7C0EB4976641F969687AA087A6CC3FBA3B6B49CB68C88F765064561D586CDB15
837CCCDF95B1ED2288DB0948C8291CEF223BB458BF8475B7D75BEC1205D90B55
55DC2429D51153DF3C83901B6982E60F7C7F061954215DB5FAEB8718AB7756E4
DAA99626BD231EE3CF4090380F8238B83D56E35DB5099A025EA0320D1A3DE89D
5285DD> |-
/nine <1C60D8A8C9B7A0860A301EA0CDD1E6614C5B4820FB68F7520C96ACBDA
5F5BAFFB43C2A40F5694CD0DF6C758BC4B27D6CA50AE28575E858E493E8EE957
51B2967F5BE904EB042AA54C454E869DDE0E5ECB98D962A79A94218E6CC99EC9
4CA8492476CEFACC72947B34D71483EF4A3F9FBD6098F9E6D0F9802BC600368B
96C45A928854D685E5F703C8552927ADDA55A7F6845FF94EAA937AABC9BBC958
B4C081275431EC73E38483911A0885AD9592E2DC6E2A46F9C6114077BB266957
E6E28F6602B8DDCA0BEF1FC2E85630EED478837B476664D493FE7C9C39460D3A
452FBB2694BD1646270493EF025BCD287C17FAB57AADFEC6BBBB276DCBDEDD84
29C79E3F0B7AE72D2AF69E31859788B91D84A6A02C4F5ACED217B45DF2B39CE3
6418F76E74AA7A90E0A131831180D8D1C02A132AF63FCFF40837B44B674B76E4
8FD0C7367BC67F41C69D179A9D8F36F3A84B3AE05F25F56032B04AB8A96049A1
F3B6B46B1ACDC441EDFD8013BADDD572E9DB08526455C6B9FAA1650BE8922CF3
F0574F6C4F7DFD3E1A3A0FBB1E99FF4319B> |-
/d <1C60D8A8C9B78E05EAA3CECCCC7ABA6A35E55F211820F669BFFF2D107F3F
003F84456D947B5557966A2009812B81B51372EB70EB729C8C82B63A473DB516
1C83385AAD04B71C9D388B2F86E7C2E91E06E59E76C532F8A600B530589A218B
CA1E889366120C885033631C7850C65A7F9274D24F9BF6FA89E174B53B0E1A2C
F6D783F32D4C0BE4ACD3EEAF66A8BEC8DB7AC7ADBF3C9CDF5485D002662D310A
CCD320AD0234A2F2251E7C0B1667BFFC7E10EE40C7CB623518E3E168137CE699
E133B767C86E16CACCA64A58BD9D7F6E66BED6D6FE5D80E0381141549FFB2FBF
94ECD2D262EB097909F9092B71E3573FC9B4FD273505C685B327AE9095A2A155
45986A397AE2796BDB3888D16AF3DD82BF32621BC8C1393814540227FC926F77
872F2FAF5DD33717EB461ACFE3EE5C279294EBB5AADC09C8B10C3F2CB25CCD97
C6> |-
/y <1C60D8A8C9B776A06C625D9575F6DBFFEE93EC1CB9A335325BD9E365428E
EA1BD5B7A305D96437BF24D2E59BF0DFE2360EDCA01120D4DA769624265DE986
6EA970971BD84B20E81D769B1F13D7A21674FB5E8C4844518680BB1DE710B743
8090302965C932285C6A137B1923CFCED74D1C71B686BDF1263BE348B2F06F53
4EDA8A2856376F820F03A76FD878686946B3B179B9CD823AA55541A535E0CCC6
D2D21B3D6A73597DDD43BBEFD829B55A26664F2F8221FA6814449CF6D0CFA134
92A2A7CF82E9D18F6E0413> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 57 /nine put
dup 100 /d put
dup 121 /y put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space /g415 12{/.notdef}rp /period /.notdef /zero /one 
/.notdef /three 5{/.notdef}rp /nine 26{/.notdef}rp /T 12{/.notdef}rp /a 
/.notdef /c /d /e /f /.notdef /h 3{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
4{/.notdef}rp /x /y 134{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
176.415 492.007 mo
( really for Theorems 3.9 and 3.10. )
[2.81641 4.34277 6.19824 5.9668 2.85889 2.8584 5.63867 2.81641 3.80127 6.56934 4.34277 2.81592 
6.07031 6.54492 6.19824 6.56885 4.34277 6.19775 9.95117 4.87207 2.81641 6.31348 3.14453 6.31348 
2.81641 5.9668 6.54492 6.54492 2.81641 6.31348 3.14453 6.31348 6.31348 3.14453 0 ]xsh
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B83844CBABF75256C23589A050D2F18EC6AAEA2DCAA87
9D629F0698E85A7558DC3794B984219238EC694626573D368F005AA7EB3DEDB5
5CE7021DF056336AEE3D77182F0055C3CB6954365C7523BFC42E70B7DCDE95A> |-
/colon <1C60D8A8C9B85EE3AA09F13AFE1EA1D5487D04185C635E2F65BD02BB
7DF22BBFE5051B7512FEE106F66F66184353AFCBEED1CB5314B7B80F3E52B269
54A6CFEC4A802D718865FBD1339BE6AD949F7F886C41CCF2B4B54575279543A1
80F06A1CDE595E8DAED7162EF75EED02C4368BFD960D814A5603A0093EE2ABF2
B8EFC6D527E7309A7D085984A9616E0355BBE99B23383E635D8345EE503BB7E7
F606D03708C2AC02168B9980286B030538C369A5588A9CD5E4A8087241AB991E
45CC89FF12CB4C89B42B01621767D0EDD116D84098233D0CC562EF89698FB414
CFA2163D7ED0B4F71F70D57FA8F1C7830EE5D4CDF38F5B> |-
/greater <1C60D8A8C9B7A9C0DCBEBE215A855C93EFC157AA5AF261BBFBE3E8
04A09AF9465EABB269449943EB324EEB5800ACED1CCB21BF9DCB81A926BACA02
DD88F59227AD25B3A22E54FA2240EA372C0342993FAE588170C634159ED1DE9B
916BE227FB90EFD300D6284B9A5E9B8EAAFF607B27B9B451F75110B6433B2BD1
E810CE5AE0BCFD4DC4960CFABBE41FE5DB4C29147C98165D845E78B7D8FD53C2
636340E0499CDA81A6570B2FA7000C8C73241803AC0F0645176A3865DD7B8ADA
9B28> |-
/S <1C60D8A8C9B770DA42E8D37F1E32882D4AD6464D850106A0DE7A83B47F0E
C65143E84B8F9887D8EF560BBB7DAED9582F38B6974AE06071D74243DE04377A
9E38C603D44A0AA623BF84EDE575A39EAD4593C4B3F424F5317061A5AEF0FCBD
5198E5F9AB43FD8C228E541FA391BADB0ACDBD5FBBD08EBCA2700B6A1105DB45
395D242F8C44AC433C3725A9D5F6A91B5DF820F4E2F6E66101242BAA426ABA58
4BF91A7E8CBD825612324F28F3BB6B5F4B6A98D5678C5683C423898401C97DB6
AEBB3B08F0E49015B8C09294559F0324646775C30687BA8725A301A8E7ACA559
E180CD1BA525300AD3D8DFA8A8C34309FA6E01CA0BA9F33D60D410C3785C9A35
A4D33DC4DA697FAAF83556B3BAF038631153B21CFA05AC7F6B965B6C9DD580EC
DAA5E19D631487362428CB6C15F8951776CB9C454AE2ECDA7CED1F00599F6057
8050870FD9F672ABB02F7641BFFDFC908D98DE75282B9085EDCE585EED996ACD
325E186C6CC942676730FDB64EACBC2CC9670AC8631DB84FE5F13182767EAE21
F9BC28BA89B244DFD720C9DF35E92F57747BB59E5AF5F4663BAF9B03DC716D74
DBD0D4D1BB2703443369B43A50F5B2916833184106C2158995BEF98CEF08C3DF
5A6182> |-
/Y <1C60D8A8C9B7544E0B0EEDED580362FBFA5F9C928B31561908068AC6EA81
0D41BF328FB52C8F8185A919735D4141C6312C08B74BCDFC43BB5C0AF474F9A1
C5EA0C0C155EE7B36D37A794E1533C655E77250E51F49FD898489ED0CE7D7541
FA14F0CD4E039C8FE17A99395014273B90AA8829999F538319CB056E53403067
E343000ED68D07D37737DB7C330DC79FDCE20B458BA4CE302561537AC812BF79
7748DDAAEA29E690448A1F4962E5FA03B4B53614BB7195D65DF457057513A87D
0E053625E8F7FD5E9842A40F2B7859BA77F4C18C6354870E95170ACFE3284838
2C4D9FC9946D7932D570> |-
/backslash <1C60D8A8C9B73970F5CDB7FEB821051613A42F8D54BB8790F7F7
7CADA66D9EEF77E4F992C4159B2060B8C8299B7E048EAF85449CB1DD6307DC0E
994296227F1926BE805E9118F6A952ED3E2ECDA8EED5570FE7C84D5D2973F71D
4DFF5CD29614009016A6807C3312886969F4E9F565348D00DBF776F9F75D3556
6B134E3B375975F7A3> |-
/i <1C60D8A8C9B887F0644B8F9A77200B5B21E7A46843656F48CC872DF3AFB5
8D86B9B1B70DF0F8BF4F1A9D845350075385C2FAC40F64A57A633024956B42D2
D155265D68692B1DD96FCB1CFEA6F03B67B191D75D9251636A71B366F484AC7D
D61A648087A690F42FCD56728047D5F145B28180BC49A70304D616C17E08688B
C2AB34D235D029750826D6A02D57888DCAF080A15DCB2D8AE91CB7938E088D74
26B3BCAD6531F243F29763FBDE3F087E3965B6148DD52590D1BA20021D15293C
FC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 45 /hyphen put
dup 58 /colon put
dup 62 /greater put
dup 83 /S put
dup 89 /Y put
dup 92 /backslash put
dup 105 /i put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space /g415 11{/.notdef}rp /hyphen /period /.notdef /zero 
/one /.notdef /three 5{/.notdef}rp /nine /colon 3{/.notdef}rp /greater 
20{/.notdef}rp /S /T 4{/.notdef}rp /Y 2{/.notdef}rp /backslash 4{/.notdef}rp 
/a /.notdef /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s 4{/.notdef}rp /x /y 134{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
.0078125 506.956 mo
( SSym \\circ YSym -> YSym:)
[2.81641 5.72363 5.72363 5.63818 9.95117 2.81592 4.81152 5.26709 2.85889 4.34277 5.26758 2.81641 
6.07031 5.72363 5.63818 9.95117 2.81592 3.81396 6.2041 2.81592 6.07031 5.72363 5.63867 9.95068 
0 ]xsh
.746094 .675781 .667969 .898438 cmyk
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
360.43 506.96 mo
( )sh
155.539 58.2085 mo
155.539 59.8169 154.238 61.1206 152.633 61.1206 cv
151.027 61.1206 149.726 59.8169 149.726 58.2085 cv
149.726 56.5996 151.027 55.2959 152.633 55.2959 cv
154.238 55.2959 155.539 56.5996 155.539 58.2085 cv
cp
0 0 0 1 cmyk
@
150.566 56.2124 mo
154.795 60.2046 li
@
154.745 56.4243 mo
150.519 59.9932 li
@
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
134.74 61.7173 mo
(\()sh
SNAUOG+SymbolMT*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
138.135 61.7173 mo
(D)sh
SNAUOH+CMR12*1 [11.9551 -1.46408e-15 -1.46408e-15 -11.9551 0 0 ]msf
145.45 61.7173 mo
(      1\))
[2.53418 2.53467 2.53418 2.53467 2.53418 2.53418 6.13281 0 ]xsh
.503303 lw
120.893 590.685 mo
120.893 583.137 li
176.255 527.774 mo
120.893 583.137 li
95.7275 537.839 mo
105.793 527.774 li
90.6948 532.806 mo
95.7275 527.774 li
100.76 542.872 mo
85.6611 527.774 li
120.893 583.137 mo
65.5298 527.774 li
90.6948 552.939 mo
115.86 527.774 li
156.124 547.906 mo
135.992 527.774 li
141.025 532.806 mo
146.058 527.774 li
146.058 537.839 mo
156.124 527.774 li
171.223 532.806 mo
166.19 527.774 li
135.08 568.629 mo
123.204 526.934 li
.859375 .746094 0 0 cmyk
@
1.74758 lw
153.291 550.739 mo
120.893 583.137 li
.078125 1 1 .015625 cmyk
@
129.161 548.745 mo
135.08 568.629 li
@
85.3296 547.903 mo
120.893 583.137 li
@
96.353 547.282 mo
90.6948 552.939 li
@
120.893 583.137 mo
120.893 590.685 li
@
.503303 lw
368.965 591.592 mo
368.965 583.799 li
426.115 526.649 mo
368.965 583.799 li
342.987 537.038 mo
353.379 526.649 li
337.793 531.844 mo
342.987 526.649 li
348.182 542.233 mo
332.596 526.649 li
368.965 583.799 mo
311.814 526.649 li
337.793 552.625 mo
363.771 526.649 li
405.334 547.43 mo
384.551 526.649 li
389.748 531.844 mo
394.943 526.649 li
394.943 537.038 mo
405.334 526.649 li
420.922 531.844 mo
415.726 526.649 li
396.6 556.555 mo
371.352 525.782 li
.859375 .746094 0 0 cmyk
@
402.41 550.354 mo
368.965 583.799 li
@
343.632 546.786 mo
337.793 552.625 li
@
368.965 583.799 mo
368.965 591.592 li
@
1 lw
193.767 548.745 mo
285.1 548.745 li
0 0 0 1 cmyk
@
284.295 543.689 mo
285.544 545.797 287.488 547.456 289.557 548.745 cv
287.469 550.014 285.605 551.734 284.295 553.801 cv
283.047 553.801 li
284.356 551.795 285.933 550.055 287.878 548.745 cv
285.933 547.415 284.295 545.654 283.026 543.689 cv
284.295 543.689 li
cp
f
281.286 543.689 mo
282.535 545.797 284.479 547.456 286.547 548.745 cv
284.459 550.014 282.597 551.734 281.286 553.801 cv
280.038 553.801 li
281.348 551.795 282.924 550.055 284.868 548.745 cv
282.924 547.415 281.286 545.654 280.018 543.689 cv
281.286 543.689 li
cp
f
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOI+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B854D0F4B281B42A092C6FF82395F80A15D2C3C12DDA8BD3AD
36E58B3AF910D2B8ADA6BC1C30137D0B4DF4FA4D59FA1ACB53459B7EC4AE089C
AED0AC91FA3467AFFE9A61F305EA6974A5E976D616D1A9D4FE32401AFC4C8256
E9DB7E7DA19A9590B8444669A02D969F9D7400113A1B0796FD928E598C3B7A80
D1D6A9C40F81F2F1E3C4D5AC7B233A0790585320A08546F89329AA00FD4D5E1E
75EC59101B6580A1509A78E0540D10213C525ADA794DAE15593AD445E59C9538
B4450ED729467A46BE6AB3BFA02A1FB3F6390813CCC3D99CF1B2B175F6DCAADE
66318988F9151791D53E6E4751A470A643E004161F0D3039A05AB8CF9D511D61
3F018EA1A7F7CD3D271165C92B396D85FCFE742D3DF0EDB5E2862C16D937DC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOI+TimesNewRomanPS-ItalicMT /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
/SNAUOI+TimesNewRomanPS-ItalicMT*1 
[70{/.notdef}rp /F 31{/.notdef}rp /f 153{/.notdef}rp]
SNAUOI+TimesNewRomanPS-ItalicMT nf
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 0 0 -11.9551 0 0 ]msf
229.767 540.137 mo
(f)sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOI+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B854D0F428CB56497DB3751CBCE205181DF8576DE7D01F56E6
658D50F3A55031CCFD90149657F347A7B8FBDA51BC713C50D2F7103D339A28E1
EA0AB3CDF3E8F9F3065FE59E41F46C69A0F86CC9ACCBC34698A8315C973C6386
81FD1CB4E96CC4A31C9059B1294515AA76EDF0278C3082EAC668C9E35B588539
A6BE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOI+TimesNewRomanPS-ItalicMT /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
/SNAUOI+TimesNewRomanPS-ItalicMT*1 
[70{/.notdef}rp /F 31{/.notdef}rp /f 5{/.notdef}rp /l 147{/.notdef}rp]
SNAUOI+TimesNewRomanPS-ItalicMT nf
SNAUOI+TimesNewRomanPS-ItalicMT*1 [6 0 0 -6 0 0 ]msf
232.433 544.471 mo
(l)sh
.85 .5 0 0 cmyk
%ADOBeginSubsetFont: Calibri AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOL+Calibri dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B786996D057DD9ECF9C9FE8F34FA37C423F5980BE7D786896E
9EA4586FE497E33F39AB964ACDD89D26E486E7ED8F0DC4FBA51D700DEE7B191A
63C96E17E766A2327A1204635F41F9C49078958E183EEFB6984182E65EDA1F8B
441B6E4AB84D91335816B7734083F4F4FD892A7BCA407D109F62E4EE67EE6C6C
391D2BD510DDC6B5D5CC22D17AC103A7D2131E72C317F3BAC05393ECDC293B2E
CAB1568ADB4263F35E5423335599179483E82F60A5AD75F98D7415F42E948543
DCCF85D6B636864749244B612B22564859487973200635BA3DA904CEFECDBCC8
B01666891D22D161E426CFA4178953236E0C0CC024ABFD25C62F85F4D9DE2FD9
3AA1C37E4CC144A605E56698682CB24FC97AD3BD836F4B14863B5FD90FDACDF5
15F988F6144041EE6DE72D3696AC15A7CD39C4F2A134E2CF9BC30D1C6766E73F
C3D1AD93F0B1FE898AB1ACC306D4BD68327F6E0E6DF2C6B68065348695779B77
D4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOL+Calibri /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
/SNAUOL+Calibri*1 
[32{/.notdef}rp /space /g415 11{/.notdef}rp /hyphen /period /.notdef /zero 
/one /.notdef /three 5{/.notdef}rp /nine /colon 3{/.notdef}rp /greater 
4{/.notdef}rp /C 15{/.notdef}rp /S /T 4{/.notdef}rp /Y 2{/.notdef}rp 
/backslash 4{/.notdef}rp /a /.notdef /c /d /e /f 
/.notdef /h /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s 4{/.notdef}rp /x /y 134{/.notdef}rp]
SNAUOL+Calibri nf
SNAUOL+Calibri*1 [12.4569 0 0 -12.4569 0 0 ]msf
4.42676 627.804 mo
(and)sh
23.4834 627.804 mo
(:)sh
26.8164 627.804 mo
( CSym \\circ YSym -> CSym:)
[2.81641 6.6416 5.72363 5.63867 9.95117 2.81592 4.81152 5.26709 2.85889 4.34277 5.26758 2.81592 
6.07031 5.72363 5.63867 9.95117 2.81592 3.81396 6.2041 2.81592 6.64209 5.72363 5.63867 9.95068 
0 ]xsh
.574407 lw
153.542 728.061 mo
153.542 719.447 li
216.726 656.262 mo
153.542 719.447 li
124.822 667.75 mo
136.311 656.262 li
119.078 662.006 mo
124.822 656.262 li
164.886 708.103 mo
113.333 656.262 li
153.542 719.447 mo
90.3579 656.262 li
130.565 673.493 mo
147.799 656.262 li
193.75 679.238 mo
170.774 656.262 li
176.519 662.006 mo
182.263 656.262 li
182.263 667.75 mo
193.75 656.262 li
210.983 662.006 mo
205.24 656.262 li
186.251 686.738 mo
156.095 656.262 li
.859375 .746094 0 0 cmyk
@
1.99447 lw
113.394 679.298 mo
153.542 719.447 li
.078125 1 1 .015625 cmyk
@
181.406 681.692 mo
185.295 685.781 li
@
138.643 681.692 mo
164.711 707.48 li
@
190.399 682.589 mo
153.542 719.447 li
@
153.542 719.447 mo
153.542 728.061 li
@
.574407 lw
313.144 727.97 mo
313.144 719.355 li
376.327 656.171 mo
313.144 719.355 li
335.481 696.379 mo
295.91 656.171 li
330.535 701.804 mo
284.424 656.171 li
324.485 708.012 mo
272.935 656.171 li
313.144 719.355 mo
249.959 656.171 li
341.226 690.954 mo
307.399 656.171 li
353.353 679.147 mo
330.374 656.171 li
359.256 673.083 mo
341.863 656.171 li
364.999 666.861 mo
353.353 656.171 li
370.585 661.915 mo
364.84 656.171 li
345.854 686.646 mo
315.696 656.171 li
.859375 .746094 0 0 cmyk
@
207.332 699.373 mo
252.806 699.373 li
0 0 0 1 cmyk
@
252.158 695.307 mo
253.163 697.002 254.727 698.335 256.389 699.373 cv
254.711 700.393 253.212 701.776 252.158 703.439 cv
251.154 703.439 li
252.208 701.826 253.476 700.426 255.039 699.373 cv
253.476 698.303 252.158 696.887 251.138 695.307 cv
252.158 695.307 li
f
249.738 695.307 mo
250.743 697.002 252.307 698.335 253.97 699.373 cv
252.29 700.393 250.792 701.776 249.738 703.439 cv
248.734 703.439 li
249.788 701.826 251.055 700.426 252.619 699.373 cv
251.055 698.303 249.738 696.887 248.719 695.307 cv
249.738 695.307 li
f
SNAUOI+TimesNewRomanPS-ItalicMT*1 [11.9551 0 0 -11.9551 0 0 ]msf
224.1 690.973 mo
(f)sh
%ADOBeginSubsetFont: TimesNewRomanPS-ItalicMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOI+TimesNewRomanPS-ItalicMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B7361F365886EBFECCD8473E83DA137EE4FF5446DC34EB9670
2032A1EC6B4D0B80987318881760797A2A703BDB19E24F1B10629EC5D3297F26
5B468217AF43A693E97671CE6B3D388E20C056A563C2FC1423CD8BC8B3EC8EC0
9DC18882E406798A4EAEA9C53CBBD9B8E9BC3831F4F1A6A626135124B3F0C4D3
2FC8873A1B53DB02AD4C1E42492228869E79B5F7AA6DA878613B470F5F6920F4
2F08D0203966> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOI+TimesNewRomanPS-ItalicMT /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
/SNAUOI+TimesNewRomanPS-ItalicMT*1 
[70{/.notdef}rp /F 31{/.notdef}rp /f 5{/.notdef}rp /l 5{/.notdef}rp /r 
141{/.notdef}rp]
SNAUOI+TimesNewRomanPS-ItalicMT nf
SNAUOI+TimesNewRomanPS-ItalicMT*1 [6 0 0 -6 0 0 ]msf
226.766 695.307 mo
(r)sh
.85 .5 0 0 cmyk
%ADOBeginSubsetFont: Consolas AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2011 Adobe System Incorporated. All rights reserved.
systemdict begin
SNAUOF+Consolas dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/colon <1C60D8A8C9B795A0B1AE175F9C833187BDA31960A0DEA2CEEDD86101
23DAD9F0F6C74063A6909AD0726C245942A1DD1E991232ABDD2A2F4FFEDA52DF
085358D737D33485A57D08FD11FBF48B275ECB9C62F1AAA49DB23A76881DB94B
5AAF34D08DB0A3211B740495FBD560A9D26C4BF1DD99D75032A0CB66D9206D8A
BBC812B16767A861E73514F2F89166F846D4789EB38C34E63B6C8DB0D527EE18
B582AD0C19DB5AFCAB105A055E37B98C4A61A678AD4EEE5B2723788F3EB2394E
5821B8E2FFADE8F0323ED4A56E61AB8FA49D467148578809CE02DC820B63C35A
47CD643E8DC3EECF45FAE1779CD82B68FFC5805B068D25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
SNAUOF+Consolas /Encoding get
dup 58 /colon put
pop
%ADOEndSubsetFont
/SNAUOF+Consolas*1 
[32{/.notdef}rp /space 8{/.notdef}rp /parenright 2{/.notdef}rp /comma /hyphen /period 
2{/.notdef}rp /one /two /three /four /five 4{/.notdef}rp /colon 
3{/.notdef}rp /greater 2{/.notdef}rp /A 4{/.notdef}rp /F /.notdef /H 
/I /J 7{/.notdef}rp /R /.notdef /T 2{/.notdef}rp /W 
9{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /j /k /l /m /n /o 
/p /.notdef /r /s /t /u /v /w 
/x /y 24{/.notdef}rp /quoteright 109{/.notdef}rp]
SNAUOF+Consolas nf
SNAUOF+Consolas*1 [11.6265 0 0 -11.6265 0 0 ]msf
3.62305 745.644 mo
(I suppose it would be nice to have a running example showing all the actions: star, mu, etc.)
[6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 
6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 
6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 6.39209 6.39209 6.39258 6.39209 6.39258 
6.39209 6.39209 6.39258 6.39209 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 
6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 
6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 
6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 
6.39258 6.39258 6.3916 6.39258 6.39258 6.3916 6.39258 0 ]xsh
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SNAUOJ+SymbolMT*1*1 uf
/SNAUOJ+SymbolMT*1 uf
/SymbolMT*1 uf
/SNAUOK+MyriadPro-Regular*1*1 uf
/SNAUOK+MyriadPro-Regular*1 uf
/MyriadPro-Regular*1 uf
/SNAUOH+CMR12*1 uf
/SNAUOH+CMR12 uf
/CMR12 uf
/SNAUOL+Calibri*1 uf
/SNAUOL+Calibri uf
/Calibri uf
/SNAUOF+Consolas*1 uf
/SNAUOF+Consolas uf
/Consolas uf
/SNAUOI+TimesNewRomanPS-ItalicMT*1 uf
/SNAUOI+TimesNewRomanPS-ItalicMT uf
/TimesNewRomanPS-ItalicMT uf
/SNAUOG+SymbolMT*1 uf
/SNAUOG+SymbolMT uf
/SymbolMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (sf34) ()
%%Title: (Untitled-1.eps)
%%CreationDate: 9/15/2011 5:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB7&?'fC8Z_Y:KVRa)O&2?JMMt\DnXb&Kko/J?TU<c2HVsmI-G\FX3'=m+OE]qqM[?cHI_Yk-Q!81Ga<ihe?bpa1VDt8r?E@
%\J-\i.?WXTrA?C;UReDJ5=@u<-rs*>faLZ_JdB_47\Em"\o8ODiY^1KW7Uo`[::6sH<oq2$@5?(H7Pu3:Sj79:`eSPP.F[u/cG-;
%^89>O]m\%La$d-:V_fH1.902J>0YEq07'Oo\!.s0G4<u-PQmdPT;mtNQ=<6=0@Jptg!=h9D]MgUhs@7@Xf_:,e\=oQ[aI0"9CJ="
%\PAf7o$7*fDG*nImutuN0)nc!>&%2!g5;;mW=4JbC$$Srf340OI_2Hq.k-iGgs/+A\N0,pU]<47ZdleEWOM^5obaPrD="^iGn3+O
%+7PUQeMKQ>5Q[=O_SPoZGI!pqqJZ?KGggu9TpV;*\Qc;c)LAlp(sam$>"YW*4sa#l9&q;aGu\^*>DfChV.1qt_l$V)7t9@@2CS'Q
%_9udBc#=OW'V?!Ad=H8e;>m2fJ$5Yk<2H9,QFq6mH)CNNfV^`iU<$^-d:p@l)Wr+Mbqt(-A0S5[]qMn$2EXC<V''JKpcmL2CI(o7
%j&%[B2<h5,'#[C7Ej3?T<0X#T@0mSj3U3W8Wd]MU9f!up/t#5hUh)S5M*d)c0F!Pi.@)!M[/JSp(la-eYX_3)5'%.=G@YBJ>%bf$
%:OLeQ["^Z=,*S22+3[&@o)):ls(>19I%."eYt50h.ic&D;,l]9$t1`1)?mg6-35cV4Qo0<'W.]k>#3s-p_aLfmsb-!p=!BMS:0Yf
%VV6Y7>A?bGZB'b26VYsePV)P;4[l]A#GS*fe8,eq8F)Ag7ZFd+\^@uO%FA`,b2]73=T?2.CgAh^6^fV"T57RdbU:*];`]p)=^<cS
%:A,9#%N`6Y2U1Sc#ulR*A"s5F%t=eG5+)mQ$u188O(s)V27%%qU%Fq^C)d1__P1#9YW<[P=q35g07]:/f%"S(2d<N#ZkUd.g$=Bi
%)Sg>GQ0i^&M5Fs;bLZQFTm#]ciJWf")>^\nW?GJ5$W>Q1cdqdW:MWY!d8\k(8*`EaOi`4Q[CXfOk[sPQBD5!bA.?1nTjo>%<pGJl
%&1^FP[bL*ATP)$+2?26SI1VjE)d2dS:fZ\J;X^)i[bV1"A[AnK;2=tfUOc.e=tKnIdQ;=W+K2F7lMVKq8<V?;QbHoo+8#(pBf-2,
%X0J"cAL<naq>`nE#f`BI2KM:#3J[JO@N_-jAIB7[fb3_E/`Fu/9$,PqjRh1Q:qHkLXp8RjJLR!_fgC]0L,gFuN_"pM:PU/]dui+_
%h/A]b\+MP(e8$4u34Bbd-_8RHS^3j5fApB58N/n=<3Z*;:pjV1+c$l&+2u]5+fH,g&-[tZ;6tCL*%L3UP0m:=1CU*@rA4SP&LbnV
%6??O6&4_Kue-WX&e"h=OkSB!'YG(pA:]h;!T60H69RS!GIAbCeo%:mtph;[:qQ!dDVNB\^W:n"3XJ?=lOY!tl%8Eg#f26XrP'XpX
%h"Ks@=n4^K>)@g4hL*1'_-Ygn;H9Kq<e#;C,`#!ei'n+\)>Tf1T+RRl]+A/nLaO`>.'5.*kOEIZ3Y:,#Kg@uD5\kPIB=.GT%DDJY
%PV(>BYuhicMtA-?MtHI<&3JnC"G/mrr?^blriPeRL7,c3dt8K>pAk.mNh^(;+i,cB(A0@#3F#gG&HX&)iaX[)-MDb@?2RBB3,\EJ
%iO5HS]=XW2ropV3XG&>2(g@jBW:jN!RgZ3@X24aVf%3SQUM/J;&OSidAZ.'K'Y<>.n8B!=)lJ0_D*eTf%R=2jSKDT>ms51]>/5K\
%/et-#B5gBK3j:%&")$tX#!pqI!lAtJGM?R9X-c\E%mkfrF%.H_"!`uK3("=$eTu(F5];SP3@8k[Ecd=&KM8/uHV.:\^#b2h!EbCf
%aVuSko59XL^gRN,iVOW8S7;q\*o/3G*]AJgEsGQ1hcO&]a&3Gck^VY9)sm)Yn/t"U[14Is.;XlHam&1FWq3%3Ss1jB7Z_0lUcU2i
%bbiuIVUNG"-C;l!]F`g%$:$]88noDKIu*K;![M/A3iZWhSu=#E]U;a5JMY3O:OeYQj\iWk/sPth>Zi[PA[*eNq(c#`b=n<V;l+N6
%<%=1@V0j^nP"S\E/.!W:`0Jsf;kcoaZ!8gpMoA";?d'8HU@d]RU0&+eI$#qb7A`TlWC"-l.MN8E6GAO3a9AOc(5)`ri!O:O.F85J
%?d>#/`I&i$cfak>?HS1O+j]>^4I^!SF<2(]>WGm.'m#(65*sI73@Q?<KH-WEEbpcXd5afOb9a\I(Z`6!P@[m[79P^tR?LdAO_L5H
%b#1e\8d-XsjWmt1)C85n,[TIU<am=XU;X?>&rU3bb_nJY(*ufl"d'T]OVJar(+Gq.P_>c-&Fr._O9J2e"[V&M:1+5pTEV!N0CpL(
%a;=V6TAsKhi^I23H(O&!T&FCTilYM_.rkeGcfI-SP;n[<31f.iQ=DnCUY%>+@Z,&Rc*KE2Aq<EPA-J933L44o(/f7Ob`nJ=;df/i
%Nfb39&K-/Y)3/,CL7oKB0%2,X8/LJPSYKb"U.&7YH((L2R\=F6BV]#s.@:Yr:P$k@@%.cW+H:uh.2l2b2?5-_o8ko8HFQre3[LSH
%pdjAAW#kI?qCpg5HVs3`?m"8Ne0A=BQ\DQq1"H4:Sg^]pFgmqBVMVl[e31OW-W/[7)PAl?0K3g5GT[VKIT^AMGc[f8NCO__]C.hS
%?u73f>b7mMeP$EVbuE>1p+196L^E!lIAh*NqApps`#5RtV9\_18Tm9q(YW@h"Wrc#')`@q-5M`*TgV@FnR;\ODA3T^W.4k'!`(Tl
%%tH4%OTZ"+U,/N7LCP+0*#qu@LX)U^q$7!KN()O_du'r0:'ua4l`!$/[RN%bCe@8:0J53]LB;U,1Ft&tp:lF]52h($QJ0kbnpM$4
%ItuUi;dAT1FaHWT)P9k'eL>h4+1:KMZ8#<T>6(5/dHXsS*"OuN#T]gL&auJJHq*0qIt.$3U+IS1KOeb"@X&LIK4c')@aGSbfJaDe
%&-Z5^Y[f#6K@skh'U+YeaL8R7B&R*Z+f+$L0MH.)mK(<22j0<?Rdf4W+BI:I)dni*1+[[)'J3s"!S#lI*=l2AiXmgF%3>^na'd2+
%Se8*mHq"10i)#$;F$^(YOl.V5DY3I2G7SO1cH<<tclOpCdAF]L:2$E+qk/%JWH**8j^d=OF9fub'ZgnEHFko#cqp#pR1C$rh<=<f
%B-F(m7ulC_Zk9C=`6+78SBs`4pH])jXFX`o1t#NXAN9HTA9\TB<ji0i8JWSeaa)G_(h9VKibe;7Auf!HUQ==E\bPY`E5aW+0:\E8
%=/VB:!CAdIkm\q*3$kJY_U'DVX"P%';3E_"\1^;fciU8m2rAfAcpiBQ#1mq#dFUO'Xb81)h*&-m-UaH"cphC:6/d.g6GT1FN_h95
%MD25)?$HXQ7FXS$+EgDp!Pu0nVr1e^B4Dfq)/aM3>D%'SOo.iRYp,iHC(^E<ln0&s>G$<`q34!@m\)EN3gW3NWIL18lRoQl8!;[k
%[*cM0Cl6*`I%@$4-Hs\m>*%79q<[iPp%?]F8miJ`(7L>^&.9Ds[JR(R445(dNDD*F;<W*+PlV?5lV!=r<>J_e5iK,oTed[g$Xjh+
%%V?OqQpZhT4?aC0k"EWE'ZE=Tm$fRKgS&d:F:,o2T#e;6@ilfe^6g6(RL1bn)#=!*^W8#\hTrGNp.qm:%OCTR(K?s1k0H+0V6)XR
%1qiC89'&l-F7o:*^\[a*rDA&hbYKG^1e5r8L6cE?UE[rnA/R&/1b1@)0c;_nVn!FRVJ$rIiHFZ<;=3d**LG%r2[t*\j%C8I@mr3a
%j9$sPgZ1oH6Shb)%5sJ.$Ckce$4%)TPW@D86'*39.G,l$19:X7!^G%=iaIP&7S\[@'H/,0A\c/Br>D#983>)eX9D;@ZqNphiQ.up
%*ajXJdYr"f0T0*TS[VLUT;`RT2NK*jMc<eLA^=%lr#mqicfaTdIf!)'nKG;oe1uV\7=PRpON'mN0*4d,P9toO19B"9X"7g>b)V]'
%enUC/a_@Li+[N^K_BnT>KEm%+aQ5o'7E050Gah8soF)j&"'Dd`!_M=P7\5oETfi6j.7)BXZ2m)$U1!:"[(E+9,;qbo+=tAq?G+h0
%A$:\-OXD>XZH/`o^nSUN.;N&,/aPr]8VPU^gUT]f9sjPXVFc;+g)5dSBTrZtZ5>ns5DpN8SR:($)G#\LG(7Y<l"GZ[B@8)DY\d2K
%&13F"mH)@?R)!puYd,g>&2Gb'^hCsu,M3F/[cCjFH\?nTr^.i-1rk`%L6HFj(O2OYZ(ei9Bhfq5*/LZ`/6HEt#qQGbU:ggYef'cb
%jSt0/T&T9lPi3;9iDC/B,0:^RP3nY?qgt(R),[;/k(kkta"4HX4d.^i!lCcBVN\tGLkU)A-IWIg"HG#m(.AIuh'd79#S79iJi/-.
%=_eD81!NlYfKOlJ+R6BA"3e2b@o90KMIZjEU.#JAJ8,GDae99fC.+AK[2U:gZkiiQbD<Y`:dUSYQpB2NdRLJuCTi#G-icpocge/)
%e%@8':6996-;-0_)C_+!k#hi%6/0g&+Q9c1X-d<AZ6Z*6(.8Otie\.3UMT`K!G11),S234,M4gQ0P.dW&[[8P8L)8;:/#,u2O5+=
%NuN3GVGQnW1mY$fMdo4c`Did"rH:,U"AK9TlCgegP-jh>6sGS/QADlF_)HD#rt^\/?5$]N7H]u)OZ?mL(`(c^"of3gBU<11CC,Ue
%F@61f5mu7q(H>U&7Z]%GU-YN0`^6FC$eEId"kka6,MFBcPec!0=HZ,V9?mg)2-;[hP2gbS$tL2W]g3ZPU<12+g?Bc?+<J@6Uh!f?
%+OR5'"^>YJTI_!LNb'bLRM@EJEL\>1!O;[uM$<5)(crVg<@9107G8qU#-X.5NA:j]8>G7m(r`?=lU5C%U.1"'5?^\mD)[?jf0Q1m
%\0Zfgk+!#oRg,"Q//=6u6fNrfTog!7G6Hcs%GFrf:>%0S[,"9ch4Pa:]@#f'+1M02aE)MMaU0*^'g]QY7DmiGB\lc%&[Tb[Se2)H
%eeR-Vg*&#OBZI(kB`tiQeW^k)QQ.Ckp_@".]JBWVGR-P^8ur3?$*:fi6o*ND#SDa'!\)FqOF::7n<-=MR1(\$X-FKX#!aERgZtD#
%<m;N`N.Vko+^g>8J-Ff$.Th[^eL4U`Q%3,7m#E4ZX=YKJ3(ht>H[$P->)e-96NYG%QJ[7:);-]:l9r*@jEU#K-qU^3K4RM'j`Y=A
%4ZM'p1pY)h^faUP=90>'K.'q>K,#]cV#b2Z#*pQ>BFn3JbD$d;efnc-_^=(a:*s5MNp@=>0B]H,#/+GSWMJm>^k0tAN?jP78Y[eZ
%S@>7_A>j'D@^>%+&27U`%m_CJ3uZ\<H;A#b%?t7UE?[d'F!4JF(f8<tqETnGqT5Hp!dK!.5UQ`hN[&h0G"H']h6@,q-[7&J,c1ZS
%^pAX[X=,G3K6CYNlTduc\2,Kn,oI:OU*C3jGA$.A&*#C-`>NMEC^AEo_18N#N=`)[p;.#R3qE@/"FDI5JJTkF<j^7/4GcCt&RnB\
%^1KfX"AZ>+!$9g.jD7K-5ceQV>!C;jYWX5`kZH!e![PoB2@Y8^gPrj_$5qFF"`4/i`M$j9UEPkB@K`,I:7IGDAB3H047@+hOd./7
%LL:flgY.>$,)rnGY95h#3[[#^#N13?'F/)$=gg/?7MV!m)jk,Pp#d0\Z[`55k(8pj#/[&pK'g,Hk]k8u=rrY[Z5,.H"tLQ\K[HN*
%0K;#>iD:8D[VQ-bB[5UtPoNLC=WrqG`EDUFL1bAj$\o0/1l?kjE^L]PPlaa,j=??XM+<7pedIBS]n$fUMFu.ok_KcV3CSf";)G<'
%#f*12:=0^e3btG\)c28tRPUUKf='$nFYZpCUJr7#*Xe?E)4N_BZU*elR2mhM]1*nLP+=)o0O#6,`T[e,Z986T0l9RH'mMjB!0_,"
%8.NURG""c/8J$j8"dW[pU>TQ2*/_5q`/1d`.mUb,_@88PKReo-5Zn2OK+&hj'$c%O[W6U1[#?3n'*KkN8@[S#F9c_YU.5Pf$,FoD
%gkK2O<@QX:KF&99Dl'j,.]S#Z&0TE"Op3MpW#4hFD?H056X%=K6"*a7pA+aiA;_4P=Wkfg9JdSsg^"1A]1$3q*+b1]$AO_/MXsC6
%W"FU5BdKP]=L>AIf.gsGg!8=^7-;j&0q(\&,9BNF<+-G56gA8p`Y*'nKigf9OYmG9hMbI&[c8Nf-=I2](5X6.Bsa7=82ZSZUWAP0
%*nlbB`$>UNg9TWC/35\U,!(L>_-$jo:*@BJ&cloZZh&,W`WCKRQp:oVE$JkjdEq)s*_=I'g#AC)"%ub3Uah;@_""jQjCmmtE?je&
%ADh)H::AkZbDF(cO@\cU._K!E&;SLTeeBKq!FXbuQgM9``L`em",#l4el$^jAK`D"3t?u'/8Q;0BU/lKTd#IS5]+gu>.&EN&Rbom
%Yj>o1*)D_W67laX$3D"HMc<Fa4jf3>g,0aC,)J*4Z6YW&72_]+6VW+YM)2.SEM=hNP$+h<`/CGj_P)BJb0jPOaqCD1(3,FjE*::"
%M:6-n2EN1[S_>AFWP"EDEKX>l@UPe_9SjAJl3StDAQ99UA((gSa]a\tYVIsO:4WlM3nZ!jLl?._CD-)T/2DAn0<gb`7Fp/J@$+[T
%/_U>(1CKSD-q?0`8QfT_"`%48G![rtVZj\SB88if"PU!ofh!<$[),$6.=aR3@kNk*Z>4.ug9Rs*:a0OPQ:,gg_\rNGf!R#M&\oR-
%7Z\0IDCB#R;LmjRgEf[/Dh3ZU>jH&<FMYV0S-=b1aZ-+l]9FG4Q,)(gQ:hm^V2?/p44TK3\(o,Ob'=[TAC81i,jknFAGleAN$)5^
%p_8?<!q/N5+tCmm,M;gBQpCtLXV'pu%2!kDad%K!TSoaVBVXUiR\K#3Hr8H@bBBQA(^G`>MWR??^C;)!g2V86_JJa8gCiOl-g![j
%?l>GZbT16s;c[3-!<ijPEFFc2U28QM8A\;6(=BsNTi,No!flKon=YnRm0]A:nnHOn3%6W>\9:BH<j>1*9W#]71tTLQ"GA<KB,;k&
%cKr,,Z?NA`db=L+g;UH51<BI^JdCG^FsAa`Nbu2:&^D))4(FW)TktE8>.u%O2WoaK35BY&4"YJr#u.i@;\k'NNY51^YQ6BA^Jdnj
%TDk!Po*_Ou9DfZ76G`OWg#:i.VnW?FOLG>Ka=hZSrb_Rqg\VEPbM2n>>_GY+@sP+?0$9?jm:<\-!q!K#"bNrQ@a;2IcNp)'/U\EF
%GuBG!g*DQ/&<%=U+U"PWP!$g!_k(\bE+fWuNWP%JZ4U6U4?-9&44lhE3<S2nr.uQ4N0@`O%]%%!6-(,bP"+2u`5C@)-"P#0ek`5G
%IMQ!e>s5t;4p-=*E(@n5#TGN0$+<[r!Fe3m_r])HrY^fK#M9cY%K(iHh2ZFp1;))o&3MXTUuWLsT3lZXKr2r/Z]"4VehYWA3*GE#
%>-Q\\K?BnE;"82u=s!6J2)YD0]@DIfBctdLC40%JiFNHF_,,_;od?ll0N>@IR8e@=A%E2u+7gk+&J6)0dhFYAQK,WQeY1eW+C<\B
%8ulk25H3jePMtG5[:<mCa+dqB#Nl$:)WjtGhCS0*@P%Ujs28R8T<VefB7,G_^)]SOh1o79qkQ@$Yo2"/*[`#J&d!A0SofAWK'1^r
%fW6s8"iU.``Lf;#Vr`/^]f-%/p5N7jV0;-=CfunGEJ<JHH8G8(1M3T!IOg!LYi4Js\W2,NC1_mI=7@or_r0b0]EDF+lh"5Z19l,k
%o\2lY;u)Q/7;neWF"eJhO3Jr]euihf07@s*>C8U:h-uhS.":Agr.I-=YJjMB?IL]^o\m.I-51R"pPlbq9s,4fmmB2,Vb??7M;crF
%,M&cb/*?6O)C9hC;gMM&'N6sMF6<1@j->>%FQqaW?=GIeIu+LP*/u9f>?%)keO^fCa[?(CY<'cma!D8X-@+esS;0!3"X<HeTs"&8
%RHPn0%H[.dA>8V=eG*XMnOnIt7.fk@k9LY1,bgJjoM8%H\W<8:-=Lf)'%&Q-iDS&k/<*@ZRTG!;Xg9COU&Y'ED2jQcH:D?PS>^qI
%#c#u9O798]S=.>l=*eJRW;b/F,C/g#12j?T%QCh]I]oXuSNN=fnI+I=cW29AO(c2"P=WJd!Z07/6Q_H3>`=RMe=4^SC?GO@9DFf2
%iWsTdQI_a`U2tG'Z]9NKna@ig=N*/d5?eGOV&&i:Oo7bHH<mq-e/tr+`]2P*It"6G2k!?E4f^)iFOJe,c'$TO>f(l`hZuS6Z=YSW
%">`'jo?FeA'!kg=VlP$kf<FT7*7H_nbu7ShJW36i:K'iP)NR9Nbp6c`J+8s'hj[+qa1BhV.otd#c)Rr3RC/tD<n&mj+]hR.4YEGL
%lfpLjZFTPR"0K]-dJLBmnX[kpL`2+oEY.U7%t'u_(lIK8ZkEa*@M<_!^)]]MZu-$<5*"j9p/E.,F@5Wo@U+;"9/H+as*e&tX;IE%
%e5jfs=ugTBj-eK5U,r8\"8%o.H_;:<.['+"``e49c%hm]J!Go56*A<qXr,C1+86lo+.oko.I\\3`:58Ek&qgR]&(RKWqsL*>GRJW
%ME]mD7<BmUeH+msL&22;A&H&uCA]dsjX&i`Oas2c>eKSe)RiDMTs^*f-W.lC$U2psmZZMU++K;^T(J/)iQ!a*$!qrs',1.\?\"]7
%^bIQpkmr"]q;YVlKJ22@KB\<?dc=g/Im#e6rpkmk$Yip_7/Tl)ChuLkk^:V6UHdsoOSGa3a7k1Ipkh,C+QVqGgPE1/hGop3KoEKh
%'B9VtC1D<!W"r_@a2V-"B5-.+okF?kc,,[ml):^?[ADFf<AOi+^(n,fpcG+Ok'!ul)uHt9f'Bc/]%U1Hk(1r$9;g?A@(>tNT];9=
%;(;CWeA+T.pG"T'pg\n0dtSqHq`6X<4lHRBj5:+$ZS\OJXTEgtrkLELj(B[%.,DD7U\G/hfW:kC/<*jjRG_rXs6fl[pU3\`aj-kC
%[8ng*.B_7Vbs+E:kj\#LNB1D7gMlJn@F@E[B<$]8DD+<3Mh&PW@nQ'*j_&u'^pobhOj"`+%e&9p2%@6i@$+m]2d9h_di^e>&u<8_
%7tum7eC]-tNJ;%[58'c:DND9dZ(lLU0Sk04[m0_NM2t)$T=8:8V0,``rbGGTV,]b,)[VmRHb:)OnH0TrI+gCs@U<M>WP@2WAk,H`
%CFa=M[Ia1Npm@?okE4VLb$"ahkE-C]1o@+=aa']V>N&>_TZ4r?I(]&A$!8+TZIBt<*\"o7NoPI/C%C#hA*)Y.#JK/?,3]X4CL_E0
%WW)E_,UHi4gmn&u6rH"RP7pOVb,P>2-^*[XmR0qcQSC+qrSsG>9#/lBQF4a26rFYo)jb^>nP1>U?tnDja`i"SBcQie`pmS>P,4T%
%g:ZOkNq\O(8If`8k2h6NU,,!^nuks]Q5"_F.o^T%%n1m7c9oHh?HgK+*$&@;.c?\"nFa&9#[h\(eAMpt#"'e4%&(XIHq@!?iPZ:&
%%,j]2KI$_(-3<'N+<5GaW$4BrR)+Usr"V"I#mVj:i5?%!bhsRY#/0n@%ge:YHsg_,?P7kJ*p@-O-!sm9A8PKI`L"MRD,&S^`7d9'
%r_Zn?/`l.__H0Ojo:[A"9(DE^Llsb]9l`_Qe)d]VSGYcZ@Z_OC>9A!/a-b_46moJnBQF(!jSGX$>p!#;.RU%G*r]%dptmQKL4<:`
%60c?/h:F[s[Ae;U"PZP'g/SloQt/d7]"AcQP?X6&%$'SS8\Haf2^pYSj*5?;bjb&H]e\icKkVY)f4Jg#;3lY>hr.,Ee@<320r_I;
%PO1oL^;e*)]QW=PCbA<+gKhJt;=dY7KOG^-4#0F]5/u_o_4JfSZl\aQL<h)&[_.fV@,ELGO3^Z)C[q=W`ZbFR,>P'13+Cd*UBFaZ
%JpAG.oU$Ngnaa[ke!"eD`W+')SSqGV2)Op(XdTR5WJOOpcV:%`.J2\te(7JPfpr($2Wkb1q>-\`7?c!lal[u,a<mDJ(j<2F5M;S,
%:Fn3RSnG"PACc"2+WinAP7@?0LA^LKndkL5UWJ8gR$GW<)tK1%q=dh"Rr$0,PO8.,)tFH?g$C*]`M@LY)bKiD2q*n26fT`NDh@aF
%]bQSmeQ,?C4#WicmIA:$J92f;pDfgW@))G#V3Z-<oF@\SSHN+Xd.,BOp@t5_D_rUX9W5`*?84V#HZM.g\W/ZFNUo^^nK$-lM5sd-
%1fUlh$A"e[Wc]66UV?Rldp&i_C8d+lh,$.nnX&:3^_f8aP60d?^c3bs`b$rS9KT4/^6cWpQK%@#.K@lNI<3>fWqn'amdO7<.E#jo
%D8E\l2(MIh2_J2I24Pplck:`T_am4Z[8eb^0U>Ak6Pe!o?*t/+d.k[8HU-Zhk>Yjgo<Q:R*TDq%VPW7n921%%a'i"#U.bN.+b5"N
%]5Gqdd:lL#RM;;>7Algo(K=if745,;KkjJJU=5q%1atI[MGBA0e"l1a.6>"#q;G)J9M0"2MsK7EjNL6F`k%K0R^1DPPghnj/*VOM
%_/OEVbknjl+7FB?"<<ECm4\i+)O&oa'&7[e-F^m?m,&CIHo?@gr,>:bNtlM2I=I3HnDmW;M)-1\6U)pCG]Hg=qfg&:NV^0[iRd2g
%j5u7I=0t\ln^q3rQ<]h*f<`/VMRTD>UKu2hp7sP;^H^-WVbQS2HY#'EE]M.l"W6d5<1M_gnb1-WrXT;o7Mm`7)8q$]:B(rGoJ6M<
%5KC]IN/J.pS'@O>U30tENFZZ#(G+QMg57-!nXl2)r5)]gk`"T9c-q0NK/>bj1eAV++_d`TC*pC'5,k<<ms0',L4:^L8TP3*qcdh]
%3D+":^D1NuRZGcuK)"pH_p:_%,mZcn0`H/e1*>_kr(0Il;NgiS8i"8Z,Vqne\Fe`P1'oq/P[l*eR7U!4?-i2!cM-5N4AAF'"&h$*
%ac&SY"so8+P2r"X,\?mu.:^h'lDDuje?oELpIY+h@WIRD$%qo#ol/I9Y`uB71Bt$@-X^ZDEr1lGAnkq+7*X>MiZmrmek0s?Mm(T6
%Z'sUNYYMr]"GZ)0&g"`7hMO`O'E<NcRaP-XLAK>"47r_jF.h9T3gL;(1Y@Jq)!o/tT9WsK2@[?j5T;HMg[Q$YLS7C)6.i'L*D_lW
%^*:(W>kAcNioHi;s.lG35FhOjn+lghC1#N*;<t\Vo&Ek!9p2fB8J_<1miIqQbO_@.m132sVQ#W(cn>]Hj)r^%!Ft/0bV&ua@ro`;
%%0@S?g`&!$[2E",)Z*eZdi/aF]KI4PhIJiYr:^<Q+"J;fm/ZFBmKZDud9egaP>lXeMG@'s8Lcbm7GhhA2G$?p5q3d;!1K^X+"nB-
%n-94Halpc97cRi;1VUtEHlaZGkhDTP8M3'G745Y0T95'&+#t-3_VBCtU1sJAAYY)a)Ol-H;V)kKL6B>9:Qj+dQ]-C[?e@qnVnnb5
%q=UHMFbu`O:%!.LHg<DsC3O^%b8]=2n_m1=jLUd714II`7*t!RgfJ5BV>e,r,#*AbWGCYBPpFo!T)#^XTYPJs^QkB;qr.Bk=aeE%
%)Uejk7OgHblRegYNKkl<jfMPC;?ZFH]2f:]dV?FSc^rYWhaoF"]iiGf)=AmOV;sA9*D-&F2hR7b2^cr:8s1UTfBKD^r;.qbV$el^
%nH8jV(t";/eR6/d5GON^(\CJK<(?h$XKP_=m.aVo`]p?PlPiQpXsR+TJ$55Gn%JN9RZ/sIjaUIGT4BV(l0q_'J=#*4]0&iEJ*iWW
%JoAbGm%,hJ*6K!RCdKW&l$t]SR/qtKRoZeqpa!.m09P@3If"KIU9Hj46M\s@p,e>QC^j/]L^j'*1N)7M/">bN5@(st^4oq&k9M="
%Y9DRE,+Cu2^IH;4[G&Y^,^W8X1+n^Ba$(:=-cDR>m=P(N6/oMIk7NIe]T[tUhb*2IE0S.?4MRSl8ANW/9<NX^Z/^qZ4HBL8EC@RL
%\,*&dW"\X7NK##tC$)[pNCjl)fEj'_Aj3WQ,emM>EQ7J)d#X#>:13;+`#0r\BM=q9!j*CTB:RVQO,G*/?+rPn`=lT@cG"NCC[dN0
%UE,DWlb@BRj"ids.MZHm+!:KfY1Jrla!4ih-GT2"gd6l_kW6"6i3tHhG@Q]#GA&K\>l7eq`lTm\.E_K?m$#m2Rs4cb_/cpAa2iI`
%Md+tkhS%<lhT#S$=8]qoJ\=Oncb+Ydf^+ZD@<-CXbr@;aoZ+Sh-65=B*1-P=ri;LARkT%C\H$5hlp^J)l46_/n_%eHq\+e)l:8Rk
%IW>YarS*H9.H7k)&he=r?_e^OAO^;F]QQ1>p"t/=I9bB`f%X2'29MBXDX'=PD>$]#Q=/jqWG9VPibsuf.9n,LbPF95Yn\b_48%(-
%1d<'`!Ae2B9)VmB\33^*pSEK6T4S5tDgJnu-XZ(kq5U-1HHeE661YT<_lMdoE<utZqf^CIQ#[.ks&I]5.HX<]3MCMIO#lE,X\%sR
%>F4X9f^3IRGY8AVrZ^/lDO74A8tC_.bB17R7njMLHKQ,7_,j=,XnKF(W-,aK55fWV-0&t*iRuP#9lC%aVeRF[e#r_an>ZHP0D@$H
%ePGgS%mGDs[_GaGl6(4r8#7,ri7[@m^X<O[@<n;:d;4R"3B#Cl%;/M$i&"HhVR38Gko/:>C$U0C$e'3Nr_OIMr[75$dBa&tTLE%I
%&Ge5KiE2D43N'.AD%*1sb"rcuMkV<A8!htf7V/Cr$Xo#9oM%_7Ll6icO_c`cFD;ncK>0X1$Ptrg!VjEXV#4^kq)Kl&".2!qDou]6
%jp?A/5L36OkB$<B^O<,ODFo-9!A2.n,)!#:Vn[o7r'K]6&iGCM!a<K0iGJ:-3:d\2%PMqX#9GK1%k/+85#OGV:F^I$51`)[80X2E
%[S8+$+SHWlO(rc3_%QE7!tSPBXXAp7&/*e^AsaVV.[A9EHHQiK62B\e?Y`dCbb7jVk0($*QMl0,)3r:Lj&R9$*oWaC"'_40kVY5_
%2u:4ce:H%F*`XG-A2M*OO*[0;:CBdqV*0u`_ud%BQe<'IV7L7cFTbGbCVbUYO#k)P;[Ut.1^]UTn>ZOU.i<Gs55eUnl/@3$E0;pU
%o?Zbi.Ut1>K(62B08M-1k667=h;K9%7:LfI(O>ZQBa2;u`*qWI`d^R%Qm`Q'/i,^.E7m7@3q"2Ph>g`c.Jl=tEAduMBUaDAhf'?;
%6]PLaJeTrhY>Op1TuuF6&:B4]WX$ahG/'gPh8/!1Ts.3^p(0b?0e&KP+0+opMpn>JVr@VCmsO(cd5i]X;RU$b7"<d>+T^>Of$hDu
%i'B^73AZrsF.ttk8l)Mb7R0jH1'E4O[>kZrlZ+-,!&<^"WERoi:,MH=!bb.M77%C61WL$`BZlU%&2OJUlb$kD-iO6P:]Qs,*\3!@
%Y*^8dVo!^lr_;5WHDf0Bb]mq7*stRbOn&sHR,]45HYVf#g,WnM=#_B\XrKgglM)9N+9PM`7ZWkoE%0jPC8^V!`/qsu\bsHYc,5]+
%_GHhs:[&t/hFFr7L\?dcLKM$M8BG0GGG_d[/_@jBoCD[VahTRs`h3=H1cCj*X:lHmj+!V3`$U51)#V;VIu)K>P6-lo`9N%[^%c>)
%+L#32E)sL"Y\GddWmZDsKc\8*]H920BO+^l,T).tWkE<4K;3%ZRMeV31^2N-<<WNWF"ZpYX;hY.oq:7>&;K;JG#QdlT([Dto;@t"
%RMfsI78BKuK;UJVaGU[gA->2_"mh.YM.<B3gZGeO5U/2l2"G-AUG)m/MISoHoU^Z3d4s^O$]KoSA\L0aoGGq7"qH>)",FaPJO<kc
%^nEGli)#dqE%"BgL[sRaNe*g2a2$$*A)M"P1%7!c)#+tl%/^Mq#(D;Tf7)ijs*FR<F;_Q0q$Vncs1D8*>A!;/PWQu6cS$Q>M9;G&
%(!iVJG>n3]).)b'J4A-OIH/9uFJbH7/_HoF-f+QimjMPFeS3YF7'9fa,H$!9Va/s4N+[0udkfJaeM)D=eU'bKC+:tIcQV&]8-4]C
%'ZVD]7A4Y73^(0&MpMi$Ogg1r]*b6#aDd<u8:Ij$<XJY!YNXh0]@(VcGGBBK4GtcY0$W>*FJSZILF5]bL?Id=kVF'r8kV$9Pu)O,
%,7)YGo=*So=*J?/Y'Pn0J+KSQNpAm[jtH7cVL%!2gn&G896/b..2(-:34Rg@SZ3,p(Z2!'[FIU!:[q@EpiP7eeW/f9jaC8+WOU8f
%s0FgKD!P!ZHZl&EWZ>$C+8\hH@&S3]3`nlk,M26:Q.h"S0)`N_Ee'td<(;tr[_M56PRt&@:r5R(!I:#I%)jG>K\d6Znq3='/VlDS
%iVFdndfMqm34ub?N*"g#$tV^.&E@N&$cY\fM1.FHO+>+_;ESBJ\0W>:#M9bM(,fsM0uI2a1?R@(,o[uDqBnO`kSKD8nP^=N"dLL*
%%*fA6VQc@_m[tC0M*?SO0-KBc:T#"j[MbfEjG<C0`6\*;mfQ"o$r?kI6&BnC#ajSa!hd5[\r%Jt<%f(a7=_XRD6UZc[TI`IQM8]@
%U"7DO"3LkV)%1ub0-eCu'2VT`k+?]p'iDah@*T;,=VI7/KM0*@1cED/7.=O-`r?^bdcI#7-r>BGni!R7aKaY80`m)"dbk2&Eu)ET
%FO#I28D9e,oSM:q71;_U[:tc9['L5o;Liq[%'lOROqDrn1pDFRd@*c?XQV97hIe#$)NjO(*\iN^.A@9BYIP,hs+Ks#q6PMd@YHVO
%Br8*R8R6"j*TX[F;RVLW;mtjSJ+NGS9KnLMRE3)p3^?PC)JZ:PVb2rh32?>c,O$N\'o7CE=%o/7%8CQU(d=[hO5_9U7I-n0nVY/b
%Nb%YTJt_pbC+j.hR9oBB7fL$m%"4K-L30^q'=fb!7J+W]rc!ChBA9#._Y?J)8Bp,n\.DIs#UohJ,_\KU5tD$9.>C*F5tE%_L(PmD
%5_]:/5p/(C)(l3:6nuR`+mCCeQlmXh`=+m0a[KV#h&3Vu)W),7nX&,$3qJ:.V7"U^#2WYI?;Ei163*5\!>V,T^k*7%iIKh4O>tMJ
%\RYb'kVjdA9%%&;/+L&fG=6PCGJe,BBMN`:\H6cW04Afm7"`lK!IjE/>a4t//i;)XqrE*f/,5]g"Yp4O`Cj(3pY-6!(DTlb065\S
%j;j7sn>-W`X-+WeUL,msmtb(!)u`pVr$Eslmf^3TY(XM(3:egggZ^m!:lO7G`2eCU.tRb[*qVq8,NqtQo7%d-;0DM+e/Oi?.CJgE
%ZeC3]-6%(&>qfC03Xm4!Nl*.+baE2e@W#X/l373Y9(D46)>`(RbX4KiB]q%O==YWA9Y\+^,W?&\5N8.9"T(@s*q<D%pIr:!%a<hF
%WhM","dK=T%u#-C?W6u_F`TJ;:>u5ASr^:DHd0=_JUWZ2-1A7KqSt>N+t$r(>*SCpQ:SHV<:03)ef&WqhhD$kAND'ab\.4\ef*[L
%/H.3ApVC0*VC6=-F!H/fKoke!QqF\&Sn>s(>lBW#e^&HVQ*W[oa\PVi+j?m`:%QHQ*q9t*UY-UQoPPi[Cb!Qg5^@H"iI-@ni9B)%
%*Gs>+)A$]_#%HY#->'ht'hi*$S-PL)^HGC4>/-Uh<I9%mDf*`'mruqAdWEV\bWl<]n#"5Z<1<3Q7dAW&H`EM)Ujp\SKmZNn)b@k"
%4=&["H5-k%Rkn#tS7)cPn9MK09NsH/UsbG)8`ZG'![ZJXLu<`]1sHP9.:S4N6&Q<-=G&McFj=04Pt&Y;SCiD$dX/FI\:"EG[uNe*
%B=?&VUT7sX?'U`,$_!>e=#\qab3c'HI8`q4.Qp]f[/Yhb5U*,;kamK-:M]]/hYU1*.o55j@[K#Y0cI#P.]h>(!kP5I#-t/6TQGW2
%]e^Ik_"0*!3ED#4eU5j1>`;"ID#HshGP(a<hD\AoUnTpZ<Wh/V9GL#sEK.g^eia4iLcA4X:QAC.f,h'%Vh<qF.@P3&AN0j]Oe@d1
%-ia9[.3C!/IBs<_N?EuGN,G@?3P10"Id@Y9ef$5fNjqTBiXtq+WUZ-7'%dp(m@,$,VMu[4WiH&.VFh<B<,,T01OfV[E0t48.%SDm
%nu/FGor`N$4XT,%`L-ari-ASX]AA=gdA$#o?;k%*C:E*c\RM/.\I=bn?68a/gF`/(/XrmNeNi'^1dheP<7A*_TWTlKUS^^m3^bN*
%d!A@NJeV)9r=;Hh&]V<3[HL6<f>YPZP5_0+9oqLlU>Xoc`-jVk,[$EJEH9K/OO-o@onV6>5uH7*1AuuCFA];k^sGKRgV[YEH_FB#
%a$GT,2?kr\Io(0_[WW>uA7*aM8dfouT$PnU5Qgn`Z!6k:HCn89nr?O.ca)D[>QMD?%XRrI^necg*a.j%"kaCkX88'tSmVU4PdoVr
%Q&a0[N+0U+LDe'o]aD)`TU>\\f.sSAOZa03#sr'"9$>d9GPMXIU8t%s;3)X"pT/LQT[h?r_oX]"RuO#>j1D8Ld:aIO>;Gf&5t\A^
%h8N%_Wajo4@CJD5[bGN].?@NW?74LTh6iKq3dA2>pRr')Sifj`erF1$P1N`B@,b(i(W8l*I7@[2K+#a+'eCSOl8(ajhasKM%AfaA
%1Q?SCM),Te/>&CV^!L@T]']n!_VS[nf4[/Ur>m9kH=4]#@kMeIq:DoZ#Quo;'YKVr3XqPn^WZt2%&(@HD0NT]L/bO8//n`A+?RG`
%'EBq';&BH.<^]>9'$ODoRP1[8i3/9CrCdq8#i.l92@^5D#tYW>0_HPCd83#1_PDjYE4cqC=SV,"*3s-dg3R6g$UuA9)ipEG**>K"
%-Agn8N$&tO)T*G0,iF_ljC>-+X8[0rh@Q?+V`.S`!+\D=keu\YCAQS3cLdV?d6iG!.)Zr+</6-D#i3acR;'&+ZP*\qldm-5fJ$jL
%9ZnMjKn7`1Zt+s>grjfh8&^\@7R5MsNeo]cLB4erjE2/Xd+AI$HVY!Y;q5A%6buUkf26ksZ)SW,T5LMAF?Ets-jC_Z4[A5e\ipIq
%2bX8iU<ub9XU+P@Z*YZ>!3,TPom"IXK.ELQPHfmu9c.]BWNN_D<b;7mF-]C'W\s9l&A9r!?g#`fO,gt-Ujdu%ruW)UCZnL;=`@%o
%15KF>bu=N0]P0'9FGM8Dm&U'`H2p=YCtYBba%T6M2aXC?T@Lb6=`HKF)b>F[:40XaNVLDTq/a0$00O84=rSYr0HNqE*i/$;ZluT?
%J/TJA2oIuq?rBiCm:US-Vd;l=g)sX6Lu(sTg1*VZWI':&o/3S?4EO7*kuHr@J4d#BR;HN&/OHZEa9VuZ;>qW\1O@@S($C=6Ma3ga
%Tn_Gr)=B\2",3Ai-jfs[$22npCWn@f#/P7RiYsHnmJn_@8iK4i@K?rH.BmGcnbpK_<tt2dGY*0-2GPWe4;5DIB9RsC>)'-]":ON8
%,m&Wo17W`Vf4pBINe0&LD^^SR<`!5,VAKEcPjm<1<nM)tiIc;j7greC+"E<QpXp'#'#(Ibcb0>?0q^[1D`"\bneg:Kb!RC4+/Ae+
%>1DlJ^boqFPL-UN2"f-j)h<RO2DQkt&Lmj%RVE%90HAPq76\_AXhkB])!GH\Z\DpI@b&]=1/p4UW==lFTDXEd2"i27Q;mtLonFU0
%d1!!cf%WEERSt##2kQUZ_dDNIg$miZcYMgtG0/]:q4Sip/>72jC+`>Lb2tQCUX,JGG'>7HW$9uNT5pDkZaWSCQg8^nb16&(4+!4;
%D].<sVj5<Je6[E8H%)oh.@K$/iI%OK9Wr9'Df6V7Rk'c-EsGo=^FkgFb^hT<F5/T@onqXbO3?%>Xk!<mimuh(\$soBB<m&"CUGp/
%fMHp,rc.+sZF.]OB*E.#UL)/TjrObH<>sJ>:b7oF<lCJEZhXJOceYC`F)AV="-1X(V%$kE?S6A+0([t)F6I*1@[#NHKoYjqPag[O
%amI\b[?.qT`p/7^\_C;70&LNJoJ5g1ipodX4MT]c!ZEVno!aCLI^+0B.HXi=XfI_!rlH]RM)Ve;,2[!jFh7.L[C/)>8Ho6jH\M@;
%HQ>;p^(bc1]2SO4o_hGN/3Vf46sM1#5+n%QcS*gAFoGpcnAIJkY2s9JfqnW*o!bHt_VBFIT_90\0(u07<pOni)1Br!9$PKl5tt9\
%75VA)hc@,]]gf^nZT4@1QG3'6Q*]-[`5'7@lJ<0^BS=oo]<,>951a+E5?Q0fmB>iE-t[g#2J:N`l)!PXg)72&h!86rjMX&Y]O\"]
%MH7eJ0Zit'qL!Tlc*tXO2W<W+1:(!5?(8PZ/^$8&9t.WZ.njl;"oWmam@nU4_UPIOn@0F.).7/G=I_k0E[tB%-QOJ4NVrC"OL>kq
%U/@WJ]BOrW<`tnD:G(B>#`X?UguD6c#b[l+T6E<nASIpPApmjp/F=,G_K+l[)3)1=G!UbaW25K5dP=bVHsF,b\m/THD1"R\a0Y#,
%%-&AiGoI2XjnB`-mT^Cgq=RYhV/j)*T?7rlYdfU+Dj(iPK^\S=[J50LfZ`cuPS@]s94"QfT<.Do+#\/iVn/9Xr_bu%<>cRO5Yeu(
%Sq^""S'oirc+YDKU:`[,]mk2qP?Ji6a.BYR^">Ft26]V[>\.>X@s[g2bRtg3d$,U8V2IH[[9)3?N2L`7jkt.mc]Z4^L&a$>\@e'X
%jnk]-rN(?7Di9KH/fG)DX=gXLkKCg[SYu2V(&5+0Bk3kGTr)b1<mAt$lCQZNP\+;]4efDus2p]qD,k,q?8>\:.'!9GXHr$^]*j<?
%iUj!HUXg3=WaRGWlLF_N6OAm2,EBoimU;0r3k(FS<^o`*5?$A9/h3/%+L<Pg]sRNT8,)h3EhU#k;=o=>;(a]Zf@Z7@benV<-*1Ib
%K*u:&r?f9XSR)g<!GHunor,D!4JMt\P;Qle=K8oPW=RDrKWE"gATPK\\L,KmX5%,K-EF`iV\HM0-=G;j^--'DVK[5h^/idLff#qr
%dflOX#>=B02g[I6a0/n"=Ell*=kknW)XZ>5\%Q6O>G!R4!Le'k6EYX-5Ajb+GEm2?3k5;KCJ.XkX!<aEBj!Z2b-St-'hj!^0%HS$
%Ao.s$TsPMCVIsi1.UXdYkAmK&m\1Nc7+hT>36-lR:Q(Xrrq.0*;&>9^[fIPYWoEABU%2*XI4f&M[b/gKh>:HoBt=/G0_L):!<_+S
%@;58>^f+G@&AYWuo6@i"Jm7'^9?Yl^3XG<;&si=CQ_f[aJ]1E+B?OMMJu5(q&9CbUUfuR2has0d9)Ja>MRe";lk&sW_:D;o[7=fT
%I,2@A<KoDL7;hFcQ5,I)%Sl9BrHXEoSbc5n(;AQ?kj:]J$[p_/9rHSl[C3A40@(FmS[Jtmj6oB$E?"bC7i&C\HfD6G=bSk%:Y0T1
%#=AO"jiL?0[<,R4e&>8JiMKgG+D]%b,C%^9FE$=Re=er86%]aFa4PFRhf*nC@LtrQ0r>6jJ[g8^EeG:J.H)/,K`k@DD6%n<(C_E1
%-m_9'(fpRb()e+^bV)fJBb`eMN,6)R,f#3s,08'ilA6a=1FuE/c'jt<G6U!\c>W'k#g<FE#ttQfK]M5)NZ#[-nk3L6oAtG?6TM*S
%>p99.ImQ*2'Q<3B&>J\BLG+80rG$%MW-ZD/%0TpUpi?$RW4<[&On)[']]'Z:94Zl?)?Cq6aYg;5!KA>Do`1nM=B>?0D#27&\:*nr
%!*4Gag]coh)rK._\B9_\OYCf!94l]tn^oQ@6rbgVb#jsSgplA;&2@-uYgedB+B^aXDhM7\bac"/P:7`J'2*"S%L,VgW?BRr8,*ac
%!f'iS\B$MCS:>0'7k!O]\^T^$4p7DQh15OH<A4&-jXlpM"uP'jgCGDBIU;M3/H(d#[ISrQ?//V[Ni/18(KW],DbGTM`#,(:+db`E
%iK-C$]R^2Ci0BWkaVug!6F3:#jrc!U\;a1k`7:>L3QF=5fu$sET;<j(4ocKmhkS+fHF_-4pGZG=0:MfkRQKo,S`e;Bh0*M3P+D>3
%D3_TkRBE*%S1_>9)8WP(>CFU6(%TC)ZE^.,[SJfCVP<:uc`8Dp&Qe;]V`F;5hJ$uU=Srpm5`Xa4gWf+mStHqSU@!?jH+S9r)HKO6
%&b=l&^Lj"c+u;?h(nOgeOMagFctK.uI])TMRjYnUXEJt!+a*%G5_=!Aq0Y7d>Dc+>!0&pAEYT<D7hY?mgekWWrUQYTI2B2ic1]@+
%KYE@$Lh5V9.%W>=6s\LUS#cniXEE\9KbW5Zm:.F`_P0sgfI/q\(H)SS'6`CT"E6kPKr:d56<;iC?a8b:0.L>/ndO6E.D+7gZ>&0@
%38VJM!*Iog<+W!>h7%LU6V18&0tTa$h-C9+4"Z\A\ESQ/2t2nY5HFYb@&^D1rq<Q>(UpTe-=lKiL17U%KAa6e;[Zq73K0eK,ocB`
%P@F-2BcF-s\]?<Y8n9C1F;DCiR2E4+[Fs`Aod,pmmhVhEV,%%01F'@T>6WTD^LV7/Z!Q,,T,_bM2qRFaWt<XmT#mNCSm@S=$Ouua
%X7Q0=,sM'=a&HWbeo`e5?u^e/Gt)jRGksJ/ZF$n8n6kS6>m@/\Z_)_2=G"?g\EPX&'i^I/cTa5O;sjac?pLhNg+<[-PX?_c)n.GO
%P/7ds^DjQq5TP.eEAqsE[!A@XfGLXJf'<8-B1ObLVYl&gjj(:RhdLER%;+pR9#gIQ-XhG;c_sD)ReQohBq%o35+ZKa"ACA>\Q<0t
%C9R9VV/';9kAqM:;2sO=T3%N\j6sPD\T/,r<a&JulP9lhm%bY+*@u?+H<RAN2l$#"G!N,%1A6_DEuD<u,386Y9JJkO[TMS>Z]WG`
%6O?r9O%>tf$cfC"Efn+FQ8Yo7('fVR;%<#R>Oa9)I-';nM\OF\L9T8_Akj<0Xd-fmc]6>O$D5M4JlPMJ'higYFKLqD>2?JQ3i?S^
%eGF/TUcjXImGb]g:+t4EjS>3kqe-)B2.&=`aQ8KZlj\dJZr^F7'Ug'Zk%Yu9.,iAAMmTm4q4auLGA<1C.p$<N:rIgH'OS#:3]-Ee
%CWk>H%NaEccRht.*n#>?%Wcm$>#`+('c^]hdhQa=[5#Z!lG7*L^Ne/+<5J0CIOREVS\&@;>!rPRd^">Kcgb5MgJ\![[1J.gXD6nX
%bVN@&q6S_s*a[p-PqB?ajn'\kC\(b">41R6:U>6qg:c!h=he30F5r+'LjrUSK&0HB+`-t#?@H")ap,++)_Z&ql,Td*Qd*,,5!\_i
%cUkP4@trjN=LQpkRSfSUrUQ+(cg1-gi#,h$ln[uGNlsjZ+/\Y32Uqr,H+jkK<fX>l<kC+MaIEEhk6=1?ksSm;KYei^NCN;H&EG0D
%Uu\#UE^:G3F4I!Ok?HBA6nuk<g=FEo8IJ=_f@UMq'&MGHY@$,&i[Gr0:9.SPK*jBi.qn5R]rdRjN$<'F=5/GH_SrAc2@?n-&_FDd
%D/m%6HCX.N)093Zn#*)!R8>9mq7Y%1]^rOI=okodOVq!)I:79u9<MEFSA+%%Q#<H!6'A\?%Rn6#1g3i.Om_&./UWt35YAakWb$+[
%rihp>-<4]nS<Y1nB?u+GV6?`mmq*T,/I+_UD3er4`Ha_TEj3L=k,Qtb.A+b!mQ0B/XJ2#W)\lhFmB9kAZt*g\>fb_em'sH]We9Em
%Eg:jkN.bO53EN6C7/?IPk.]s3^h00q"@7K&6+PK3]!GXa_D]KaWY_/N>AG0`ZqZd'Ff<uT1"?-mS@P!LY!8QIXFK?o@e"3PJ%eeB
%1LDl*kM8Kr:J/3B!=E$lnrJ-r5RIqklni5a2mPNb$8"smQ5?]bc.r:Uh=+fXh`kok)f9lR\)RLrc%FD.H@Bt<0epfH[jU%=A=^CE
%@XaXRp$]ks][nXa(:>$jo$(8ek?=G&\:tnu)PdFJ6ZD.kOSrA<hd=Qi(lgU:9:&:nF2#;M48j!AlK(,fJne=g0BY7a_G$:LmOG?,
%!E7K/?3'6FSKbt?.IQYR7YS"\8m5He+((AD..[Hd^/HOX/M>M6kFSGD1'9%_r<DS-;t>mj0$Z,3"B;I[p\+=4ekBHZc]Z1\H%*5n
%PFoQ1:7$mZ#A<.d/dHR^;LR>0o/E2O.';\=5.PYLh?_>^B@DPSr,64`/Y-#M7t[IH[o&:`.mTBP_8S>2SE&c'kG@u\m1.e`3[cY]
%[sWfU!EO193Z?7G--n,!X.a%MF*e@\=RYGFVkZ\!C,KhL@dSB&_P%@QWS?=i*<\3+9Mmh)rjk8!I4'To4SM"SAu0k[.^8RLa!Z,4
%'?AJ:ej2$3oX*aXh@3mr0/"q/$P4=u1QZ<e[IBdLW[cURXF33>n(c*e[oTcUPZO29]6XCKVKlHm\'ZbQmr-D+RDp_'noYj6B][NS
%h'P]A)<(0s^AV42mKoPpG.K?PnoXg>7WZ\S.H9X7d;eTUJ'JH`(u?\/[^@1OZ$[K]C^K3A#;^CB<,f4ML'h4?K19E5I*V+E6^%+Y
%]i<I)dNd\MZ^5k^jkK4dI!]SYj0Kb#o>DoDLK?1cRcbYU?o612*8hPlR-"KEjNc`mK]B\"Ng%K&oXci%<M&T%eNDI06Ri3F\L2O?
%+ROF\b\<s(b('G?]N*a(S=%:/q=uf":Yd<Y:Uue>`Xu.kSDBaA;=C4GeW@;L&f08+&[!kE5h`];4'?q2T36*]?K8]M2lYWfmBsa8
%Ydo=hV-[Ff]W_"OhsQmjdPTP.S%nJCe@M+CGQY>4M'Q]3k?IEj=7aDnCj0&:pW`C%6S"AnUXALr+(7WbMrMnXdM^b9=piOa]?jt0
%8Do^P2`IYXo]:N[-Z/TOF:J<Q]j9`7X1*'@\[]CupJOuBmQ\=I7P]R6*4YBJ(G*\[XKYSaRZ6&Bop$]tg=[o>R!7fcesoq:n)t(&
%]i`:oc5Ve[>Ap@1,XAlP]mV,*^QrWbgh$#<T@F"/bV<S8rGil:0j3)7Pjidfdgp+BZg`(Kp/90VDfo+kH@=UV9b`6s>!=Oh$d*O1
%;9RP027B<HDOS0`Vkf/8c=$%3Q'&7JE`+si)-'D>Ylu@=42)<-hfc<e@R#XW2btP)R7e@>S_O6jeETC"H$(]UKe7j!+2QU#orAPr
%0F4qBet=C_oDComS[0b&<f2qZdqJh^V_(JEi]GJWlBQ;)`ll6*2mGh]cHiUm9$;GS.Hns^h3'CV(O4uD)A:cDbMlj5G,:eIZJ4$b
%^4,9p_ZnRm7M4'm-HN2<Y(J`1Q_t#IA7lPWU.m>oq_*4gP>b@j:?G9H<GTJIE?biap3aD56dJ,CI<)o(gm`%V?60AkQPM2[RQ9^X
%atjcP,quh2N&7Y!Hh5l=2YF[.>\FHrHs;n$0;5CdFh=:1hWOTN(*lrbd#ipj;SE,+?96eKX"q<"[p"5_^/t\^is\m=klFlR+6Zqf
%nYnX+p<Y*-dEV_t@6:C%oWm]%aAMJ&]:S_5ICl@aAP]irE(/\X[SJ#(4t+`oc]iY-:>Q*keE*#jEGoQ[pS)Pn?V:"FEW[CV\7@M"
%k4[t@2#@e3OB_>,aR@'LebaGQ="T4=OI8!L&^R>>S=W[&/p1\=G!<CH[<d%g(H]6/\p3soa.U#Z=_fO'Ns;KA\,ct7>6CIF;/3'm
%]3X[48"DD6ZgremltMMI219njPbun)lr0gUI$#L(%3Tg!]h4fm$ej+t**P9oMtND\od/G1/t\ac/CKV8Zp-o5E*h9gjjk<<rP&g9
%-m+(JeP%!+dIG4_Wedk8+=H/;flN>&&*CFJ_"pcej'p\fo+2oked5UNKh_"IT(a6p^0M_)1(tZ]"KW./DVLobGDBGQ2XiJ0fJ,q/
%mt'?ClVE8l<o!fM[8+VdH?AYdAc,a>L>bV2/Jm3+Xk)h%_iEj44cf*5"(`T:B:+27`cHUY$/J]:Vaki>&B\MR$I!CchWc>#O7ef>
%IiYdokGU-PCM#[ank@;aZgB[,A=CmBmiBm:@Dn'^2?EM'%Cs'Df+bQcr)B5>k6r$t^4:E:?$4jiDi`soqN!U,YqANr`Gi28FYJ>)
%fdr\?cA3!<IsuPG?XQVa;<Ts1nG=!5%@AiOWB'.%K`k<FW(Dre0]]YKDCFO97>JrGq$V?=_!WK``1i:C=N2QiFL6F'M0e%0%U-.t
%=2-$0SVm=0_D$9\eu"Mrd!$lOh#.h6rdU=2%s\8,[fo53]qYYHs2&Q"&Ml[CZ0u:]+h+3"1H"`$Qqpc#3%]cA0%J[0VZ%U*)P7<Q
%1,c\!8oq/4(q*BG:=$7ELJ`Q$4s$B+;;td+:hLjBC6RJ[C1qI;j`8j4n;`9S"i'B;iq,9!(Geknj_2.DLlc\4R>a=jFr_'B]@Z_?
%q"7N1];g4k)T.Umfi;/EB>.$K7VH<rn.''c361V[:/!*=5FhC&VWg6"'o9tk34`q,RIc0]Le38fnD+Qh5mE,-c?eq/6$VFpD<N;r
%&4f+OP5D17FkD%D2X=@1l#p?s6ga8D^P4k)hD%fgK#O=*O$aef<bSH@C=R8Tbkk]pN4,BIX/_c'`aXbW\TTBU,gUfe?:n5d*>%hm
%-^^hH+AA2!C<CkQ3X&t\F4Eq^rM4U74llpsA>PL\\glc;;b@QX]/c=.03fh-kg5F\f0@n`]q=SA%o#>4TG!O*W6'">k[u\/+/7j2
%+EP,;@(oO9NeXL5.1KYPUSM)9:NTqaW!YL8&nLY2od</aDPr<JEd!3]fK,Z<I@s>R]'-P.Wo&(k^Zh)AD9_@#er=HZOk!9%[JJBk
%f/ef?o%__'cUfroE.!#VoJLI1_-=?oAu;a*478qLjGg_+c>s?k`(/bNUg<j)ZbRN&?)?RdX0ERph=G-/J_pPqfZ4SWTNcO)LZjM3
%iISHer/J=b%K;j,[!>Nl;V@n!V5;EaP=;)\DXCtgFWR&4TC@J5G-brGMbSKoH"Ztq>q%\2lOE#+Za>024A@D@XhrTY`B?9%415"Y
%rH)e*h/6lXMEJ;RYrstfp"1oF(a6A6oPK67q6mbhaH>tM+[sr&pIe-aQ-81dmaR['[.p05p@t3/ro4/`S5tu#9?(%#b3]K2)5(-g
%UbAP'FJE1mDD(AKX#GD$MR9^eEEcReZ'bQ7E*8:;SY^B]csE2Vb[))?IX\<$E'u+pCf1XJ,kOEZ;.sisS]Vu/=3o'*-13jDM@LhA
%QRY/9@!ZtRjLI7Xb`q]tl0R3iDdr.s?lj/K!e8\\i_B78'Sp(5BD.8U0qj!XgMnAsjUTu2WH@=!L<.Z6\QQM3?UEg\:!KX/rmXh/
%;j^2Ga]F;/]r@E*F3`c\]fYgX^&SUS9fU?]IU1dRQB(1*oo1DH0dh,U%k#r<M3Vm@XXm-t5;]OIL1+sXT(d`\4NQE[gZt]Z]R%/S
%m6.VSg`7KX`LGlL'@AWcP@&"LSe^[:>K,%X[jC.f\XDba?P"GDBG+qH\p7uEU5:q#Rc!?]UT`9XPHiM@=R0GPYh2oMo0.m89/#f!
%X;_.*$GH&((4&lh;e>+QlS#Itk`/0@&8fG=hP14PV7n6WVKZF/.rDVZX4'f<]%sYmQ)ef']c6!Lp%Sfr)t%P!3uJn$2Z8oQHE&NO
%@_I-4mmLV"R.&_-!*4;hY4cVMI<Oj1*:%$^@J[XkWe=gJ:#??S.',KL-Xu7jR*H7d\V7)\eb[ZZ(fmF3D.S09Ao6g;(fmY1D6=&H
%&i:H10`=FDD9<GmYJ3usCAoKCf?`RHb05ukE#OUVHWir:BG'S<drTjNmN?7Zc],,NAe/<U(nB4(Qg>-!c9XBaa&iA%GA:3nCfjf#
%kN2hEb>lOK(<-]^W`J\#]ef(/C8VYG<uq>NJ)5Fo\qiLOn'fh)8??:/Gr?J!F_tm0kcHE/>caReqs"[NA+ADVirQ6p\W(Ac!\=;X
%0UGkM_m+4iGBbW\[2mQ\kH_s#^Bjdj0W\6!s!/\;<LBB:-%==^MU)KO($^?"ld]`0f'P-VZPE/t4;@,TM0'=Ui>k0>S"@bb&]CNL
%cXi`15;2Zk[[+1[(C.244LFpN`@_<r`GQ6&AbY]>_KqbBk;ED.ML6al'98?ia]"JuM&;7qpN']A>h>f+XN9$6[F?35E<,<Rk,#[0
%Jb=2C3ifpc_m/X9pQ]cEEscDG$6<N`\uY3f@QcdaWo'PT(9%],?4Oj[BR6:$l02sC@<"/(a;=U:]h#4@oBJ\%$L7_8RGQ.tXQ1(Q
%TA<+Rl#KEP$DCR?QE0bB=MK?g<q9[$!=^1N.St?3\#"$e+.d8o.l2t(TigdPY9"mmlK[O0,K:((#2/s$5^b._MW%[\kOdpfo40cg
%X'm!FV_+u-G/;-i![qbq8R<sQKO*]G\a?k&.n6-_:^HCX!7mq<q3V!,eJ;Ou2Zd*J<qP]hN"u5ZB6c59C1j!ET8@o-o%3N:hb]h@
%V8M&)KJbpVAIm6s3pc,d?nI`u<eLYb\Q&Es+ma*lQ^._sENZQW=Xa!e8n$Uq(Y,@)l0oHsbmn1tAj3D*miZ*BM"dbJlqT;2UF-H8
%b"3qqlZ[cjoLuK,Sl[Cj$%kiuJ'tTg[=W@I7UW[&R$CDu!+8%YcVCa)FuT=J[fD>!K3+h>)L-.7#?h8GoeBHM4"?Aj"7a4P3`XjB
%)>nU'bM6o3Q.&G;5=GoB#`tf2NI;tMH\"5F\s/q\QDgSTmV1UY.l?\VJN>;DRh=IpQ`7<Ll)CVZ)618j0H]s%*Tj9FVd;.;!,GMt
%d@V&RVh8#cLUoI;=sm*ubDj-iUFmV:RuYi"!@lU\(HE;^rK+T)8qj4Aa4/A@GSbVi&_cVrlL*qL0r"PHOh1GH>`O+[;toIUCt)DU
%67hdP4NJ*7%gJSUloO.*1/H*NR"L3m[:qZdHXDdK>4%:*5P_r.dCl^3LX1npn[,Pd?[pt*N>*:\hl3c]R5a*\RGRJ`gqqnkI`flO
%bjY>!k,'mq>8uX;cjDNTEWf<Vgtm5c5U!gclHR`=)qCdthE*![Lh(J[ngQ=iH-e`4O0-c`]^t5HroD0@N(nV1.r3ER-XElmMV#h:
%no_?b;d.@01K?'g1\F'XTA<lFVKh!1>)4/a+S;=uB'4-ALb0[jK5OsFQp$NlF'*,A=+.GFDS]@3f:6r+3ifC7(18_B0(l$(Q"-H^
%2*Ng;lc3`!<_sjuZ+XJFr"I5*FC1Pm&R/AJl`4^#T?E41,Z^E?"gF.H$6t;@(K)D&$L>/E=LZbb#A[gmG1somEs$?N`Wh*TEe@@2
%lZUI0Fm\e5(Fs_'`Pi05,Fo-K"Z.8DUYHsnX"]NRK<O69\a/!@X<?I[j,_[em,HeC&hD*6)GsVe!*2AF<N*g!X(\R_d"mo?$8`fu
%Yb$pjf0?[l/'A^gplhQB.l$!`_r.UGLC]XH>)>*^[r>%!LtuGgK"m!"=i"46bC)q'kACZF4U249`6R$+Fk?U.]mNR.4+D.]3PAEb
%m.r2C9-&q[;bnEYj*4Tp"JS`kCs-Uk&H4hAAd89$;gR[;bPfCP+K(%D_m1:M#DuM#o(Ml6I%?h5r[:j>B\KJkfddniDi8`%Y.*e,
%fL,0uBa4UR6<cY#M1A,r+/fYN&"n[]T+&E]cY&m"iXGYcC:Qq'L='P`CbT!%<!6@IV.K5<&h+i%5f?Rh#GgbpbpRc6a5RZ.hk;#2
%:Q=KJs#IIp?.%+,0f3$Q6g!m3^M&g,Eh4D/(_*F01Xjb#(iKmcQbp*Df/b/<2.X)U6osc`Kje`2IGOi:rGn/2ERU^J?iRG(Z03E4
%(!fT@ku5]@K^E[^%8fS:YX6sb>os9+s,g@'?VCKgQOkCrShV4ZI9(#i(@,SBpo]t.!',\T':X=G`tDb3p&l"8l0H;fPS&s]Sg:]]
%:cE'_pFF#">T1B33Ek4&HCUBL>7k;.Cht3&L\$4/!VgjSZPK8.pE`H!4^\0q93>l#6%5HBL)ZWLrRjFYn!g=d2Gu5BH,c2q6aYmN
%<:`4fWK3h$,^kMGkj;RBQ(nek4rP4g:-Abi,bQ(Io#_."-ao!!9tTfnUh8YZd"hT?"G$g$NeNp_cjchqh"C:9UScOu"YB49"aa)5
%JO@1DoSp;LT=8M)'"/Jp$RfSd=ifAfkj?bh=EHH;>.>C#.$>8\OnC7C__#e3.g16*o`B$RftW@[9tHP$*Ak#e2s$N;hbN.g,WE/G
%jicH)0*bKXX`J6A][gli,8IDec/`g(]h%VV:_Y;.H^:QSBl^+)0S_WO%\:W&012Lol.C'5!^5;q`0eR'ntK+FiB2-/Z6u2R[.!9K
%El'BV3B3Jb_>FY0c+01Ah^>e)d9^:U2-8pYI\4sgeh%c/<Z0,afpE^3fFdna>:+iB+#HQmMOYc4>gMlk[-11.gh6)K*L`OdU%`9N
%o#tH(J,V%CEsM**ljq^TJTQ2];F'T8ebr+9M01V+T`RiJ)2<lIW6ggEHH=%M-).meDBA;Y)+b72,^rc-64';.`#t95.q1f/0ThUp
%U<X?[).<MsalCO%l`^HLTXiI.oRPoB,Mq;LT3nmNUbPTR%djXr^@-Y::eL747$Kp']3ZjerpWB8@?r0RTmY`<'oVj#,#sXoZHVRj
%@L@;Kgjh9W*N%clDPS_;X:%F:BJ.OUZ/5r:rW\TqBE0cc]FeTOk'YRP(\?P-<n-rGWq@(>1@^7/Q_u2eMFcPH.GFdtP$D=\:#Eqt
%O]TE=5"&`F8rqpo#Nb&Slkt#PgZ5a9r%"<I(n1Z9./(j,kKfo].C2c(-%$H7pP,Jq8IE"to_r[N@`mn$/hffA75AKj;ashfg3`2K
%7J5T(Kb1klb'oI[W*_+hm/`X`4cC[4[#c_pA1?_R@hsq!R^PfVp&,*o'h';l(k-"<0PD/JRD3)odC#O<;6Xl*Y:ALlZo;'Hbs7Z@
%DP#1mW'>UFm-&T@h>cRT)j!G538QHCU:@@G5NinNeA;Y"8%?S,^>Cf^EntQ'Y:mi%:m$tF]qKY>.!DF'iq4be$^7pX;eVsmgom/u
%r;lZUof%_<'C^CCVSF#1\fo+eJG`hnKRdNc\T:0fVWU&h1Z214g?(m>b2_To=(f&2k"c=kYlV(WglC@mS3kh`neN,qAsG8*((%n\
%0\W_36DBUHGj'AfHDnu\R9Q%SV"e9F)&R&W='#qSKkuBfWp6c.BK68W#gLGAd`M1l66)[6$fKDf^G)+kTY@WALd[*a]W)0Z-sjYO
%!CMRN+&@c`-o45D%G<UrgaS2</<C:.kfp3u^i[r7H'd\6Uc/-;^q)hd8n`mEaLYMqF8d-PDB[qsZu2I%=3TYe)D/4:Mt/f?[,59I
%HI(sHYQAKF5E8SZBa"\O<4mr*E_q$=N]@tO::(mq^Pe!Tb!r9.fdD2^h,^>&p`T',KJd[@6],X8*QY<$]6G%33_*d6)3b^b%T_+W
%F.C>h]p2fP#J8!S:jmH(G'+DKio6/`UQ"V0N0o+)`V!>H1tjT)W7\iPL1T0./oJmeNFpIc?n.1^#gkIccmo4ui$cF$PueJ11[VW.
%.FA6W3e94@?M@Y)4PF^(EmK:]hHgOK7rflh&kmXY(]@]13l`L;+j.Z.=o<;!^&4Z(6M)?:$9Larjn;^>7Xkp!B3scPPg9TLa0!0C
%ET5^"jSY%U8U-o[<qa044!'3,V1/oA[.NiKFE7Dk1;>s0**;8c1D/8G:$NgOP$9`^\L`+RhEB[,.>!i\@+H5>9m:.YftrAHi\qU_
%nPILT+79EoXRcZA7M$P!h*"/>_QP5X5)"^t]ni<+7[WG@YaW&iW7C)FH[[9QLoD-p..N,PWL3V6FZSH["qG.]W'a($Wp=)->b%R/
%rji*Vp(UZGp.7'[+tI3Vhfc@CN>BRbf`#LXp(&)/QZP51[-Q&E8`Gcg=\%ps%\E;5[_j/klta:C-[i[CiR/FR'nOIF-n$H-(@*L*
%;;(M-W)d-oJ7%-e3-s:r>pp6Y@\U1+Aa@'8h)I%GfD109b=DKTDg7gkpq(o!PPu#po*p29cg,Lul#j_:U$qQ#EaE&L`Rjo*XJ,+R
%H$7him<-/%n+(nt^:O(iYOb1l`UEAGML9P$iTkm/hrXarI<G']?KW:,6Ck.Y^\BkIn9=]0K`0M0k8XCQ?[+<e'sI3<J!\KaEXY)2
%4lcc/?i;)k1\RHRO+%u2,r/,L9+sm:JZM^]`=MTCmje/A;Vm>VP3rD,(B"PY[&@FJLl^^3SR7GL5$X0fIKh:)Vuk7on/NCP!cCmo
%jJB4c8,bWFndZDUDd]qL3Z=JTmi-Y?'aQQ4Qc$<?lKmC:+mWS3MlUi2qII9q3NCI!s4R:pmaQM.h!a]8rXkr&%CjbPmk$[JO?s6;
%aj*Z]s&UGUj!#<-4m/F2$S01uelWhbH(Glm;:1L"*&193lZV-ia-Wb#)[@;5^8513K.kUj[iOAbAp&+u\(;5sk:jHi9iq*&;ns^+
%mOTJ-DJ51Tl5'"5+9pO?FaOV0;:`*9CQF!$>CcnZp_%A(Kt3sfF#Q1H(msRuG;E&EQGU8MZ>bgX;etTnnE[H@m6"mL-]K25RKBK\
%ZIoOGjD<G@$MDH.lPKVT/Hq#fM@fhu'5I^qR+4]+H6A];R>p/Kl#kUa3U5hLBT.[Epu>mp:id!,^J;jsH9Rd_9r>u^DF!&_5M!Lo
%$-+(4d/eO-Iq6D6[=3lFaEr5.iO8W-aB3Hi%8fnc/)iBsZitj5brYm-,4Fdbk!8]].5^AGL[,0Y!Yq0f;eZ#P0e%@H6hEV:m1">$
%GjfHspRS;%o!VmgoVGZf,B_?#*mtMaF:U`pR!>7pNr/aZn(o.n9X"HF*1)@q=.:^tT3BmPd#@!JWo'=6*>dgC.l&h7<h*9=<,]m?
%=>;sW'LTp(D!/<H=2eT%eWE7u!teS7`/MKA^^fXi4A1#*VNc'62)%MM%2=D-qod(1^&!3UET)dY05,Hp\dEE'&G=81`?mdN2(d"n
%m\%&<?3VJF^58D86tP/b*^un1-OFDC,[+&*`e"Wb^_1oGe+BS+&iS&mqbV<KDO.3b1YM22P@Ml"Z!9_9X<I+[L7W0Xl(^2&+#SA>
%Xu(Ukkk<ClDr-4\d2TPK3,tu5h/XUN0h:(2",l$K%>+X.Tugl?'G1]7T5=fsSF>YN]QK_noSF4a5+F@(DHK(036@"-kV%6LK(m%q
%FA!1N'Ta1oaD=.@5m5Z;L@iO-5`IXD$>Bq5O[nWJ6.qJ4*<WioIY_*qj<HQ;)cmWE&M6TkS*DnZ\6';![Y$NVH/k%Hk?.Edcc2C4
%kEh?gL&m/R'p?O-2Dt[R7RLR,L7J=jcT6)]Z],^#df9V@$8Z/8aeHO1X9d"5cfj7Wj?.nmoi5Uq=cS"N[R\ZfdtAeo@=&#/o.]<M
%Q(7"Y$u=25Erh$g_p$S<#?>eNd*0.&LRn!*m[/9Y;SLubD?2K`,b8Nmk69,S1Psn52Z7HZH&T"eJbCc*NgYZ>!F,,G-YAr)JSYWc
%kafHb5%WZb90;^qW1fRAD@UDLVZe'5Qfr><.3UX3pithd\itu$EgtDX/tHok?@KdtZ5DIi?ffr+]HdmB*!><b7TB%\R=?W"E4"s>
%*)l>De=<nO+$5h>\8a`V/mJ$)F9$E]NX'kJrqGG?`4WknUFiK?%u$$k;XGU?::#U?8"=s!)PRU)-2a7t^g@MGe1n\"bPc,>io1pQ
%hiF\$*r!g^k'SBlk.8t*2cho8.lD=:$>%oL-.!&<PI:_[c^(03)n-bW:e0CDkd7Z]8[;u[P%;mj+N[r=#"+R82j2"=AC6A<+N_K+
%![5\&N<19F!gAYId'Yln:*5%=NFGfneenp.glL&oL<W8D\c)qJ5?a6@,b=(`0BAF`7uUZ1OCE1)4BZ?KO`/K9GqNQsHD.ko1>2Jp
%!L!"iCk3^#H.WmO1`Ce+ng'EO%[i8N<#^bCY55j-+[%Vj0"b'ZjCu>G38&#Q3&8"uVfhu0)hb!m4N$!(-k&X-b@Y?;U$OKi6+D"q
%f+Vqa.TPS=;!_nc1JhBn7eiq<@i7n-]0Xa%OK*D-W!7Y`QQ\($:tIZ*BIaUaerQM3r&Bol,d0T*d1.7-gIGm"p2k`l^",tGnWQG&
%+aquRi6kXS3P*LVl02ti3hInjYM+btj&:9X?.>a*hEdSdJ73R'\F7Mi]=(G8SotoUDB6Dod-bA0[Ud.4mTeYR<DU5Bk4UArc#)aU
%=[o^Sgn*la$Y?G1mIe2*b,@d!Ql5d\d4i8:CoD$&ocq_[#27nYT?3\DW7e(nr@Ira=HWP;Z^Dj$mZFgqQ0VcLD977]YNaN4eYkDb
%U\;3\jeuPDO2F]3L?o_fgrrJDLlES/DQ\VriOqicod"thr0,>4r4OmkC4>"<jup\+%(*.nYCn;VrVF3Vh:<RC0^BGe<SkRU]51G0
%?mTluA`n4sj*M6Tm6UNlOCBEgZXe`k\Vg84jJ!1.+I,.NTa>sIp[kK?f:k0O-8UJ;6.iG2%39"S22nXL?(Tg:R9>KSd-P8[cL(;'
%_fc9INF5.c<\3&J46X,ZSpf8:HY5Lq))A!QP?hZ%qAEI\S5Ab&P_+,GZ"!Q'X5O;@VL%m\1sT>E15/]S>-D6-$j#?1LjaA")rJRt
%j^J\":D$cL`'1NL&ViMG@\;>;8/_+DM1&u7;SbqU&c6AEr]q1obQL;-l@BTF.#ODq60t@0UjWmQFO)5;qOGFY*f,5V+W9F7eS"JF
%ln`/E=eLNI&Gs[&7O)Xr!+MQ<X&$/-4MG>^@\9'[PrsX@M1'!^,bI!r')TmTI2W2;-t8g:fh)=aJJ.i2TN4>lqois>.9UI_lnc6g
%A'aoA6L;#j>*-\:5_WfEm%Y5_Ddo>A(<.>>mu,h2`p+eaYs=.oAun26+WU]jc]$DP!F,gtlnc8)S1M+YLDOEl)66OTLCT!iB4gA[
%jZPa>q[DK")-B%&h7Z3)I72)f=JL=;mYH;BO:c^gfhM,,,F6''4sI4pN1`B'S3EL)BI\<kU<B!R78!opM#8YJ7rVc3*))Bc](h\m
%BbH*+&=#Ua:Ie:(EdC?ictW3;ZZ"L>r3PeQYoF\W=[&%s</6cdG3sV34B%!O<2UFqA"-f"ZE\\VS-T"lpQpD&Z;l9HlWpB]d:HM#
%2UR3KeE27pTN:^0s"k,;VZ38=e>&S?Z1%]_4#tLHIqm2^MUNA0M/_e[J$,YZf)3inFZT%5h)G@<%76NVs0G5):c/2n>0p5N8*B#a
%N%#-q.fG$\M+u\=_-#=Q)?n.Npjheb!PtDTjFUbQNMu=e(9:D+'*5#W4i5UV9$rPU78W;t:HD7C(Sn>+oE74I2)9j!T-4A$NXhih
%!m8u0A(eW%m5GedFf0d)ki1[0bH4'057i9Hjte]i(%qn7K3I7)"TDI@P.?WZW0//1Bb[+fj75["6soU>N$SW8h8ie2gm,LEI7OAY
%UUZF2c!E-TSUb3h2c"6sjcDC+I:)E;.r=+0H\ZF%I4UE+&M_\hW(\HTp=[W;Hj0K,I$e&/oCstm1`9e1>[,_Ol"YAYroOXBeiW5a
%/.*UC`?R*L&fcUI&nl@,M(8pe[2(`MpX@o%+Zh%3@=6sgJjSF`qBe-.TSro^Ol$Z+Uf3mcT.rGI(G#p!;-[$Jm$#E0-<o;ek\mUQ
%'^!5Y:$Y#nr%`OR>(S<hpENDi^D3;O\K?7mrDO;6(9RUA'/<5YrgAm%S/^k+VDPEd\;&RaIce%9VTnFdB`%ch7b*.UqknR!9O%OB
%"E.C=YQB%er.Ze5`?j9*hk8ullAZn*]Tt&&c$+Y_&GZ3)0LST)[P(@7/pno$_65<X4Tf*hT%Sap[,.8CNN?pM3=r0s=EW`=m97Qo
%4V4RmZ6KCjZs9V%AR^.`;%fk2^[1cfG$HM<Asss,MU>C[GN)Lh.SIrkBb'"ulFT?+H_S;$;A#lPPukQa8^W];9&\c.qjuDH</=*R
%,*`d:K@Z2">Uhdm&Nu=A>\4C/\ED[#=)teFDgI>h/=o>Q]5:=3I]\onO`X698@MK'TmW_\g@@>0Ashd_qP^`3&<_cl]DSP+W^URR
%Zr5Bs9hR>f'4V#j5[X-)@\_4"cToL'NpY'&7F+B4/@6R#PN,!cajobG?df%PpFuUGq@\7c,duX83!5c2$%15iM;-Mk.#*8$^f849
%3%f(tD_Q!P5j9X:8+,]4hu;&A<./Pn%A?bN761"Bl,&`S`38&eb*ij.-ju*eD>;I32I-PDZZDToI,,UqE`B4=Y]m0UBnk2\r:'R6
%C=G>Weo]/Hc)>rK*#dsdoBG+&c;TF%rS2]tk%\;d`N8lc8AZ*-Ih3GGJORkALmZrP3dMJ%<d[/JmN]qfU\gUeS1`E'(T3Ro7dd&I
%-S%Agb0UOB8-p8+/4][8SlA(CUPA&8aV3KW]e@NJ!VmPrA].d8GAh)[)R#Y1^AW2e0":X:mnEIu3<G+3ZVT$7P7C?\kZg"Sk,995
%M8$)3VVU,_,6132S<Uq;d_F3LZ6nh3M`*c%.Ih+qa)r@!Z*$M\asrcfdk&i`\7PJ0>.d,T-#h%ro@5]6&7SZY"]/gAg3+KE<eA-8
%]<R5T?*ml<[k(l.2E>"C[qt8JED,anN=4,('(&mcXMi<B>/t.GDK[]f2`".=KIGQ:m2RigN4sADc!rbCi9d+-PDXn2U4\"W5Ec[H
%X%Rb1:UJh`6a+'pML3W1p9A=7B[1D.j/:2*l4M7m++*%6RM")\4>hH?/'<Ut:$r.J-CQ6[Yr['QoV=1.YBUsB)PkQ+1Np1<0dY4c
%&/=nq.k"DYZD$H`3I*KQQ$RX,$56!(5S$<B=-H!EiR;MO;_"9+DGZqs;VWrg'4Xo)R"D/aZa!//W(XH"X<K>h?=pVFl!o+^MU]\q
%Wiq*e@p^6d9[XTc>k4\;Fs`bQ6CXB+B?3Qio+E'90t:_>/_uY#YU8%?fO<;Z9Qf/I4]sNClIs<2*A:9nr[GCSV?YOUc`HYt[s.VT
%Jf!p#2i@$CoQP@m,\2?S`e5]KGB<=d>W`i,Ru%&]p)-]96??rlj@X)Dbd\B'Z_c?Ri?N*_)_[FDPHAE=7l8#,genc!R;Q2LciYTA
%6;=ZQ&cKYA>r3J,Zo[G"M6qXu`j,j]'d]"9/XZ]KW%!S1Hpi7V\X/,Q7Y@QC!Bh`kQB+T*8R&%\m.lJ7'0UNcRdq"XZU1\r*H8>O
%2dncibmG=dXO5_Fo@L'?YADe@XO&sN)+_)#ZCpS'!s[2Tcj\+&L1Z-u7I.1.Rh_CE!^<(glC[>?`t3^HRF^GUS/BH'L5.5h/>0"D
%jp_jW'?WEp4>[Z(0Z^7p;StkocsGF\L\:j9-A\[&QiIsg<@`r]LK%9Ur&6a>g3,P'OSAeo*ng]@FeCo_%1hj.q%[k3f7o(7$*SM6
%>`D"r"p,2B&+-W"1B5@<_aE2#`<(j<NWNsE6IkSPIS*MdbC@Dsqeh10d`ZjP6[M3?A&=?":4ZU-5KV^koaBJD_aF<=LIQZ[kD"cc
%JI'9(Ga=8BL\BjF3S"7FG\H"%OFF#d1d#m5VpK4s6iC;LCfIIn^$CE.p33cLXLN1nB]&3=:3BGk4LFR#-m&S@feFlJlkgJ\iNqL:
%F[d&,DtS!Q2a"I&GVck$9`PV5/_#U+m?$j6O)p\r%#1UP>hhD!4LEG")%H`:%1dR_?g2`IT)/0-nBh.eVL^?Q%1b&Y,5LI%W$E$[
%$f?e5ZJ+fp"m'2.g?ZB0TmaC;AJi/k%ond`RE<KoTZ9&H[`rW:`eq.a[c*p.\&/2>obKt&Bc9p@Wo5*9*SZ(]6hr@sr$TL4T0b1P
%\'\/6BmAjA7A3/Z6h<R0LPCSb6k=.D6cP">l*fQE5Fk:"nBg%eO]IqNL523&1\&-fR6p?O&)D;H4Z,>Y]8IU*Z<RHq2kkE0)5fZP
%ri,a5(Iljcdj4t[MKi^]m?"$C'(=KB0O``'cmj;/]&B>#n]E%lV\Q/bL55IZ[Zu'sK6UtVm8+N92=\i%iLu03Vd='))BRUV4*9M0
%=t$YTmE+Z0U?Ktnd,&5rFdhcRL\;LY+]IU<iLu)b2;Ja:'.[B-*njDR=eYas-%-aO*nmBM=/+td)]kFT9joI&B;8]g4L@?2R=D;`
%\dCffVW"6I=i"ccV1'=(Y+?C&RWPB<R/7tpXGM$m3)jMO*[[_jYp't[)fMWj*:Wq3&u@4InR2]KOU0H&92tu'&6\"r<XtLhT^]1'
%2ZC-1Oihm3^34q^qYI354kJ.Ij^EcpS/pY]VRk0p<roA&T/\j@q$LtG-GlG^HGiWjhL>m/.PHe":A(r\..8/#&gu#/mp)d^P3+eY
%aV*2G*O`NHqt$3@*>XjoGd)D:NSbcu\c"be:YbKC=G5@t%%^8*anO6dGKTm^iD/R$?g]Ij)Wf8t8W:8bDX;H9q=K6M4q`@TKfG'2
%Mr!UUf@O(OrUkU7^@V$@s#p>W]e2^f,Pa#1#tI3F22rlRn+uq[^#B,rSYoQPO.gfCH[;nrf_O"O4uhs>_b[Jj)]Qcg??GebmIhZ$
%%.>iVVX8D/js>b2foOA6!l#L;^h\$f::@^8q`FGZK6Mr#0g_urjn8Ki33M:<Z8p*A)IuG\(/%@0H'L-U*5A-$U-+KbII/<ol<M^j
%/(;b]VMVSqWH6nXW6'0(DMMJ8J+)cOF.QS;R5Q<"=T.S3.YYPD0&=2N!CQF>l^[+@EW8BY]mn?H]J['@oN%<]S)GRfVFG8WP>b7%
%XX&A4TicRn'2#,HVa(?%LUPn?fUa6E<j0E5LS;ZF`ZEKXpY^P/:pM8$L"P3q58=.Q7!$';/8,&W@3GYDFGl3hpmp"-9q$i_?.X;?
%TeH=q\fG4gJ:9QY^^%^9@hnr_qMF$X0)`AD_I"+gMJk^!(JUarYFm&6dSDOjEV,6>N&3A>LjUQ-f7`d3.@PosPL?Yp9Nq#<[Ql/:
%FDbGMMd/;)i#6P&j6t"Om-KVq0*ftoFmNSUZeXGlr2?B8U<RTUG,,#PJ7i*@9B@7sp)atI%f_0k;59BLIufj"j\)-++3CY$PPgJ)
%1(h5ZhRHG^QI&mlS#:.hIp`@No=p>!#CfKA-=(eU_lXjQIVp^PYGCP9^RT3m2a9ut99pY^M!?[n/>Okn?_Up9*9%q=^?RW.Jf>_N
%q#0cmrI+UEFPkjE$XS.#ZYgu#Hi,@fs.6Ii^HsJQ\s#WI8WdGkfN*P:rZ#j#fOAZWL8jW\Vd!?LLD2(<hq1(IR(`ck$/IOWG$i-]
%M2$1t?VYZL5/$bt:/#iFEn*`nYE?T2MdlW:`6OE2dZU&)5g2]#<=<fI>[H>g-,b9$?=c-eBblcVmT3<U[hOs+qg?3>V(/ijpTr:D
%IjTd>e*k7\c4gVVfZc;Q7Hb#<=h$tfguJ7D%_"PriO2t-ocN6!i3-Mf*_A:t`2:]B3u9`7Ze2g8;>u]/-."ZCp0fjPAN&`*P7gP<
%<O#LR+)7/&VU1hZ3]:VT/KZEqhZXjoF4U7O70d,2SLA)+AUNRhe))6)oT.g:qtK5\+8qs4lP?simTN]0:!@ApX/@+e\XO1V$OkpK
%,D"?>N2WJ?NF@bsJ^&jq(",'c@5\9B*pC\3hsfO11>tmuCE@3!/0Dk,)"^]$5elIAGV!s[j,Bd69$pF;X43=GXtp9Nk8Y?nVdEt]
%g`PV#`"kXBkebiCH^ND<V7!:M^d!'%ncWoq;+uC<=EPC/5kBuB\q1qM?r)i>q?$ncD@aqZ*1*gO;l[ii6M>ntIl@:LNN*984>BQl
%4p!;Y[$):40&<QUi8s>MX)"4q%X\-prN2Ol@Dn6BF_&SF\$Y;M@f)5[8G\1/$qHH]E%/_MiO]'?'TnMY(;o[t)#84F]%D9(==08%
%\B*77CD5[lA'!oJl@)0(FKQrUjH&f>aiCCmgCB2p@l>7$l.\4Z(2JiCh>6QWP@VW!gM\@6D(uREI3LgeATk_\7e!UNLW&pLR#f1)
%Cd3d5aC>[]OXY"?B]9)liQr`,S@+7<)fI=52CTC:gEX)?YMYdqA0"4:rS\^*+GY]a-]ZhbJ$FB^T6/'Ao3!6MH^1TTs#%-8IbhRk
%o49bgO`78S6]\q<jb>]i!]'^]RV;MEO45RJAX7m;c!XmNmsF#lnqPfL'77T*mrfepTbcgXj)L%tm;1lYU\`[\*mPG35cKX4,:Rk_
%kLilBM5o,sCU4T4mU&Ue7<1n1R6o^k(Unn/gH>?6N-Gm%]J$(QX+LV+>8sB":G`7p=q#UE6gWMd]^u#mRg.2f`k0SBTj[oG%5452
%KjSi,>JC!i_ep`\hYD=<rB.^UJgk1J6IEO=GdF#kHJ%)Z?Z&a]g,M,%SOBZ30-bK*VdS^$P/BJh8ffc)m["kI#JWcnb:URY?Lp%U
%,@K^Z]RhcTd.lG8\Ii"P/Zap>l=-Y3)U1<A&Rq`$.*]=^k_P5lFDd4CdE0&-LT\DU$aIThdIkj*_P1:'hJIAkLJ<Nn!f>NK%Gk<O
%@\7r$A/M-MIsKtM80sUlqa,@MbbE'\7pEXuO`;@%<YV9hGA,Pt\X_d.)#[jM`HU478<`U79g!Ff[n<.Y9jRtcT`q\5O7`80j*(\<
%9qm:4g'+VI<WRXIU8#lCbWW>i7/N\JYpRBrE2,O_b%:=N)l`H-VU-AP6tqdiop45i]j"=7Zr"DhVO;@AUK67M,2WsL?RL1k$f[jY
%<U<2g,@/^l$Jg"j9IPX]]X84:iH2->%==q;FGb"mFC<,u.#r6RFcI\C2B!UHSaVgZm*QM.^$f]FUJms+RV,9G*WEL]28hk7Z>k)U
%b^MRWa_`*:8kYi5&ul8/d,'WXcpU7u4i_1'.;lYcpQ7TtN5O"b[.'tFb7n95B%-<D1GkI=-DT&4S9AQLi3+6Ye^4:sg)d;2PR(H,
%O*,!DNXi.8F'?Ii<4]'M-I3)O)csHMI.0\=N*FBOT;U/M-Q+TRlWmpBbSQTB>GdSYg#DdZ)b'Mego)7H6UE1KOe-Di`:33TN<KM9
%)!uo>KQ\ip7<6O^6.qoff?g.>OHnV8Z(AItTs_t+Ycrp2#KU_lg6F%WWM@F:/@[pb%#:3dgfg:Z@ed#bi;<?0^-$KX9rYJ^CcH*`
%-3f]-".a)f2[skN*0R"XbqeMP[s?BT2c+Mt21[>%gB$Z$YHPMbhdF4A%=]]Fn-u,U#$W+u2_`F%C:EtlfQcfm`:2XBSgWE'07b\@
%<#Kf3p$WJR9I=[8l7MuhGsP4i)g#eL<g1L5oT=r"pFrtV>=)/d[b:nq-0"Wh3"jq`jW)Z#ce22&,$T-B9no3*03`fkM"Nuoe";]q
%(%'G8,\KkUdOt68*kAHN:#nrp+=gS/]BSM?`B`YR]\V!e\)$dX%Z.An#K%k3pQH[iVhPHug@7SA&3Aq8/hqFp_ACR_gpPPDq,=%m
%DOi2\dh2fi/gc[TE!%K1hAG9MCu>%RCn,WOI)"OkkAN8E=nE9hE(Fm0%dCkA;'^p1!U9;,ncqt!CCgd9o!c``V>WIl(2)fD=0pof
%>b(!1BGXD$/e1-X.G*s'.PKu^-1oGR*Su'@\/oGqnN1jBDJ=(Bd9/GZOsdG9d*V:UhZd'CW/Fg%:b0_GEt@:A[-_$U/IB8PC"@Me
%1_XM[BRNV/_F!VMO^9RLd7U#h,bgghd+Gl,rC64sKfD>m2^.ea;hhg6Q.$KbF(eYJOHfUPE=)G=06Nsohs-WsDoUFG96*h@%NR3s
%BkHru&1bhaTjr:,#^"J:h"/md>$jUn<5FFG6)3<[X!bj-h!i+6?<q8!$r"<er5[VRaSZWq2<AjS66:Cj)VY<M'9@7^cn-5;(6Q9o
%fl=F@@6l,$=qe(-,/ZhAi&PM*::+&7`(R>jeJauJ2KhKumbbG1//5pNWAs23QR1OY**"+2FTD;s7qX`/luI[2,A<t$R@U<BA3PX@
%mnVUs[SoNd<5!uZ\NXiic>NK(2Q:+:0]&0pSQQJg1,n4U%C%gJ(+d;(\nr/MTQ>i@i>f]0TR`":1t,9.Jj)5r/iTt5_F#:!C'Hb-
%h#29AU"%U&YLG["HmNmo\Xq/38qQ#-7e4f)as="T9t6.:9gj%FU>>\%ig1a2?0ZJ3KSus-qCOKkVgTPLF+4HZAHoRO1-B!cgBs;6
%)u2%t5<p\F*"k%uaO@/qXXUs3jno^7;TN"$C(lBr5:UtFP86)^G,mB5M!!Le3%?IdfUd<k2pR:djBl/[RT[?pQ1iIa)ns0THQ=1N
%Za@cJoedY\,<%UkAlNi%^N$aZ*`^KT3@n\$ic^#NW7_9o?Om%Q2:4TQDD1+M,i%e_eWRI(O1KAg\6i(P0T]EGLtDd[@A"<XGL5(%
%E6b\>%'rM5)hG/>6k9m.*DnROVoL@LBe0*u4h43#lb#LGj#9@ZC1C&EcJ(=!M`MmNM!6=;RsV2FmB.M<HMFGaB_E='W#eshlnfKH
%S=l`u%m<B,e6(nr.-WTNm2V+)Y\Ze1f:i/G1pXO#@%Y@@g;J54Z-Edu`YZONo+Dr;RB7]nJ,6ULLip_\qoBc$2oWf09,[-E8./Rf
%+!#*o\G%s9j3n/bJ^%e#CrG@)`Pb3#m$5+eal](5Y?pgccMXFrI5474&+1X,fLWfDD5#Pul8Z!>/&(atLGm<.m3tW$U&1+.Nd+mH
%b=t-<C^fQ]+up\Nm9:eqL\$-Mh:6e:+1.8"3ZR%W,3;e$4es;nV[aV34>\N3+f(PFadFruoZhG,rEML#?uH@,mEk*G0q^H'P]q"i
%iJ^4sH<m=J">iD;$@]s`"!kcPc%W9h_$FLGn,+.:,[JT;DKt+E@Z8WWNh6"b8a5SV(P<m\(J\lY\pNTE>9Clh<-(:.GA^D76Qb,S
%-e_!0d%kq@?j=\qko\<-,QNT38ai6eA5s.m1"K.L/+[XE)IZNqI.F5VpZD&sS]u\!'jo]<lPRTm-;(AI,<9Zdf129W:pX54#3QFK
%BHbk12i:,'ICDk'W/>Z[e6kpLn1X?A1OV/NZTao+RtD$O`-Pn!+I8*\M]D'>-V%Yln8,I0+_0&U1n&a]%dB/-IY(aGp*9,9g4gH_
%G8IGtB3FEfCI.9J/80m+6\N,<-?(0'QW>R,\(gEm[:Rf\V4VCE"%Zs8OlT\g5V$32E)PVBNO-X4.K9bE=Y7;h;_;CEb&QU)]A*>>
%rq`YMl9P(\crqJ&VA[*SBUp\1lE\3Tg\f:om`IIjC`@<^]0,jV_kb4ji>5Dp6K)uoW0&q9>Gs<(PPGpM'4&'s5kJ]$#ML,-hn-lI
%LkCUECo9l!3%"B]-oGK9,=]j4rtc6R&L$l!bQA:tMY?6Y#E48%oXC=9\Fd8^NJ)9D^!%tqffKW1<0Rj3io>mq0$nc@g(MBjBCQr%
%[j8P\V\eh)n3:C0g;P-C_riYr7]#NZ4)[V]#:o!a71,VZgl9Ds4R0pYG:U5e&:P/=d!N>kp`s4k),S[6PpH5@?#CZgU/NSk6]]-_
%FA"LaXqBB+80r5.1>`mVRCa'#_ETs/a3de7QGU6bKY")o_KIrHOG/5L$E>*(M-a1Bi!,j;*89;jMB"7R*2HG]0D6,(9_C_[<?\#D
%/EJ#*&#2un%QCeDSK(8Z$GGP!_dXdmAQ9!i)hT,Fr:!qE"jP[jO[K-u[IH#G=:A[+jG/rMEdn$'$N^#]kdBn`3Sa&k=tPI7WNi5*
%M_cn4b8Y,i*)^J^X$u9c,,O/=-4`DL!7aKE/&K7nZl+%DY3KL@!%1P]hMD"heEps+Of7u5GZi`tS1.FpM"VlH_SGnBV.hh"AO4p?
%YCGY\`4$3M:k`?L&9`p<YA[QW>eb^"<-ma+eR'4>]EclHn"cqqI=7/>oRbTY]WX/o%edQ`clnPBGRq+.9_Q3TQ)5:Nf9N3JL8TB3
%pV+Tr_5^F\O-S7qfsb:`)9&dH&XoVE`2Fr4DLe((`B?=uA'GIIN=WAcoL<<T)mS2ql9jM$B(\1^BOc&bbpu5h+Rq:T'2^\+`C02_
%&1sQgLQrLIIL*MP3YZ:8*_Q/<^?>?>`'&!;m3*KOQ`$Z6llX+8>V`6Q)e$[mkE8?c)5gW/G3;cYIVmf=:/'l_J%8?J$na.-=O=Pn
%g\9KW^.kh72G3;;[%A(jZ=qSAdujAo$,tA\'/u(:=K`>BLglPjLq+"3V_i"d8X.0X`L"RF,ZW#9#`H!`$KgPb!k?GC337;"&^qYS
%7hqVd6iC8De?!(5^YD2ibY_>,\r>2)4#$[TfJ:_<cb\1\n*5;rdem%r/:_h#ahISb$*i*+-g9Ua4;<6ibCmb2E*r2DJ?FfEG9h.t
%HnaddninFBihHU_Tq=aFe(I<eb+@^686>9*X"bR$NeZO-WZlt9a@amQEgt4/:b-8$2"R*=-!*`i-jL@KU4E33gqcZ!U[f]^!dFnI
%#lZl%Le`6@+r5dW4;[m88/7jHKq7ARl(3?k6TdR!mZd\mnE,6q^3PkQ@_(qShDaY.`Zjqqp6F>a9a(XLLiXTN2nn8?\clb_)`!Kl
%nM/MM*24U)<p,^Ajc5\9]HX4,Oco]Z>t1ij.b>4.8uA5]/]aPP70jj@0Nob#gm`IX@K@e\/IKh/lO$F.@4"A#qY$]+Z`Oa'm=u&P
%#1ou6NBOWl_sujpdN2D?&44S8*-6oY+>gm$(3E-MO.V*@R7?RS:M@M",Firm_e$!kZdC4WRDR`boOrscd5\i9r>O'S%[aZ(jLB:h
%'.#LnaK(U"kf6;L%c'?C&]CL)_`SXY$t^q@3d<*'h;4'H@]hM*oQ+KDIGR+MDK"C<K6Agi%+%4.Me5KCf=T!uB2O/GF9^Kf^%S/B
%2E%K='"2#l&9?$[1^#BhUU'1=r@;TkrVJRJ@n/#hpo',ASb_(FWC,$JIcf!F*qt5N)c'G"%iH?0Y)[LqQR!7K84n6tk#8And6n(K
%di'Zd(/eY*#'HdIT>!ZoOZ)@l@\G5.*ND>(i(4;rTX_E)gV\jJX`@N1QBnDtO%O6KaO@OGh-Zl%QQH/r-J`\I2l;]IhiC?r[%6)h
%(H15(V'1B^@gLj\;:=c;Q4Q3Zm%GQ?mRB8L,41<5E$Petfb4J3<K"1<Oj3!sV/1ZH=ceXM>dr8qiE`[-7JB5&LbZ(#@<R:qme_O$
%T:Q!tSs,1tOsc\b9)><nH8'\ImpU6h:#Mm+e`UI:#\B$Wl87,Y0BCb\`ae[%9ct[@O6U/V.iAlXFG$!^!H>S1h-f@pR=k&n2ESRd
%f4$I97An9-Ms9pESBnKHM2s>ge4%!uPYtAaXqVZ=Q^1Ua#/^0+Ce3NFK8gc$3XMml<+>r3$3H+qLK"DjT!:p+kgP7H3Mcga_Ed>r
%J&<t<f[`ZtrhD'<nOn`2?E[R'-fq^,Npu>M@8^3\3rA3QbRchDH8I!(=]fkt)f@ilWY#tHGo8%<K)eRTYR.B>JeX:gCAdHagsnM5
%Xq_SK`HsqL]N5ZuK6RS@[:0VKa#tisFj?+=`(7j[E*4&p$d;NuVuXa,[p/Ybq1/K2P*,qF1loA]8A`tIpgBq*iC<B^8O&VCj*LGQ
%OAc1S#U`eY?CC$']7n!7d-)Lphr%Bsf7D9M^89M*hI`N5VLmZ?p\.thpsB';Na(Jbk7&-SR&pEIoJRRBpk7:M_gnE^P_Wpk,<c.e
%rp(YiD3P9;FbT;9F#f3I%b6(E0^jW;h;B>$h[SQ@/^fiQ_OKkMhXJj"'--8NcnF7bS=q\V7.jteng#XeFe+JhBAtQnHNaq9@fW$(
%6:<8s`r8DUaSm!!Xb].b`Fi`K#$spEn0Est9O#C#@<>9H'jtjM"P6&i57'LZF:SJi'Z!g$Bu_TX71GS;Ui2LVWgNC;im*m("@Hd2
%H55anUSRK-.=;Fhg)a@&73Nf!q%@#ZXk@"!3m3V-O<Ib@XRl9tX_"HpK,/;#^LeR42AZ=V5+laN;&!.s.T]r/dV1c2(=%H?in^Ik
%IDm62ADuI(RD:tiKtl0`n(C3b%,T^LU-^gb"JMO^7YS3mg)?_Q3$cF-V*8`q.#1(j!ChbW2_(2n;"Zad2N%q$O:W;L/h.!2?\,&^
%[lQ;$%,gc9>"=K0dm\uOmCDAX&.WLfrlmL!64'UkXm;pI$m3I>".BaHh@P855gX/6I\,pcV:%?`mj9e9RmW?FSVbFP3UC_&K;1'-
%!6!UUhIm(hH5Zk3XOt@&?&6sPL$OY-LQmA#mb\&,PlQ.f;'?nld`9hf&J`/TL4iNUdNMZT*^Od=>hANtPl,lI%t>NcL!+0Y=\-h0
%&PViSK2CPiJj00E`oq@"3W/7O^=tp)Z.BPu8;+jFI?o7sZl0lc$WrbRe>c*BL<LW-Ll.*L$935KP?$DS];,UmX$eRK>MDtF;lW+7
%/&g!nD9*+>8W)8HOWK\J*KU3S@Ysla(*XNMZr,lI<OG<=Q786dC83/YdFAP?TF%)^aIS"\!`bqBf.96V#s1LYa9('d&Q@sIS9i)V
%<3;RE<nMhaBE>1I@`-&kZ-_ep%U0b:d3*OiG$LmDoi8+FgU4ui8\5bO3u?0Q:9k_BU<uJO%jd0:g_:Oo:*4>@c]#(>pPpAB"L`ib
%3.%Tu`W!0P6IqEaC*p58>G#C^i<S9!RfA2RJ4Xi4^sJ<(1piin9gTB&FrQ9Z2-1Lsk;Et9C9DR[b'bP\eIn*I>2W7J1\/L'U5gQ,
%8cMXXa6a)/Vr(l9`E[CraSW$'s$7PraRqTV[jjTKrrKC:5Os)0Ju)II@T#4c>8UYJB&cL-kHu1&2SckBVG.a5,!4]aV;[(5CUJ[+
%*JHVUB`JYfHhq0(`Hr,T5Q/V%:kg.nMiScQpcbQ26Ro1g%)GAcnU[br#B:B3NC`1SY+VF,'c+1Gr7_JBX=2+DIQ'Nb;/DUk`upbq
%.s&cY/Ol9sWRStS&A,")nKYnCPKh<#l"\^pbbY&`m3n_6pMb4LLi&uO:^/raFj;`R^k7]KPl.f%5@rpnhc3.*nIaD2":]_@BbKq$
%Dq0+^=ElgIl+b0Y+)n\,q[:4nHsI<kjU1jVEb`NhenKl3iI=>Lmf0I5j;MXj,-GYRlX-)_VqtWDY+Q?<aR,,fZ\b`g_Q0#/'poGT
%/''siLZff@Of>ga8O/@PBcl8i^)7!.jB0l$1SN%(I5J9O=\[TS&<-]>e*(3%dj_Hr;uO(Q'#9h'lB>U[@-(fpNaf!f3^$('5U/95
%1pa6C*CIfZds&i*Afpd\U22Ba\o\W.mYBnCamrY&6J>`Lbu,N6H#euidEmA0:,b3nFd+&T)([Gg(q5hRN]4OmPi9I,</18!GP0nn
%g[Ra/N\W_A29O9fHbMSbn8#orAT@N@Z(Pa]N\[+V*G%4Bs.WWBZR86\c<_N&3;`SgZ_6D\3P?kUJ*,pHOW(%!IUq<#`,nt\i"+?:
%Zk<p[_+mZRZ*4Y0<FTQk,AEuW#*i62I[L(68N6!E6AB`i*:""O-=jmtWMcX+-DWTk'uUVOO:(`M:r;3OoLY:l8OR56E<F:+AL(.p
%X9^SD/<>qfki:g'-oHaImAEpm+?-9a>)c*ukHE[Sj7i]iK<fumGN&7@GD=k.(,OK8DD;m0Fe[F\p0^ZUW%sNgfA.)U],sk/@s!Z)
%YNlTgFQuG^L?LknO/@tl-H?E$/jA.'37g"(d!(b<+(lt'(dA[^cuqWtGe[7D%r!mLNCArd];\fOf8X=hEc%1mH7sE7$t7]%%jm,?
%`M##23ig.`i-X&e'Z^5%p1M.e"gu0^pJ!**<qd'F-/^+u)FT6P`72[6%&7.B>n>KQ!VSgLXJJI)>fA3[b.-YHne11g/HD-QD!gb/
%kp<*cY@GVN"3n9##s`d('GSoi\Y5U?%g_n]BUDZ43GoCsP3/'^gkJlaL8l9)Dd4b@bMNf<#"&3]]YBnI[o#cM<2\2<?Be@TXk5e9
%AYs..DK0IPV#>X]H/)ZkT!dkJTB<YofF.0.(i"Iur3!WZ?Y7H=;&K+[kq=jS71KBMpB,K4^c4rAZnIfA'uhu'@N=KS>/CNg;5`%U
%JrqaIN)\"HkQ%%pU>uo\kVccGh[E@eSL_$EF=q7fW/"?j,=/cK:\cKXBXn,t^Qr$[KG+r*qq%o5$P'0,K9f)W(=T@ga-87.BeH^*
%hGV'Imto78cM`<m)>/H(KT;k1O-UR.JKp<+=(oU&7EFRg>VDp]pMeVXOT1&b4\oe^I*s<kp:HK,K"X`4$)'c'%,OL5gGO\oeE`?-
%ee-b:YHs\B.SRl6Pbgb+OG#\'20N;@go,o7\P$m)CtY?8m@\OhXY*l9M7XOZ]sgXJRoh%<03:l95.'RQ8VM:giHd$/dfX'?!j60T
%fKCDO3+oam&Nf1[Yt"iH>JUeq5jV@`ouo^MmLX^ZE'5.:+#RMg!jb@I:P1g)Sh57:#V?NSl`GG_JcLgG(S`kSTc2(fnVbu&LM@CM
%O98Z2k1fN._fk?TprIPn'C/^.OPqE':pdc+MSpf%4^Yg5M+]Z67ICe_oeGi^OhQU*@1B.fRkWDm1J(hd!&.0Y90\8+E,d=JQRdnc
%86M#e6.8o7Z)m;jl""h!`5T&V@g50D.C$-Z1F4ImbMjhM"0!/KW.h`+F7=pSSmQ+8&iEY34M6o<`r.)b:h#b*^st1^faLj[YOf4P
%Z!a@jlB/ERk+Fk^eg#4$Om-l-L3O>'*nO.Yhds0IFoh(mJ=lP_Y'TM75\hrk[ELj$6>J/m[DZ:e^<G\OJ5Jg(aH9=lJH[!8PXCIn
%MhD*g'O9/8+IJd7aio`J"65FJD,#6heX\$AS"S,GQL;--*"9u\Fp^J#RR,!-7?.O/Em,AGCRX1d<TI7aM&aRT+kDojPpPO:RUttJ
%^rWeB6%DsoMo[WCEXBqL7h=d6'?G:FRZQZbf\>@%Bp*%JeQ5f-hF1WD$3%BKhTQ50dl(;K'b5T8i$OZ'o86t2PiGLYIH.*'/i%*4
%Kb!+#rfQVedWN,)D1APNlZOR4-IQ9IGTVCdIa$G?%H`p@m@g!\3r(h4_R](?'p0<T(XOIlPXX\aR#%O&Rd.25;u@-]I-\%ucY$bX
%!&q\$iiT=j07jC78<I+hpWO`K6H28.YSTS-03!utLV3s3GbLp7W=m+?1V<4l#pP3]89V`0q(#t`'F)h$m\(uTCW*-uk=Su*9!GVk
%PUf$%G(44#/e]&Qg$3TrEhQoH=C#.o*YZ4(T4Vk]ebE!>4g)c+;Pe$r2ZJ,3f=%(]oD!m&bqFDH<.o^/hCoN;C"`EOHm-];X]i3;
%s/dO<e$AekCciC-C"`D&LYY5ZYPe16pKk`aT6,=$S:Doib2o(`6M)T2Q(#&S"+BEu6O-[SKr[/-s5lO:!lF.GG-<.;K`NT^r':&s
%m_B6JgkDf$da7tk_f\#ZIaQ13>GoD2-D%k^_S7fs`aa@<ZVj0bNTSJJH#D,XWrm/-GdW9'$p=?\(:8P7@P\/57cV]C!?oE/ZaBe+
%IU'b`cm<+,`h'u9EWdP;K4#5'N)U;8P+?4\0^ebTVX[aMs)rsj9Y)='5JA4aKHTL<W[hLV'a'^]NX#_+^_NtkfQ;BD(+Ym(KHFf5
%K]A!gplqE?kt:;!d/o)/+$L-L_l("l]\;OA(`-atl3MP*aSe\WE*!?;Jsf>Y3Q?1c@+$Jh7L0\'p[2%1kVH7,;/Z+Y0Y+M(0bW4'
%".g>`mG%Rjr$:QAFB6<s-V;&g4q*Tt04m[+1uh'Rm_u7f#j<T%?H`g,X`#Y&s2B;'et5f#?aup#`)gCZTm-sNV[];j(CUapjPYH*
%0o-["MTafEB?n[Dn09=e.#&NK<S]rFL81nO#6"u`*Uh1\4YS."<tB#_fa^&kokZQE3=Ns?B%00DRE\\RS"@J'(t&Ikk%W-Jr+p/H
%1Gm/a"35A!?a2KhDd7rb.ii./LO*nJAtcCfJCInMXSK\DMWi!1ebN'LP)5pY=+g7YRS.;?/\W[1\tfe^e-&lsO$?'NfP<dV_ZZ#q
%oJ/6F4QOHMoCJq"hZqUUUfJdp@>;*;ErReU4kt[VZqZSB6dTWV+AK%0*?fTZ9+D`L?lr@%lTaF1KU`]?f?[fW7_!lN=a24&j8]N/
%$uj32RE6Xgm\7q3o9UM%g+Q_fX2$WBTWrL\gf%Yid"siWnqIYh#u'sWA[R\_p!Fg2RiLIOoTNkR#?-46*BP8%9%`*T2S9N#MmcQ+
%qrKbLb7Zc!=XT+%SqniT\cn'`d.aqFgR^<3HWCh.6`In!G\eB"DEW3hmgc#ObR(Jcp][rXkB6.]icd2jaX@[JU\0A.qal`jP%'g%
%8Qn0qQ;\8P:sl'tD)#-$DGN](Glp.)?G/3UG9bgcN]*`\:;4+2hGYh4CkLo1NQI:1P?(9"nq\5Rk>G1k)>S-C?$f3`r$J\RkPug9
%!W+Af'fr&6TsVr'4"IaiO//X:Utg\_U<"(1^8I)3gIJ.(ljScs$154LXsU-YHq^>Y)ElaYNS`fPdj:()3HXMRhmLj!*:V;iY_g*a
%_Fkec3?O':YL'C@iut[:(u4LI%eo#t`U196Me=Du*-?NKTbD"P-8jsT)Gb1>SXi;;maZ>CZK/#^Y'QIs,hL,WojKp(8PNZ-fp_`;
%84ZgJ4tT#dVZkXaIhL;rg!Ze+5Ge"P=%f1:rfg8IcBc0tqbrNQ_9Uj+W3Afp=<C`krP((o"Mt:L%Ve%,H3u<.a-IDqL`s_U3=Hf@
%S*Afd;HdFYDfYTq9F`M[S"YuNdi(lD'FLAIErd30N]K6hHiNmqYM(?2Kjk1_7RmpC@*G`RN$?=S=^AcY4%St&b<l(Yfcp3K=E7^[
%g4Q2]6=K?c5i]-$>9eNc+Ebhnq:iQLa/6GqbVLRG^qACHU&d>%O64tBE6JY2QLkBeaP[=fGg_94?lc!iiEflq#]6"YKk'c=Xe';Y
%Nhp)A;PXTE<q5Rt,;oV?%q^Ch:*i*U7;B:2BERq3[+03ukoS,D.H[Xob[)NDFVe&J_V"[(8CI7=$UHWOd=V4.b4a>PeJMK.@U'tN
%LlKrqCraUm2]JYdopF*&8bCI*Jf+sNe%HIGBqD[:;&NO_^.t\Ums8a[-X-2fDQV=RBGaN&c,sGjrp0V57$Nl.Or'WGF7$2,,A!Ct
%LnrL=QV)VK=SMQN/+\X\3m$Z78s<+D^0[S3/s+gLYN&C57NJ=l/(RSM:,AiJ3#H7DW@`kZ2`j&X'a%OE[);W:jcV,7KoOhEG_(a4
%WrJDc*2C?Sau[clK8UM_l9772g%S=>Sfn7nS/GT20W\0L0L<"(ScX..:_.92]9b,nGOMX=SdoujA^]K-]i;CmYu5go'GslVDZZlP
%A+/iZ@GH*T<#F33jkrdkEP]!AUfSqnm,@dd6L5oE7CmoSO5%#cT=,58>FSI?UqE%CSm?G\p_gt"-t<4Z8&-qZH@O#nVDoP'bhupJ
%nd&GuAn;a18aPZ267]b15;Yg9J9c5d^sJ=')Hr+q"W3\;T_,$KF=P)QPiR1[7]-:r9p&PUhkI>>[=l5kB,Xd:3s.=;1KLES@KK`j
%OZjnOh1_`M,#C,-b%57DX>KP4<.LYkd*Ph@.AtNlS:dj1Du5(5f[5JO"Gk;]TM%EX3b<<:pgDH:a4d/c-;/jg1Tu^2DK@92o^a5>
%`r=W-mPjtHG_)^[ltUdg"R<D-_'mk-q&g,[0?BDP\mf/nc3MLYYGB"Ep!&,e^imQ.n]QQ_.,pqN@D*iLBsCs&[b2EJ[YkZGa5(19
%aQZ9'a29,9>8)\6MY<($SQD-m=4<gI)qdpX2B[cDSAO$?GHn-GR"GF:6$\l!lDfl"a!)RB,>d6SGi/kWno:r[2P*\KEp`/_:fs7d
%WIoR!l96(VS8^2hkBg!/@pK40q[.;Y33dIHJrrG)+]`pjpt;8ghD[^6`Qm?-TN5<U'h'-oqMD#XpgcH#)4+i0;#eQ3"6/Y%icHNI
%RY`c&rNP9]Ogh@PqUechn,3P1FH6l@`C]g^hNSL)X&:."Rp_DH9qYWT1V69]=Tk--1pag@0OD);R&3DgiG*HQ$-]Nl_Bi.oQ]cMF
%AdCW2QF(unbGfD63Jsl5+e/0911-UEI]*XZUUZs45tC+i'7Pb%b51hg"%(lF64?:l_`]Rq(aIS,GT*/&."/MH!ts.;1HE,bXf)*\
%UN+`WHUb;6c&;?:lTQJ84+1-r-lHm)W0Y1u4R$VS/1Dm(%U/pI4A3l`lO:J;j]--Ybap,UZtHiFDH=YEWHYPB7\EA)+_ub[7).Vr
%T)JG%A'9!H=X+R@O:k(I:jZoUV+.Pl7QW^O4_hOM)QC9TH(FPgldhbV$;`Kn!4NS`W%"5]J4S<IVNQILHY+&P6^m'm%BS?N;I@1m
%a25Jr$'J*TjQ.FjGe;c#k"/BX:B^X#bTJE]>!iePZkX_S8I)Q:SQ(m=nuAjuJp!beElT>uDW;i?f(:R!\k/U\)>e"=J_pq47:Ygl
%kU39\28tJMO"=WB0-Ni@BhH&p1rUA/<HgVTi7M'+3Er[JLel;_<'ZNs[.'8*_pUl\qA;N'?QQBefUe8DWY^C*)OD&iGK@u90:o'g
%$UjPd+%hT:o\Fd%LZW^JZP[S5eqb^$<W!;E')%BRKUd!dJhoi2S#g]k!8c5(H8ZEmVufXK=&]4@q4O-3\m>t.^)d+I&ttT455Iek
%_G;PQ7.mr$@R!);aZm5fKo8deO*D@2*,Z2CcoG,FVjrk$3,XA#^,EoR6,PtVPWee7)u?O=_EEq;dOG)n&$`BcS,A.]1m#;IF=51,
%,eCAm?gEl@/,4&AbTIeWrgS6FD)C,D6F#_*Y>FfYi=ucRmaeQ_2Y+E@@P<./IlKLFYFMs=S%V%a(KZHfq"$H9IX;f2s!F=s-=r2&
%mVEnRbD$kTkYNY`E+Ke2.1ll)Zl,2nIrrhp9=43"QpQsLK(kC^ZsJO&]mth_Ed1O"EYp$k:i`d7@=cc0,)DdZ;3:60O7mFk98I_6
%9nta8F:PG5@7]S>Q;q?:JVNU$Tr!iaT?biO**s$DASomV8b@hNKRA>@?ccpOL+oMVQ=3N9(7Tcjl.rD"n4HI05_`&a>19"<hYS^$
%X=.aCMRls.g+X]EfMKb[&Z>0^W?&nO/&OpJ@d@ID2m$e90k)cfpV3](I>Eb7\'1dqE]d'q[?r_]3I7#0f"M+d`"/s&Jdglh$Q:DH
%[h70Weat;5O4_hJ9WqtkACT*C^A(;'?d9ic'r`QPqU,(U7.'k7Gl#gB&DX"mi0cR"SOV>$<ft@C!VSRtK>l>,qXu*JN4k7*V?_E1
%ZsK1\I#@<6!,XW5UdB"'kFk$)=L$HkaI%5=>MAD3o*.c.WIFugd"A9,,fQLr3o,u/nSGGooq&>fg`_F_,d,/sBD!;*;aR2Y9r&KB
%QsZH`jRW4h5"Uj.OF<9X6?pY(eLR:U\krSQ.5Vk_@cID&>4HP4O6ocXT9"oONQN!oRj*/'%H&]O"SD@s#kT*ITe\tFrM,oMEkT]?
%s#j)?)mH5EaA/efMXpO0Yg_N'H2,Ir,8AM'J+Mma1QUsDnO!N!6fW*.0&$\'`MDRuh%sIdN:JLSG;htC*bagr[%suR/@=8B$tjg]
%k=?o*kW-(>Em#&ea9f-C,Oh#a/:=d_^I]u(bD+*ML&6JSkgZnA7R#NSCb5t%AlW'D0O&J2C?__*#h@W>BFEVfLmlh42;)kG\A%?2
%FEbS"Uq'?ZfD^')Yfr#b`Dp'g.JP('aROKg[=?pFA&s:lF8EXg$gmq;7pgTE!<.B7P<7:o3Jutg440@icof6F*keRW8Up>+Zp:)c
%L'_o3Via-D/_,dbE)pnd6Xs+.R2$c.l`9Yq>(,=[haf4RaU\e/:n:JgZWEic82ai8fa3^eNb]-8%/!jI4:'$eDtT2s_,1l.h>[$f
%`O-p"I?t[;Kj0Oa,AX2^bFrkHpQ=JlBjdW/U)BnO>2\gUVbJ&D*@Qu6;/6`tf8jn5Z+^u;S1@`EH:Fp.j7FT3lcoW**4f03pi-iQ
%\o5OOP*c'Efd4j,\uWPP@h(GDLj[45/qM/'plb8FoM,K4&$#5S`?j+X2K8a.SL5t`$W:ZZle]NsZGB%#]BXBdcWf`\UZ;*R8,Sj/
%UoBi"aPim?&EB,;].R'-cT306ERi`D4bDNj*#.PL`hPJGc(q8UL"4f]IS)%=jH04f_X0\&PS)7^lc=>jO6^J6\UiG=N[/h:a/X3Y
%Yf5M^d:(U%`A:?E^')ai_86B];89Da.b?nqqk#SNmTBRG]S,V.UC>R]eKPun4?a`Z/qJrdkr5KT%1J[>.D,NkEfN4X!&pE:mq1?C
%_EB=Lk+J>qHJf`m=.!-(;ALCD/I2gEiR"2]g<f!h$5Gr:BS;:!TWIuf8R/h1A\"7sJ$s(O0#jOlARfOOBir!u`n7eI+,2)C[4sSB
%;P5:9f%(ZW-Uem-*Ll+YZD$b244$u3$(s"r+ug"\TC@S`hL^D[X\ou!lZs-<5\us5=r7Dp29%g1+r.S2j\R/W.u;tlM0'Wk]tVM=
%\:fe$8UG32D:3//l(/5QW=E1E!Rb2-A)%e<#Dg,acpR]kfY6)[W2Vu/V"m'$RsRNF\QkBc^NT1F.5o'H6tM65@-!X5CMSk<=9CMg
%S3`WQ=%I5POK'JrfDUD"7t[*!(HPU5g$D6t6og/ubE'WS&!ROB#->cNet)%=p5)03Y!)n5+lF[^^,LQ.@!o/fI2<t2SapXB:ET]X
%:hGYBjBm`%YJgOq1=b5072QTIC.;'j:4^>U!VRa9HaDr:m":"+Pf$>f!:X,4b`GR:neO$W;a6Cf%J>d4rLZOes6pl'n?sNhOr?\L
%/u%f.0*otGM`M",nk^@*NHE>%&`.M(!Zrls,ln/pi8VOK.Vc/c6Qf"l-ZC+8Ys.FYMp<B.&HI9]@WF$_P9RA/(eTj!jN"9AGYM[?
%&Uo,?^/V.`EDpu)at!/sW'nq)V7M@B@Q)^(<Eg5/eDoCEX$lA6m-hP!H"B4H`_,=k=_6Lurq&<S,#9,i(&:75m0N*S,iI^'*AjUf
%/o6(H1Lr?&Y7eA[ot64W&orgdjEQod%D>Zn-FQ1HN".Wu-X-bV14MA6jsbVScrpUYeYs$p40!ruFRW0\ausd4.kV*)2QV^6f+IR+
%Ir7YC,tU#JErH>9h:EYCDnR\[p<$nCDM7?T7icX%K'_`4.U]5\-VUIMHD*n7Jb8^<)?e^_&AG@!=(&u%LA"JP"NmiM!8JF!7b?b2
%d&qfg6'_dX33XoH40LJCHO_T?kWigcp7*ofr'6s[jQ^J$d*g>rH37n]\u>teDm_bhngS:Wp?i;u/?8*&#&DP9AV.$>U)eA<Md2-3
%'<6ce(j6W;1S;aA=;RV\5RgkJXtYZ:bLS=SmD^eD*n-DiRIn9T*=[5G/Kkif)B&$(@,.4G52'`Tfm[1YG/M,sU.OQJS.`._8_`5f
%bq75`?\tMeH\4Nk88;3[C=VjY78iHPd(0agBK7-`QrEaa'o"E#h-j(7"&@5tmP1X-!N1n3P!UgM:F5loT9apN,B`gi$/@dk)+,-D
%f76eS<#P4+WJ%!>$-j62W`7uX\"0=g="BOUga7QQZ&A&DP?ogAnFWbS,7(rUHAOp00r+l0U65^B^rP3K7u]t1&d&VD;\jn=l6TH8
%YrLVqkX2WYK!/Kip]k<[Ga$'e8n=\DW\:uXkX@T;TY=]NJS*gK%7A6G&J03/li.+FdmY(SW,dQ:[2:cE)DmI!7Us,h?;%W'W_WA_
%&!ld5P3!@BC.K#>6@1bj&0a#d7D.)>S+8?[/4>!oZA1P_5p!&jkLn$"`"Od5_.`XH1QbDb=uNNFY\;@Ps0\`&/t;0/_Vff#f<Mi:
%%X)\I>o.RiB`K[0`^P''h/XTBPuMB!J)*<#JTf%H!-HV^Hf%(PU]\hYR&)]A*"QO!,DZQ.P8[;hDrd!:klIi#i]>peO_,X7Ce#Rk
%E3.;-GMC,Gc8;LIJ$ZE'j"g3s6p$J?^Vm&5<bZ']<G?aQFli:8Sj71-G+BE#W??k3\nVCq>Xi'%/a+1NPn]:>;$pRY#59ep[HYM^
%eh]oO:"OE`gt[Sj6c\,!J`$)s6a#pJ#WX;@3M\.AUA_AkQnf3Gmob"Y#h3:gms9W[!G`(h+am!$qjR6jk4FZK8glqJ`hDP.0<C6B
%'Z-i*F^^!R9,LQ15>\GC%Fb_`^R]6F70ZF=OkW6+G&V"d>.glkN`V-tH>K(l=B-HN8tp,DDp@(hm#u7:N0Y%6^%R%h@$FNg_7APi
%]<0bA=V5cG8jC-a1^n66dSI)F2K"/HOen3i%)GQXPBMsfQG/?pb(n)3PoJ!Q>mdc@>&"!%MqWOF=P3gS?e!pT6,QgV(Tg-`P<:q;
%CRN_(#?@/<eX_9bjU^*-\?cRmN+kVu\-W*7;]Qm-I#E)p1%inq^YXNf2E)Yj^JuqgE[=dk]]t-c\A=OP$kB/q$pgaUeX>^tE@lT7
%A2c!*NmTn<`_&+!Eo*n(mg7:hC44G$oKC#V71<$%Wp`M%c*i!6oA^:o-YWnpk_ID`$`LGPL)_8XcsZEuAL3f,9iEP!</P^X8FJkD
%,&1:PSL>t9Pq(n@(ma)c=04MZ;XlBu])Pe5/>@qNGen4UToPQJmOFd7/tD63M<Jh1?(NWB;c`#706m3NNH?KBH9YO]h]@R.4?KJD
%5-=At<5(NLs89./XGjt0o7G&t/M!"jPZ;94cqmT#Q5*Gk4u:"hQ5/)Er\D;(QB_k#oof]ZY<Jsp]";!Fq!#ZlMLIu;qKUU.@Rmpq
%>RjgWp"OD:U7r_S=!.+_D^+uAUY[KsFnW&dfPsh>EM-02/.XQ'!^WkpWNa_Zl?(!7VZU=/E<I#>/'+D7je+hF<EST.%V7=F=D&3A
%C*&h<lntdakAup/GE^A'U[9K$\aBnY3=\d:Gp3tG(cI2qB<0nC=ur8n$nX<[=ur8n$n\!ge_41U93[>.cr+6`Wnrn5%VO>2XVb5r
%S=uLIV&X:M3hNBc7B,mHU$^NjJ!4m,q$_XX7iX3K&=YA:Uf"Hp,,`?9ecs.b6*SciN+"#LgDkQN$H0iEl1Og[;Q5?WR=^[_94+^G
%/3B8Ye-jTe0;LSe^5K@s$eiPk$>93BRR2Kf!-te3SM>C8=rp@`eHV63Dp^SoU2tYFH_M5INrSrAVVifi4ooqd\$k/-'Gq8ELrhH\
%`+m]n(G-a?L9\PT(":L8r<A?.PE*]uria>$1l)iT<Xc-P$Xp)4m4eKDmFHfsT/VM,UpBLK4F/!G_]MJXP$te%BjptZ%07%l@oSDP
%dI:u'$FI-1jC?(Y5:Z]t-bLVgb[>QQr3.Nb@O.Y_lEG7I/@*P0<X3`#J<=tdYW=n9@$,SDU;q7e&'2>L4$^'PCucF]Cpaj,nq,<9
%]o,(QqP)$?QWC"E<abVBpQA72?t/boEA(DqqTtQrh!<o[Na01W2dD2BM-M!QgBEet(ph)(BVM`81Omf;/+mUKbDY/3T=!+ro(org
%-Bq'/n:!R($ekj?>fYL86Asq2L]LpRIuo72!OZ%;['oHXCFuEBXY&\-FVdtW_fgU==LGNER+5s'e_]Z1.tn\O]?25/_%gA1cZg9%
%V0jF'#)&DP7@Z\](`?.68MEL9$8Bl+3XEl"V_T4tgiCEP'o-!;E(cWVT71DJ'#Xc*8f*;!fl+M`_rXh=0N&'S*+u_dZAV)kJi"UY
%P;*9pASi`dDhraL1]1'-`4`DDa\R)Ad2!TL%V+F:0?105KN6eXoe;0Gm]F>PAI3TWk*=fn=;u5\%HF?g2Q_6.F9Nc*Z>%Q6/c*;5
%K+#Z2@L_Ib(7*keJV^S3k*7S!DPaI91PKUa%iNLoJj*E-0M;(!CW][A$Y8lj/dT/U*hL*@YMF:7ep@F8OGA+He^tW^[A6(-g*<cu
%f!+WKc+f;+/hdQ7aP-J%/UJ;NJmKBf5rGi&.6M'J*P*_U6^q+5U5&4\*\gmmJ1X6*:M&4c,++*"Y]&+?/'MC2_(b3='h0*B-oRA$
%X%jbd3k535ARe;f0%nH8?XF2aPYil3JMp^iW%8@hVU/L&p9,R(.A"d0RS?#[DcanIHYO4h\#O$H&;WA+g=aX7:t>/t=q-n9e_ofS
%nZAN&0)#nDRS)>]ZB04?ho.Kqkp<[uVU?6'R[$Z/nef1jhO8)LP1H=kFkW9/ph1L/4sd>:K4E/]:J%VRPl-M"T5mrbI@1iS,Io[E
%T+Y4\e1!JNI>T09-[IMCE$uT@>IX8on0'Eg?5!ct%JELm-5m9ipLtMf^sr$3GLF-1N&PaGC!1r=`qQ-WWf$`WUimD/gt:-iW_0]I
%#(N`gWi?9l8V=s60a:S[NE7F7J-JK*#R[c8_bf9MLH1;;_[TuP`r?M)A(P`M`r$)1e#!+llJR(O\`-o+^et:H]ViSD=99r0h,%N/
%#cQ$IBid,@=>jjN4B)fB<[+raqNOST^BL]%_3;-Ido@q<.iQ+P=F6Ui\;/1MgRGGpi)IW;hNtf6Y00oLX4(tgJ<K'T2ZZ0PX>-M'
%LT^g\Ks:iD&\eVP$=f'KmJJ71.#^"i&+(kJY\L8QrYg_Q7]i:P@B@0ARO%q^UAk85e"!04;Z=[;!e;Kk06u![&c`WnIr)%Y9E7mW
%ru#*<Y<[WAB$l*60Eig(WfrXAX*)J34EDW.`m`^`+RNV6+LFBnOS1AVn3$m45ha-J2)lOi%V3KdmV7f*`GUp!e-D@N8r(n,oB7$o
%<,h#<N7@S-dt_Aq.SQjm,ut7Q1),&!/Hr+/K4HDbUuGM7Ff,\DJt:KQi@N7t>K*\?U"6h4aACo&AtaU#P@$N!X(JN2"A9SP_ca#G
%c!":$7*&31$,'j6i&OndQhISYAD@AWKX>8U12<fK!/Q`&/4dcbP<''qAAS\DO+WOF&KraBq.)BL&KraBq61!R,=3`Y_"ipW>u]DV
%[)4=Ac*#hZ%"n!qe2L(fKB*fVCrC:j2I9aC?VK2Y"%m2,Yf$V,KQ8(`CPN!X7WjHG]gJ4_bBRh>U=t*pBti1[C-jF'<_I/DZ*<?g
%-SEi,LQUnEgR(OZRlYZ2l6qA:1a\AZgZF$WrO+@1K_^WL&dG6]<)KWFlaZ6m'h/31qq!:pf-ss_;tqF)jV5FarcJSJFUEbA$A/Q=
%@n;uuDq5*'a,i!Ve(+l;a$G%XhQJkUO+[.bVJ#FF5kd6OYFnj#`9f]enOCDEEVoEZm^9`bed/jR]?7;pFH7%.fHXKKkT4Li#ro@_
%coli$)+5Mckh[!r_&2K\"qJ6-jN`3,62+[c'"ZH:>!Vi7][DN$ecNG'jqT,-Qrk<khLp7Wbptr0ma651bBQVUArZe_J\(&IJ(ma:
%01IQTk=/mj0B5LjBhjr+I$a@)e`g>\b;V>rgaTT9?r`L_M5'LFiSM3k*W[SNI[5q=1p?!-kn8+<o?OC6XFEl:`8*qgN$0`qSCfQL
%YS7X/72-,XS^g68W*9I><Tb9Y&'@Y@0<Kpjc@imR;BR3M>,utRLne=<#3\3\UR&i7X!5R)G22/:fI;4)l=fLWJicP)KG:`$,@N5U
%FhYV])d8uP0E`8g+*9Va=m75pKiaggTG:GJ\&OVKJH/%1[F/J3rqLVLL'Ehd[t2Kbj(<:XXBh5/Ek*\c(bHX7B&hLJV!ok!o>ZPq
%8`<Z![K*^FWB538d9su48rRu_==RQ#I`8@PO[RiPndYr#7>!>pD#46dd@nBSmp:Y@RSe.!@Wm!^TCZZ.0T[V)@_1t>V)1+iX2Lb<
%F)fhC+r^<ek+r^:CTAR_hf1fcL+EO<V#`k%6mWn\1-?[9@aC!W?A!u5W&=`DWNHP2O\g!3GbqO#Whas<\fbP1<$g'N`Nol2Wat4Z
%1:Tq=D=%;NX(R=!-i3\.)r`TJK)^.q8h+pi$)Xf5+Wf4]dq*"5%Iqs>AuuO4?l5_>chcr!kY)IB,'e;d\_GVu*Q&uXb[?ar+qFu`
%B,;"ERnh>a*D-Jc8hDH,BNL)<4hqI8Z^+Ln#sH'46`np9$J#22,<F'X@qOFOaJn/O<q4Ju9s@I.s6AIA2IcZ05mOuoLEQb5dQM'&
%oG*NuSaL846am_0HXC:H?j/86@6"ChD%&o>ndV<`i+Hg;PDiXglqEfdrlfWiBTf);2`TACZfoYKDTsMS1HS7&V1!#HC)L/T"N?0A
%$rI^S")+VYMW%;?H%rFm_lO9<9I5haC.T^+fHT$=BOG<ioDNu\W8.HXJopUI"HNpL5O]HuOF@h1&Fm$&E-&d;Zq.-3)gHOr.?kl\
%'Wq[FI:up*6[c`NTK.!Nna)-oUq#Y-S(+b@'5=ctmpor[8UEiTE[o"J0.jSQO,7Y[YJ\1kI<Cp'Kc@Ee4f&.\Kn)"N5(uG(fJTk1
%BP9@.;*<K7\eS'ELnZ@<^7Y>e$F+sak;[a\SXd1!LXTeMg/r-4OtFD?ic5YUjC$[c/\^Y&\coA/[5aKBBiKZh1Y9@_;QY&N.nb::
%W/#"aD3_q-imuP>7(1RYIQs`_[BKmp/oFM93;tcqr\Z_8@ndI5NN/d,SR,$N31Rr"]uf4udeI`;3FW:F']D[4bClc:N=*1c3e+d7
%`^04ARa;WW98^j=6-J7uf8?@Y`#;f>,_iX>?&2c3Hfdi)jM\*.Z#J]ZL/nAig)_ck3AUQWAh!drB@ThI<EL(\P2e/UZ`5b?M$f(Z
%h<>e)Z`3BE--R,[WDn3O%=$BS?6$T.)(kgbFiSE&!#)5b1rs!`!%s7!hpnlq":f,%jq1g;0PXf*Z-rqO(t&]7;;@aNQFc;<qI#Vh
%NZc`c28LhD&-,fjCP,cife=/8\-A=sRLR`Dn,e>IWnB)-TkRo#CeS!EY-VPQb`H-W$*e"_D:q2WH7J]A=oRm`oGT>0<M&"UFg5Ya
%CQT8Gq;lkTKXk\H5iG8=[?J+2X4ShYJe8e_I(a5"mCRVhN!\OY<%(55pf(?N;tu_;7!K@e_lX"\iFSg2SSQV`C4oZC-*/ECV-9c6
%T=-@:5da?ESojINJ81Y7@=7kOh-Z$FYC[R0p:1*==DQHkek7RmhZ`D>(2r>Qknu!`6!h+tMMLVBaC\U&%HZ=bK=lZg/JUA2k]-E<
%\&^j#($)3Pn?)ul(o>*Gm$XO>rLn#"U8?!OE-JlQh/\#cT6e._dJUpYi)bs8?;/as7kLB6Us*'t7W,X\a6j:lbEbI1e"A"AG9:af
%4S;t2YqOs*5A-*ALO?7`+b5E@F50(Ll,aEYT<Pfej?]W44fF\36((:LK]Z/to<\)<6NYr:LD,g$7j[V9eP31>%c6iCOsN,q08fRj
%\,UbR6*L15)J;fmcX[E3Bg+fQm2GoX%,+"43jQ?nA$ZoGSYk,<pZ+i_Q89F:oIJPT:cL1!BRs;J1$;*>WO9cK[<T)r-anI*Z``Mq
%56<VU_ZmYph`U:?aH5u[CQ(L;dgutpk4g/b%@*2j?1Q]Jr)%`pj>:DSAO.d)O+?;O\Oq/,du]]L!!O!bZn<!/i#9O/F^k9e+'2)#
%>M"_jg"--42qj)s9PHBqP7hepAAXa$T?'af.o0A9V``++-HAAog)r<Z-1J5GAt%=O"%BMg"$gam2GfW&+D0Z3Rj*P%KN[KG%_J?h
%SHE_a#]6+E4!dV.hM<2$@PgaY&N^)TCfLiu&gQ:?&ZXIopK8=Ar(p28[CQMG^h$p(Z4'ou+[m9IYobURK(h*J0^s>7,81!8M'=e7
%!71r`_;reR\Y;ctM%>^Hh(A63NtU]YLfL@Bk)']I\B57fO&E,QQ"%o`fOc%Jg@Q-2AWd)U<h3f^,?U/&LFth&pW](9V'F:e0*Z6X
%O\:5:_^Ld$HDMIkg0N>nH!o8IQ1SA`kG=O;h*X^<,.H!YEP.7(K'WKHs0\pD+Tn!2$JdD3q8jPCfQ):\btMq"-bWh5[[rUg?,!mc
%c(S]XU[P@9h-5q?-uq"<]#qMZO);8a0%@VF!OY-Z?K`ep[V'Y(kqo%jSjFIm5827u:t:fW:;1iN?rS9G!BDAf+a26^\LM]rbskQp
%&r\&@[GO=aa_)aQJ?69?B*t6u=R.$S0(i60_\i>+bU1J[E]]Zm2)Rdk1=HdMZ"XO#mCS5CnU?@Z*CBZ$]-B5Vjh@m&F01K;)cD2a
%1&ApOqKNkj=C!_2ee>4TMYdgUb3+lJ39bM%T5!!f[B>W3-pUdQZjLb0j5I"["K_`9#^_h?#C9@"GW(+Rb`NWJs1?>/VRS`hJF[Mi
%Fl<:5D^)jre=APjKV.ATQR`6\k^*u:YHLp#5Wb!5c7eHB+GDZ%<ZCG9gmWO&NM:f=Iac.PO!qg5f@A6prt0,.45>06,qHcK%lklj
%"LH*OWc?+TQ6GJ0'4a_3anKjd1&X4]_<!&ij;@/]iVH*a^6"BiC2q-o[uR5.i2GXB=jVqNl0%08#'BkhpX&bM6G.PrEB]>Y@;T&$
%50e_\Him(fMn;M+k'*Wl@')Md*#Eu!"R"5?EQAMOarQisFkOtKh](H0UnhmHPetQ%:9GT[$H9+H,=>VpPiQ_EG=hF3AJQS<Y&i:3
%n[,g-$IN$(QY7DtR-](Uh2Q$X_4o147R'%JP*TKPpLHcULa"j^CXI>Im?ZP1F_VP.\G0,u+'BPh$'OFfn<%k`ZiFgs"s4^Em,!:F
%FJoru+m2!O!F(5q$E?P]U[=?f,>4`f/YMM)K&#B]EM*Jt#AF;Z'Hm*4?0FP7$;e#3W-+aP"aC=fJr[)!SErgj)Ua1\OWif+Os&XL
%5a%1:HY0Mm"D;pD$qX"kZ:2-[-Z*98G4LdtXA4iirVjn]b;.r8L'L4SJndRYE.G(9jg7U["$J,!`dt_rZLRo8]1R;KY@nZD@Lc<$
%5`Z7KQbW'CK#+9E'=FC8J53gfhC^i+Zk<'dlPjs-h]G(aDtJ1I&NG0/,9u\,[&5lu4lg-J3Z]"YA'b#.MkU)O)r_8O0(-XO\$sA'
%<<O<-Ba^k3U/^-(Ka9ks8$BcB![2s[AP5`?:%]1Mf3>&[6<cU/%`WKni1a9%^pM!dnY-N=%-==lV%sc!/Rah]$0_'_Urajbor]T!
%Mr=k<Ch8F;<k;-*AZ@(=ptNV#,e^^CleGT##N*PVL^.uT"BjpQZjiL1,W6opSa>r,>ESn7ObX4OY9l>Ai<BbVZg[p2J<'nHru#o#
%XL*-&Ig4_a;6"E9rsVMVq7!31Zi0'jV7<b`;I%Fge'G^Q(Ta/?[f;#(IB.!G2)D$fYjX>3.ETTpG;6*XV3k==I7nR>'nc75@`;00
%A+WaQ9XQn^MHgn6jh6i6oMk\#Q/:%B#g\g6AYE&Z)rZ\56L7E7VHeKZ`s%QP+fCGfVY)p4Q[I_Ld=De[b[UKl%sbg+);,%n2^,k=
%6:)M68Na]rE!-_8iaX(`M5-d`!JD/Y2@(^8c;G3MHMl]*MU+ZKb5Q[DM[j':C4%2ThRraQFO$>YJEf[RVf+5cCnd;FgM`^.s'E(8
%#/<=nlcWV000UC7qRNenp@$7$+.5()!<&@e-]5Hu>;T#pZ'RUfG.?$n4oO'j79:KOe/p"bHejlhGE0FuDV5l%lUQkF7lY4XT/u0X
%\_DOS8S6[.DJ^MS.BruAoWQ["o!@uUH'S8Vn$&Qu5IkPQp%JpPLJ:BF\3@*_Bu?8-H".T"A.ruU])lr"/^i1/RKa_"c:uW=_M@JC
%X/;"W:t9[aq-_X)E-k4@`(('r^j&2K:&O?';.\&ZBrTS-X*WQ/8/c#k[U#_B+WE>BR$(=a@4hqIB=Yb\3KY<hYL%I[mQkgp][Est
%U1cWLM4$m/L5$q^H8']T`A1(C7B7@=,\2])o;E@E"`J8PIDG`*</S4AR)!NbO!*SbZ6Cjf&^4MAKV[-]2?B<#oXtCXN/+<Xd*@o=
%BVjQl/bN?p8A(j%lXIJgQ+!8qXI1Sq%L0+B%!,GB9u,K%YheAg'=;p;gjgqhc``XXY$0=OOP7Zm"(nBql<6"nA$"VWma]b2e_oEk
%VHjVV.<.HOf.Mg@e0cO?/n<)8C0+T#g;WQOdRr7'bjA)^AiU)Fn*01^U9En=:18-c4pEXVJ<1'Y`ZNP;kba'm('ZOr!H%#=m=^"=
%Ws0Um.hu7S9flhZoIZh-^_kK_Y)])`g/R?O-\Y!fZVTP'Jk_]0LqCJq1PXc9;4$_kLnuCU_i^\aPY4%2n9BRT(imLDpYR0`f?lN.
%eHB:H3<"(OT-b0?gVZSeLP?i`ksY4-$OR;,kN&8f%u:prptK$]HAH3qZhqS:+G9mMkAu1MT6&G'ke>uUo0@R:Umi_^**f#Rs+OmW
%D_=$EAd3_$pCO0JN&OYuf.0/dms.O>A:acCd0p<,"H<XSm9S(gZ*M1^TW(N34ho(<O"\G[;Fu\2B#k)JP?k]e<E9ta/I?tbW\Qqc
%mpQ.>D=XI&mV2=V_R:#fkTB'g[M/CV*Q6D.^89M*s3BcafrTNY]8"179ApNun[nFE[VUK/@P'kE''W$"'dN6X4!d)\>&WAu!TY,K
%W&Cf19$Hi(<#j2QP<R+V/BYpD2_$tj`Dd%Nj/g_hqt85u7KMJ,a5'd_]71h'VBl[*m:_dRI<&00XL=UI?;A(PHN467Y%SHs.V/+t
%%,gN+>l-f5Z"\H3;@_HO8LP\%.<J>Ohm5;!65#6g13(aq%Sn;-CePoTE_pHPSPK21XQ,M/^@@BuF3roTCAdSU?7]^,55g[QUgRG2
%!]F+/o!Q+5B#E>0!o(&&=\Us4k[pTVZG4=a_NJmX!U^$PE20K&-#\8>:jN8N9=.`4`*(N/>grBZ'/;9M4\d0/3D)?t/EWlsbQQk=
%Eg?6"N]N(YWf#JIHWj$FF,?ZZ@oNgsk.I?sc=2f2/a/SnJrW\[ka8]PA'PHC7^\n!cB=2L0BbCGJrVoc3pnQ]37WV@4"og-Z^BcP
%$Td^gT]==,:/EP+K_'dj3/]d_[@e2Y$T^S]TG,V6:,joj"P&*!3(o]_?I17RJnCQ"brUcNV-;4sKsfkjAsR0tZdoLfiTt;0?J'\I
%!TGtd3"BG(eNad4O=K]j;%"&YT*c\5"FHj0^djPol[c`_;Q.P!%)0KgTf)u*2u,,;4@6^g>c+5&r<ihnLPF2brQ]FMlXZt(9Zebd
%%.r9g(@_l"SN\jH6JOrb(OO4J:ZnDYW/<_DKNoG%VjbP][\C%I7XP*h\8GueVfpa'Zm@%m)ss?&oBPB:$[.6TD$5-"_L0Bf-E*!'
%XXtluDCrNLgr9KQ(YE6IG4/Z@!&,Am3dNnmHHAFo<2aJ3/>uZ5IH,I@p]/EWICI`2gi+#\MpWA^mD+U>jfs`5$FRjW0UXF^4R92/
%iNjl<+`?`,YNro<jPm%:\RJAW/u:.X2S`5EBZjqhq5_Uh6jKFUAWi\s'"=j(:nmg?$*g*Ea6;.9@4:Xn1Cb_[iHZjFod.I$,P5b^
%0>sGgbsLCW,Y<k0,Rua;U#`F;%40:E#OlLFDD_j-65Pk\./EVq5*Tl>dX<k4!W@>=FPj_r@u3_>9/!p<DWh_C3*"F4B1niFB0?))
%Lb6\h3ri4aR!K8pZ9-pO4(-3l&nRjg,P!"_-7'!,g)MepP2un7M4\1?-tDUEC620C=uL9(P5jWH>XS?\69hP+\Sdfdp75IgccP/N
%KFtK8iiWZdoUhMiofcGY=^:D\!mO=F'I.(3:1^7*XBjD2[^4k/dRs+l5l2WigMPqde/G^;s"N.Z0MVBsg(*Q@\8UBP>Lua"Y-_15
%g!=#LAH]@t"OMAc>/2D7#UIYA0&.$IKiZ(D-k*DFKFl=T2cU&"EpPja&3EPMWjGD?Ug.G&j#ic.BXPladX,hUBiP'i+,=<%SHI*R
%Orj/+30`D(Vhs\W[K)tb4E=n\!L^cQ"&NJ2HU;*fJ8W1O'S9B]-t,@I!)KbB#t?[[5G;Or$ECRk`$78'nH]%$rWujap_)9_0$!^X
%,!#9o4G1BO+)/5Qi1RLaRf?+q6Ys8fkTn,1n5Jrkh.NGNIg5lD#Tn-3OF/H>$Li2:+<!no@pT#*9BR;k\Dbg]e"lU^r%%W!1*DA/
%gtaWt\c,0F2#]*4+),FIS7WW%b:6kAoM+2BdJN-68"c&KP8%&]rt^@7,6Lhr=aqHER9ijZqRI)j$2BhdcK=$;XE-;jJUpD(2pg2$
%o.GOR58^Ar\GDP"IPirRL=mE+PGK(/HI4j<icL*-)gIc<bSCl$n$iDF)&I=PmpugMKdpOfrHpl/[\RTdfBnS8/g'MXT<m>`UNBm]
%6^Y&5g:-@ZQa91-fRl\M\!HgTKOgLUJ*k&sp/sR>L$+8&J^BYKPLQ>o0?Y`*r>Xp!C>/2L@b(N%NDg[P3Su7QI#4h1N1lr41Ctt#
%FM>[q+s#Obl;\N"ig_[\eOpaiQKlUmXKr=<B,S!CL(#7)>@-DB6e5CpCl5;NLT?qVa?%D(Cep@@^6.>u8_R@&RK]7*hP4dt)5^,>
%BO&nulY?C@--e8>)eE]oT[V1A9N0#/Ufl&rZO@"M)%&s("YD^W:iM_o^sO]H_-)MEK+,kR(.@=)AK3AF>0BaKTX2qu3U866XJlVf
%$TdUT'!ok=bSk&+\tHCT1<`Y;0MAaF$dLLY36SOfVHM7LB,MJTAQTLW(3IAqL'7f"Op,.43o;@KGfbuR$lMre:hjBI;AD6[%kP*G
%n,%!9>01HY-"qlU;U&l(8.p<XKGV][?\adR@0&CI+ln=BO>5V":0Y&#04T#/qUgR1:EaQag$'p1:@CcRDf+&CID$0el9.Zt+-8lK
%qWS>VBS<hok2&Jq@TnGg?&.'7I8?'r7c1m)O,.l4kUsnph#rJK:Pg-$$8qeV]_/ECj^e&R9hJH]G<qDB2]KXO=jWWEq'p6B3tgj(
%6+pSNc7^9SRmQItlTj5UD-[1S-:E=m`GZSfMcZ5cn8O<q)MSRc,AmLiIR^L;Jt*$#-+Pl?SrMW6@>cS4DiFhtP1gh.4X8+(h3G;G
%/+mhX]H51)+dSa6a\!mG`1a/O'K-!O+>][L'cfBg%&d_]5M4JJa$dYr\U$s1]:H"#7)&QJOZ)".*diYF?=5?&ckX4/HK`<P]YGHT
%'s!2hojpCr940pXMM+0U^Xb.ooSIs&F/;Ulqj]0R,2]:FQ(f76`)im^J[OJfjH[/cHj+soj]G`^6%J+_L_g>/Y"j4mJ2F5g?6Cpr
%C7!!P:m8',:6Y\i;ghG+#k_`;Ar0>ciTW%T.7-2Nj](cPk"f)#J?3nK$se<WdgF`_VSeo>//h?m"Z1ZW+iDWEE0kTGa6_/PMbP[W
%CCI#X%5tSi,7HN'!H"XLath";nN=/e^n!.>JH`#Y>4/M07*(RH;NXb@<,3V!)n$l=Jogn#p4N""<_>j>3YR*Kqk:L7`@4ogOom-\
%EL!gX*<FdVl<Fn]!%o=DItd_6jDj)jr&A4(N$SI'_+Nr!<j#e\+*s&+4>\KPTpDSVJ-,WU)7$.^mNHmB')i`k1"jhP8g%UR2rO--
%;SWl0!sW!2cMF;s`28J?ci=AsEN?IOJU7taUgBsmc7@V0CaXd=k;P][\*.b"@RTFEY:A8@d9T7icTlD_Fr`m'"a\@ABCkS.r_$nq
%\?BU/HF#@*`:[fc8*@2NU&N2BP-"@1_>K1q$1`@cq2LHC'kfmq:V<!N_Y%3F!-L:kl"@G2&RrM!'qUEQ6Zq:3$We43Wo+eRG]ZF>
%VtXkiH^NEC88E]V1&<&"L0j",H#EE2.YIT`"H?.&3:,tL->7hR2.@5@_3FV$'3=T(lbOp8iroM)-<OoU!lZKGi<9;"-;`Y)r*pBc
%:YIfFk7=&TAOW[4S$7J\=:[=+*%qj_2Sj]*#Du5p_@$L"9q]?2pr=^PGQI!pljoSY=jZKQ-EQ,/eq6[N`sW$19s@sNJRT:_n,`W!
%'<(C%rilbB?GLhJqnjao(A'Ym$-!.^j/`l;r_Imug"&X@/Gade8,iU+P#.V8a^fsUaN;F+A!;O^9JGG>kBshTrDlpRko#0m"akO?
%fk5N:W74`dVRsE[V6Aj"EXc5jkiq^sS5*G/Bd_)YSk`Y1kmV@kGM:Drp@!5N?]OQcM37ugWs"gk1hLjP_-pL<eV9tl:=m?ulNKU0
%iQXOhdaJ:S#`R:2fAY,(^S#s</m%SH:Q\ie3a!029[lIB!qbor#,g[[;8^//d=YpERk0A##4U!:bUW,HGZ?[$ro;(=iugRJ(`"kq
%9]'%B'>;Ro#%)/,_kU<"#_+hQ-AOSYh;L]\pDc>VUKbXU48AIMIpL+05+li82Z>ro.l81`%#fC)%q.cr"V30qQgT'9"S0remq[so
%,rqN_UQ&'k?lVe7NBe6L3IH8,6Lil]ap,0/FNW=!2._D'1:=LG2J#6.(674`Zps="X,iJS6N,8ZNOrK:*d(i0%GSp6/7jGs[X#dL
%fajJ&D/<2Hfc8N6$]8[ZI>MTPR'<`[b.SQ#GlpG5h^9WJX[8HU58`tk*YJ5Hbk5mdaT%_tjJU5p+(`NCo8%ee6cCg.=IUP4EAgs7
%DB@ZL7KIJ6Rq1Y?2-5[a(7E"-cAe8F:;#^.>Z;5rfJ"X^8MLVmD/6CICtH71)b[7hlKo(cR'AV07O3._eMA7G,dqu9-k!%$r(qa!
%`%E\@XMW5+[g(mJ.7B<N'S\4,SrjVnW2$>!;>9LO'bcM7QQlm>BrjH^*c5?=rDM&*;TH$$lJ2En@Z!%/<A_0;"X'qL(%kQ8k><?<
%C"JNuco1?tBKX^"H,kiV#N3kbIMU*Ue.!6QmACumZiQq<ea@qXCgpl:ZLH@F+-5YnA+EnV$%,KKO0clCCUs#Rp#fItT6]"1D5>JK
%8)BQ9+'ie)03N)RHW<qbG5ftAH6Te`'dr]e@"7&b_9ou>q5J57!J6_^FSrq4J=inQ0>ck"A>0p9i@#m.AS7-Qi\&Ke,a+[p(mrbC
%%B#6)q+\f)o3bneIWli)H32kqTo0;^Bd7?YUo^(/2BPi!GE#B/WD*jEgGXo`[)U_TWJF<t9R(W<oB0.Kibm@hNN8CF7,QJFnCMWR
%M-uth)t6ek)?MFQg>o<>L,-cD7B;X%2;C2f?,N56%.snI,ps/LD<`&-4:Gj^2`jh(;Q\#I;q@%BF*Q,^.k3sMWG?a'eU@t&%=S#b
%j]7<`\kQHt@aWnIBUqoW+EK0tY!-k].>)ddCnIX_;jL<Ik9BpgTPi?pbEU*m?QMdLk@qmK((E-[/8P/0Dc_F)D=VVKMsHN\DH.GZ
%)@OBVMgA@#Ru]2f\dj*??3TX=mpYnK).*3Gb+%]o*?80B(CfK/Oa1jngC65S_DQ3#i5A)<2q/P,+38G]GQI'@Q;!d#mVO,aMUKn3
%m1lHb*4p:"='UHbj,aWhHsPbJ>"&`43n%*-6U>Om:Nf^"l$K:F3;g0c;EfA5hlDu*Ph_$Lp?W1%4.6fXk:)b01G0@9.-E[D#t:2J
%85V"U`'HgFJMG'p3p7&f9N,S)1doJ]7':nLH\:,k*\t/u4uKk!c@K-OfWSIo\,.\sSN,3NcKkTd/+Z'=1,lG!a$1AcriV:L3Ha8E
%c6#!M,]=fiO9a5s^ZTH)6(q'`H7S[!G3r#OTVE!"ADE`fh%3GAM0-<GTd[bko;C2O</0"%98u12ka[<@pS*IkKVgANm*Lrp#9Udc
%'R@6C6'lY`POl4_o1HLX!@?oGX6.[k%/s.*`tAV1NPU9T7]LKKHO_7t;Q)5%<3]3^3mC@i^C,[p@SIOt<ld=3'l.H,m'X8>;r#<l
%=<ARd;4KeA`3+r=_Z0?SQZSi!nmRnlZ<S!4QN"a*R`hL^DH9;r]$>e+gtKO.mXNdCru9JDl8NV"1n6]4YV[E!An:s89JN#pa*Xh[
%[_!/g2:j1<bU+,ZCCq@CFnoVJ&?b]>h^rTHZISJZ'\KBu:;Jb:@^<9(jNIt29,Or]aA3eXo(r"7KcF4<5SoB0BjK`+7B$NM:TdcM
%@sXK.b0?DG:8'4Nh?JjsVd%GS;TMa<6kS&#IO:0VG[3UD+I&Acr;MC"Q-_rFNLHdlDjl;_9(YaMNTg/aA`k"Z2/B<K>A-mK@0nT=
%7'Y3MU`q+MWf/<fE@S!0WOKge7NeI:<+*jWnMb?uU<7VXfN4"iYqWX,YH=*qQ24DX76*(W+%Ah9>t%@[`:oqaDrc_-^38OB&S="&
%&XqI_)VMm='(R-E;UrA-S4GoW<6/<@ZZ5sa3UUD)O!@u'=klCgCQS\Ppr(GI*3\ap*9jm2I[O08eaJR7Fg9tP?CQGGMs?YGEBeaB
%9s#p+mdn$gE<gaJ*BTs;9mH%uRatP<5qCc,?RSkL9.H=FCHn_T#5+QeY`S:\00,N9OpYgjg,F8-Ss'N$Rq2(fm3S`>#-\!VE<P)D
%(!PUDhqk=cHW%Zg?MeGV"BglpVDlWXV4*]Ld-Bi&T:fnNE"SnH?EdN$WbDc.=)-^$BF[lW.GF%%kZl^6Ban'5c)ccKfkBflZr`H^
%G)S<2dB[o.3T;L!g``u4D-/I)Rq-%_)OPh[?kR9SX5)NCfr;n)_I3`tQgM'3feaT&ltUs_:.@0M*&cr(IP9K8N,Db#GoP?(@*)TE
%(j4ep\ZFeb21CnCA[/5_-!X!Aj#5[E@3&BZUW.)Q8#Ld9FHNHn>'k"m;B9ngC:fVF[Fp6b9$.]Z1mB(MAINL0$)Na:]U&tnm42']
%N2Y9V5JcX*QUd:GN&;B#H]CdS^BON-r7]!K=@@>+7#Q4n/nlVM0d^'`&(*4<KEc'aJVD<b2d*A29S!B'FHm$1LD3j346,A`(0EEG
%&LsD9\TIJ_n02]9qbekYd^:1kjk09MY=@[(I?X<SfK,Lo[:HA"Sep=ma(FVXFY-Rh&Xr+5f[[*b]5Uq;D@3dL9A'T(VWMd%QGLJQ
%ar/@[ojiqF;Vshn!TH.e.ta0qH!GmIKr[p!mEE][b](=*XW<ofib*8YRTS:$%s$Fu,15p+9=lroeZH6GbLP/pD4B7LdVC8S/^n3H
%:?UTAMLrn(rjRO;_rHe"9>[740R#T3]s^KgNdC<6mdN+qLMmS;2\-CQ90qfE1hkC<?QS1X^#@Cpq+o_Vq^_KBceVV6Ei;nSSk@W-
%Mt4=%=EoK^2"3$o5^<kVZ0RW0G]D9\S!Cf79fnK_1nX&r:e^R[9@Vmnhm/OrFOTSTrRi,t)*FXKMH+T"2?PF]pCC>Ls-onQh_]2"
%Is(M#C"iP\e+R^K[XZc5rM.j+%[N8)Q&o-Tm:IVBAec_818Alr9^-/O.GG,mDGm.O[3us#oXr,f+"rsBQWERTXu^[R@qkV=lDgn#
%%5!K$\@7m>T)Z*)S9rep;%^)tSS-NOUV(P):.:Q/-r\qoBj'SaM^m6`$^ip)23,kG2UdrAa(\Z\?b"5[-mBdu"]2YZ[Q$+YOn#V3
%CC0SO-*tL@GiGe'(!#B'WU"*a79A1./3G]%MV4XgSEc7&9RZdO-.s,],r#bAXGe\a)GGmANUBMM@LKi2i@\lC]6Oc?jM/%sG;cG,
%kqb^Sq)'P*-$3nZ-DX,-A.(=e)dl`3>u$S%bcX/.fGDpi-XV>Jf[V(A1HA;bUm97Td"BNiWkE)Zs+i_E&:Gc=WP0]%T5R]C?V`89
%.l>p='DGtQ81JFkVO\DRJ$bVdYh5gW5g)_hr)QZ,Ga3K5KGgE<WH9+OdeMMD+?>_LK0R]5Sl9IG^baWj8;QSJ2Q7qlaj*r]oYhik
%fb@H5;YsLonOhj+VY>(6@3MaqC:/;*BVdOW%9gV#OIeFM4L*>:G$jED2C.OoD&f["q^1]r3T`Dj^=!\ZH[2@91.RAI\lJ#f:S]Z8
%7&CEa:Z'OpoOZ<\g<fZf%@p:%k'X$8SPS.iq=J7DBA1`.oF3sOBgY[nYOlB%L7ZVrTdS;jH89n9:M/>-PNaS\RD-n/R5T.1I7"h!
%Qar2l6Pn00F<Q9X<2L+18DhdJoOTXcg<bQG%:.2bTo8.c>tj/&`Cq5^R(h"f%,==L%:*ebdQ69)Y>KOsO7(3>c/<(2PSmN$L>KjG
%,k;Si70taSmjJfoM<%'jppY5WM7c6t_Z!Sr,*A2tWZN"odU=LnOcL9]/X/AFh$o=)FEi4Yr<$m6'1X=N2M0>F]g_-jCHZbmhBHhd
%X(G.EJ[fa(eEecmZAmth(PNQ(TCeEe&<4*!q+d_C.OF1J+Vrf^_Z%-hGCo914lqN`d<_c]5mNjk];Hule9*CKd`AH;*4'rr2o@+j
%-/^.$cOH9e@d4Gho]bV%Wi>U=iUIYSh]#oK7l6a\**#q`al%3uC]\D/OPV8i$/$D-@#aWmC\Gg`$R,m[A;e64Pas=%W^Z6c(o?JZ
%^gH5H/jOI(fK`dRjgVKAS2X&+nO*Re?Bj'\YJj;p%Yr):[u8.6gILAn_^)!mm7kJD`Oe]&Dr`u-`67)OOmq-KJc-%J2\M]$835.D
%K,&"]L'QqTO]\!@c>YdGkDau9X8UeLr\^nQ@,Y1q[5YC;s0J_5TbV1>pF9;?GThA:/P:Eo5ddM%XnAN'k7+J"#rhfAWe*Z:$2mo@
%.O2u1A`pf_)b@"Z=HjV3imQENTZXijPD*^+\B9EnaV#25BC@`IBdY(.le5,h6o$'B87FklO"_dX!s?:2h?<sfnF/0)b!QIF/4nif
%:W?OWj+`N3Mhc+KK?'(a>ijjLVUcASqe:iA$lEQVG&KF2."r+Ikf2:2#uBj(Ir,,,m`ERQ`r&Waf:!->)`Mihor#nPG[FCC[J$o;
%^s6kYkNJ"iH'PKaZ&@0.Ye>nTjPk1)*]s=?J.FAB,lK1#1?sS/SM"BgOAuWg3KMW%[1?.k-S<+48r9$1eU3/QWEeVZ-'k"ckVdZZ
%Z,30^,>A9**ZHu+QKDk0C'V(KFWLtN*D^JAo4k"@'B2'FDt>E6Y/c#fVDVfN$>l7\-O\@`U`i'a6;!FNVjpq[aL^6#Wh^e!?Ed=N
%?ZH!jEXeKiKuc]YX<B*K0.C[mZAGi@d_W]/eOC]n%8lgm=[Q4Pp;Is0(.blsklLJ^&2L.7^d8PppoH]:PWpb4].*'l8Bp&W0dD(H
%*&fm?RUqQuiB+#nR[m^gRcB.$5]`B`hK%Cr_db3,.l$0ek-u!I/uH24fjDbC:h=n-lT;nVI(/(<cQ=n2as5eo-nls8k[q,H?>l<^
%R$Jf)8P;9qOWRH0D:`KRiRt`q27-PnY0L+H.:<`&4gmNMqHO-TI_G2,_59DuJ$iE`SXC`]"&bVreX;83>,fd;(8&+iT;Ti@ke+/u
%q>N'Pa&T.Vk$8==IURI)=Io`'a(?mp+PGS1"as.si<_DrM<+e:gVm<fl]'q9TSkb)H4/_[:DVbh/&bXD9>"n-h:_D:5:gKiZt("W
%XCUa:dq%u2r,'*D1Va,j\AHE/jVF8;m=?p#GFtYO68l0-R`NVSED^riT*V(53VR%:FN:JqJ"A+U:HqS0glLnWcd\Kj=sm99N^)rm
%l.E?:+>U.3Y^F8[Cm0d9Oh3<sf+O$_;g"'AOn'Q>AVnXnL;4ihEC?s!`-'?Hr\@Dq+b=RGK-muiEN)q>*>CVX%NTWa14`149d+']
%Dc?>Pc,u*brHWK14_U<MLQ8:TTp,-'c&t=^*1=/:3at!A_;K#6FF\g`je.P#-L%<&ntU#&\)oVRM:7]t#3is$.lkZlgR>+pMdrYH
%[(('c8t-r"*DcoO=Po[l%sMq0(ZS?Vnse,I5iN:=d-J=TK%d[S,]QhsGsU(HZ'O(^dGcW;)]<!s`@9oC,X?ukQ<J9#G]"kGMCkk9
%D'&'0.R>0:R14B1hP[qOoD$5kE9V+c#=CgBiaXK*k:c-))5W5)i]0Dq2E^hYnntu0[JiH;@4^OW[]iBN!VA5ZLo**pM)\Cq?BHo0
%WB?0EK$oqbK+O?'\_A#"Fiu1:KS231ndBQ+HEhh6$Jk>]@4+2V1m\LA)gm>[1+7rOqCO5a:jJV%;$*_6Kq6/foO(=Jq5:o3pel49
%]i?[MbDa;b]AQ6/1Z]'u,J/cKl[,e&bXDEU21q<1&E-:^'JiUp\b9keb')S>B:+P*>]Up;r<?r7lsPek,ULt[]!kbqB,'3q.;:D8
%?"%^%,r+#=Y&f+_kep_1kgSC?P30@$QI$9k9eoQFODG5?k*h4k+FYh*Ln'ltiD">NX5!6lAP9PdcDjT4<@,A/f1M;V,j>`k`:r_Z
%H*tep^HQcsLWZ^K<iX**;dWTpa5X,;P_rs21NQGq7E<IpL+no:?P@P1^?F4gdI'&CbcdD>Y6qHb:^%VO"@ojt$*,tK,PsF:cu-/2
%K_g77.ZhK9.O6!8o]&mVU4Us9a/hQmQLLkHVWo^?!=3k*oc"C`b"dC5W`G3m?'t-TSp>2'p/Qk&8Oo&M\9IEEpKU-g\Y+N`EY-_b
%jk6Jn'RE@t65gTD+C1mJa.fYjmmaWb<?n_A7$H(bV8Xnj0*/BJdhAGp.R,)@,jfIJs4\"Ys3Bcag&15L'7#pTF"M,)<NtcAgIGW"
%**#c##+llAfg`GliL.!V;73It3YeMX%I3%1k1KR\::V:;U2?I'PV"^8f!d+nhCgIS'0s?jCc-_Q5H]g,Hs/g3S5#JlhuUh!)pE.t
%3,k&t9(0%#-EGuY(\1sCJRa:%H3dKRZ,!n\1spQZ,>\oU^q&"sbip9Ih8KHY3Wq,I0GZXm3GCa`^c<l?Q*Sj:`r\p0VI_`+&lBaU
%^bH"4qF^K#$f&+_o,0[F\rR#4]qP&^)nNX`i!p\e5JUCZZjf0k=Pujl])Pl?\Y35^""+]R&IWDmk[Z[B!+USL2KU*jV0e"%DS;_O
%ko74G=PsZ.\hLp%i3WqVTNL,G)nQ&O@(Dt8L'&e8V/GL+V@?g)?g1JbL+[&kd&$B"/u:4B.FX#(V/PQqqD+BuDWj9YY1nCR)o3JC
%[-ZrD&<=G#>$.ltQ%e==\:.V2qKBTdE4u9kC[lL^CqDTt&&5R\ekR]NRs[1#'<Edskn(&S*3@CX`r%VRGX47p+0RVCn:GNj5$i0e
%i"^;TD6kd#TA)!A+S'[S6VM`Zm3C48?ftg6+)NT`SVGiZ%m_Qj4`)`FC,h&o6]F]"5J>?;HAS*86u3KbHF?nYr-7\S@9p7([XNO.
%3U,LsoipW4K9KX&!(4`kql1<NlN=QK?c)ptPsiE9Naeb_S`jSfAC?*o.XkjAX>Ja4=d]?FN\.RGE`4FpfRh(gJXt]RERTdQi:f,\
%_9BAk';h5ldk9$BZK]VWFCt[lZ1/e$[]'N.Lg>L0VBV]F.romF)tOb38M5n<j05r:ml$:*]<!u71i$0*l>)LqF[@IrMJRWsT3Ml0
%THVI4-WXmTl..^8\(USsje=oXpQ#\Cn4U'>7dO1]79Ar/?R@ke^;*k.JR:-#<sI5+FX4'k^CpMI;`cXN')7`-:2ecKn1/;P:R'^5
%q5_XtK!u'SM9(.i-%=4W4],aNO9j\k\0m1#;=*51"SY<H4kNK$_*(p.=Q_Ag=k0b%>empd9=u-lUQ"a+^L)>Jl[`^/QM<=QD.e,4
%-0^?YGQ[/HK-LhqL>2=&V(o\+90@'BCrZ66/FaB_V[YhmV[sC(To21Soo*<acS<*-q.C'e3An=;2W3^Xq)Mre*A.KgfZa2(o8Or7
%iI$1dpZC._5@."<BQ0M:Y0p'lcPGK^.kN#a['k+@$=+HBb-_QIBu/%l)Q?'EJ%d_W\1H#^3YOLnB0h?(JJ*X7rjAa]I0qG,gK6;#
%Rk:Q]JZX=<lXGfCKjF%>f%J"SAoD[uMMh+G9LTa`la,25.N=KhCBEA@dK1=4lSBW\hCb'&s0D5."cps#kP_3^M;EAM`StVmTTD08
%`r*\iL0PUN?6Ggi@t(*k9b%]Q=1c%TYH[$TiOV!-5QDQK?W;bb)9HboF(K0:!"SmPl/s6f+X0NtebuQ^NJ`OTF`m-I]QQ-<TsO2(
%KZhH]b1fp<UL%r<M2le'.koJZ($aW=\iI95NKls\J_8U*CDa;?=B@-`=;;@N^lhFnah"Psfte;`hFco,[=bPA'"nrQS.b8kM:5?3
%b>#i@1ELMoNK".GrS!kFb&faYXg@%;Q/$-bm[8WAo"gs=$C@7uNAO](e/U^7a1SauWnZlkkBhp04nqbA2tu1\hUj0qe2F^9-I"_G
%k&paHs,`/7jF;@G`tsreWSG3T+"0Ea7`)d(!G2>=lEc[DS]I>Fh/-a(CsjM1X`RY$gqL*potOd-,hO4VfFa1C+Dd-0eCho/T5PG:
%DeG5JT'm7'7@(NN(Or!hqc'kC1f:XVSb4!`)77mJ0!Qhs/Nr>[cjd0<DG"]Va:Mb9];[g#^e<H(S+JVC2WY"+"$c6Ehk@Z=a!Dp`
%n>u;>ZaGD-o`K$ONut"RljX+*]"E2hT2JA5hMOI>H9IU&W^s2I`)d\"A#daZYM$oX>8aiXBo"%=j!]ml5<qbIcgBLb@NZi%UF-L%
%j@fZCWpOA5mHco)cb:kZSr@'^gG+RF>\"WY[YMs-QXR"/kP30&NGh5)KJMZW$cT0Qio;i#=aAaC]m-\i8R-M"k>Rt[p2[K3;:I^8
%3hGH@eP`.gO%"93>%=OhF1"R$"4lfRh[S:_XM2Y;6fsk?q>HI!?7gQTqkIN#1RI5l4mDCu(ES9e[e-U8nIj,="/TA,Lfa#JJ^^f'
%`(Oc]]:rZG"B?g+:r6<aR+i\G(NLf81#eJ=>1DSG,=$P3)'Jlm7D+<.ouoHC71f=L#2?3KgAG5&TfKN]VtDnn.T@a>ICR!A^"lS=
%WcOCbWJA>\20OFr"!hC9T`VOTp/5>en8k#Lmaa<+^?b]o+=d'r'd/)cBs"'UEZ<]$BgJsAa1uXg<d-N-.6U^olWV<iG2\C]@Kt@i
%F#lV;)DGsI$X!&]J9'.kloVku)Z)Hdp]TkCi?>sNX\V*lP3AGYYM.O)iJZ9Q_Xk*&bSj>E^8m43I$a6cjtRg^V/U>4VYA$RZ2>&`
%:X>+Ynd>S_JlZ(Dc7^pD7^8ae/K[/Jde,@m*jc6WY`pj#NL;+U'g$47%a3BZj[SHGH"$X9@r:mZG$(o,0%pbEj/*a]p$u,mqK('Z
%Tsc_7PP\T#PT2Re'.2>b`O:\SOTqhV^t>]p#i3]NUda(cm0(G)Zq/q2-7p9id..SmW'7s^`rkf(AWV@W59VVIf32'[bUb>86pYcr
%8.Y"'?9R:pkZT3ZP!!n'Y2t=#FskPU':BS4bE-IE'(InT"subc5?1fqBl=T$Se"8R<`1?fq:4qYC)UuN?J8WWin3o4&/6(IhG)7(
%Kf"jd[>D3nO9.r;PkkVf,ZMf9`j=-9U3Pi[qm4A_D76*^+uKgIBJV_EF=$^Gi_#RXY5<XFFZ('bOe$*tqlJ$4#?*Kk.%_^$b.s9<
%c>T!>@'p1l_'tQ1]lZ3[V!I@<?o:bb8-S@6h2.!PfMN/_"4aIShqaZ:<kJYreISi.5O)T.GH?CYD$C3a^V([A6pfkkR:?MV#)d`?
%>n[("\BN:n/!<Su+'@lW@l9lEkH7Jjf`U/=a+h4X\SHU35+YT_Zf:`L-!$Nq&o#WgOh&D+mM<:Cf=C'T\uAF*E2\/pHC760#$Vk0
%4MTXf>lLnBm22RWcsdd28[P1CQT7q:@$%p7RX=^5ibVrp(T>&Ye@VM[NDC)SjB5bcXWkl91RNT>5uOiZZV,6]?I6r)Efi4S7^a#M
%EA5?#-R0[*?3F!k!SFJBTTq#NWm*5A9jsXAdUO!F$nED!CoHi\(@&#8Kh8`W.u_L^(O;\=X_&V)(F9;]o=+"?a,5S6FO9XRa^ZKp
%hK:<LmWg?<Rl!%(D]Xfn\#F1Eh`OrGGnnl8$X&bc9g%"1I?rfr5c1`gP0RZTGH3NheMiPC]$>CUX)B&;BNe2,4C.JZL8?RG!l6p$
%7MeKHc6<8u4J/1Na(FTum=iFCP=a]E(9BBm_R]lDYdf187Rq6J/;6/ubBUrG,$9$]oB21_UT$9,QC>]2Q3gbGaPg4Vaj)B;R(>A;
%(2NQ[aC4fmG\R$B98f(?^d^7dp`<H)cqWD$X:-R0kb`8M<X';)dL5]B`Cd)5>.GUsZ,rr`8pDAVr;*0P?H=pik'`@,Dk>SVpq4!a
%(8dX']o2I;\or;S:i]3q6`F7Mk_ASU0_bd+1@ApQm,AJ.6DN.HA85^Roi@)q9s+p1qrj\V01^"C+Sqk:ca0^_3UF`<.uu<7dhT7(
%n'8@>]6A_ZY1?5rlsf%\d=OG9;O-B4mdBVTM.8;Qi^e--aPb[CDGN<]rqajBPsX**%>D=X<%I,[m;q%!5:W_>/FFK8?;SpE$Tu0_
%aiP2^=UOu6kO0ZJQ)1hDT[Fq:_rLR#X^!tG$hg6aUklF><Z5Yt^=@ffSh>Hcf,q%8X7r7H)=l@`ACM.LVo64Cka6+cH2g5&=s_9i
%m4P)Zhrfl+/jFuEH2]C63^,ARI8l8d]#e3?/9'ZV8hEVHf_)KjR4th]j2O`hP%9d-H5+W[R:'U!<]M%LeW+#l;^4C^@3OCT^sM\0
%QJ-7C7cK<ok0tpaEHd3q5Q#'RDB<*_;#Lr>J8iaDW44bihFHuD*ED5[@/C83dF:Im=^Ne\'aYqBG<i[1*^2K%=HhsV?<gc$?a/44
%fILNA+-;V(o&eoqh8@-UUCc.KBC`qhi4591s)rAZVVVhgVpO`W?#o#$gf@7qah6oplf5Si'I?K>5p,!LTLeEW:\sjrT\)$R,X]ok
%dHZ:N4eS:\Lub+n)7g]E8D\W[jmCaW9)lMs#IC,+cC,9N&S*RLebRHfYF5uHf#a?5i*&+$$qTuP9@WShh%=qhqmdEk5*25[n?rsR
%%%LqKM7k5&NbB:?2>WV=@T;?9(',-Jl"^ZcXXq\t[;kAlSq,6Z3pmVlY>p&<*%Zrb39sLe<Of`OB14u7U]ZY<s2A6><kXIu+S;L6
%B4L5^nb1gAQJ&G&mU&Z39<J&77P)U"nKP?4b@;^P:#a*eB'7A7pBKLe+$LV;Q[.F0?7+h\394#EdNk..+]C@Do6!'5f.NL^-T=(g
%dUts_T7>':c(Nb/MR:]ll<.E@ENX*.i!STb]4:d"aP5pk5jH<aGjtS'Q;EWR7:N&J7F2$E;9W:VFd^DLptAE3/au\cI[0KN"5\Z5
%IW?<DG>d:%lUsJ*fu<1MRcNs=7oh;g'LQba&VbG7MQZY]X+bIuFd0%=WugHQjMF-a[gU4tLK/A,XL4C)VCH=o*C)!AAPUc)m%PCM
%9=J&a-+(e)W#T7g/6\5i+#RWe-F$rs4^r;o3iqfFQ_qmdVoQ2X9)%j/pinRnjm$D;5`<r03r_p,7'PMJLA,pFMM`6Qr(B@-JAqIj
%_QHsoF-?%V:J*pi<AQ!#oNDX6anqblr^@0J)#rSkWr^5Ig@P.<E85Mb;,T0]=qB"0Hu"N0d)CtjT)Wpq"7(:f#?'2O%1R,PY]AWE
%i8\90juH7A"o<AGJY\lIR*RNm/%.:VJOHrJI&/=A\1g!fFiNRNTj-*U)5u^`Y#VK3E=.W&'j2OuB9QiC';a1LiR7\m2e9d+k'!f>
%[s5JafituCqm8N`YuZ;1q"<n8)i/,[pWg[q[n1LRC#kdlp?2,I)+?Tu<B51>8u!9&DPCj.Teq`tTEcLF=1P2-a6aRC'2jDSZ2hAc
%dE6X+@ru'EEKr?F7L_,a0+lnS;g5^3mY`_+Cu3i7$`2^W<'q[l-<_/l&GJo>+Fc>(9CC"J.pXO,[&]UIFqS%84r]R8&V8VVE:Al9
%N/\Is_M,W*>O/4MB_u0OYp15r\d[<7*3fUL1f#ZC:=ND1P"WMq\lkkG]GPFj/Ahd*aNLRBP`?5.!H!W&&$EDJG!)0CGCKt9T.i:n
%=-%r[JDpIjULK>&Prn44R@Ff,fD=);VXjQ@($<f6E.:#2\B3SN#K20lHF0r6?'q5od-/G$r"?66j[lQLZQ#>I?"@_QR\k$S=nQEF
%Go781\CUNK80.\U>SW*bEH,EWGE&I*He4l;IG-mVW:1>D06f"GqfhGmkHN*EQeiX7'Z#)i@.C*3:QTX-=,@aN3T.PDq)Wjs3#MmN
%*u5qI_/`cR/k;1m->)1bZ9?1c/^:MXeZaP,[-1tMDX_P3m@M379KjE3iDkdk-9T<'FjJb&-pMfCk)N70)VIdu)BNg/me1:ES%GX-
%hI6%sEg>6h0'7MV7tPik,=rCZoCghcl&K/ljr3Psb&AEbYpN"F_I24#aV3Mi#HJ[UG8ao87A5XQ=9+i8J+YPG*rqi<?Ri9"5M*th
%O9G9Fh%-e0(GU-h*D*bpU;+PHCHP?8Z%:$J-[5=+#o(J+9cXM?LG#.Q7d4QCfBo[ok/=u00noH=+?NWeVtI.lFT>&OFLZj$@r6C<
%]H?_BaQ$HniaC.RDC]7]Q=G]pAYth3J3ps=bFWXQ1sbCp0TnMD)e0pqCVlZeE!t:O`ngd#XZTgb2eOmodm-5kb'er+=KOn]?sEEV
%*5tKVbi:5.7E=CJCMit7rr:DCP.AKV"]f.=Pnl9[eL6)PCH8P8&*BS9QYg7Bi'RFU\856U<jp!;XHbCSXR",N*uFYr:m]4n=:4<)
%,Ij@!Qf&ljUN:fo$D2"9ihmBL>de-K6ZBtFf'L@0^XpKMn]uIiF`I@S,\,L(<cFj?IlUfc:#1=\KX>sZ#-T;QC`!sS\o%TkO'dC;
%+=;l%nALhaIMcp-Mm\/H(QAXIAaB:"`Ir^jBY&"6iL'=JNUE:6VZe6'?L9:F0oaXU\jg2BX[](N3eOg)=`.H3bekudWRd!"g/sO4
%I!Z1Q@@nO_JPZ9N)'KR[7V6ADeo$g@]KN1O]%id`f%CK;5'V8bq-[V)V_:?I]pi.[n(VXpS78,q)HM.jU1>]$SI?<a5CQ)N&I)U`
%EgM0Alpqou5/JM1%K+q[(oAiM=j/NM%$s0%mtkeJn8XC%0#*4^n?ER*cGXUpigE8)bcg]c\g^Y?gm1+a(MX!U]l)fm[^"Y>:qBKb
%bei0&ROGKKQk/F70q7_D4>cu<kO=M]!guq7bZoNT]g*pa'AkDi,"7qQl&<G&>o(M7DYf;*flaCHYD&=OBhG<hAhL*AgMDU\;]mm$
%/3RT?!\X.oYF1UDfd?"\\W1,u<6"-oSiI+$)W'h7T"K5WY<_8of<"Z0nSM\q9@be3I!Q@[M!@2G,p#L#KSpA@aFe&T<(/"TCac@`
%LdF;-9*J&VPnM&qEg.P'?JgR%-&N$o[;qL7OV"K%[u7h(O=RmCCfXMS85p)qp3](u*THVU=>HjUV5'u@;@FKf^rPA#<ATdU+ELCG
%-Z%<[oqNq]eG)5e)Cpb+BHjBg;S".mkL<?Hp?T&eQKStu9#s-W0OGKYOkLP.G#;s8&!u?@MKZ--gPoW<1W@Xa%Cg]XQN\1>9pEC<
%P(4/u&5/8,oD\M/WjfDcI"rFqp1r7Ue4n@9oIZ!Q$d)jX%hY5$r,IsoNg5C;k.N++-W)p1TUKiPIgN=C2XWCL02`OGR2+gjN!`T6
%90CFQkVB7/l6FD)oTaepkot)5b3I+1MIn!482H81?^7j)cHkgMIUaML9hUQ9\_2T)_qE,ZXSQA)A6oDri99UTX5?r.d1>rloM&?a
%Yg)eNa3o+D0fp8hbc]q$UEAQk*Lj`$<[jXJ((^14.Jp@g_p;EZ@?8f;R@&#-+[UW%MXXSgQ::LmF`l5P;2qc:U'<sa=4u90:sMf!
%iV*V*V(e81PL?4UkK'fBI^lfEnW+ACpR\liGtB&pPhOoS?Z=D-Q*Zl5m@<c(@H&thDiBbT=Q0gDES`?;GS<WUYBnfF]5mG(5.<7"
%T3iu7<?+<N_3sfE&X1uDS?aQgKrZ2"hYESArjm1WLO@R[H\<#Qfh[0lG'd&JO5D!]lEB5]pROg`(Ar,cRlg#-*tR*R_RoSbo66E9
%BJJ3r,-81^^.c^DQMCiNIi$:Qgh#>.&U[f>PfJq#K6'fS&:D\c`m4Ab7p*=)V^?kn6o,2sgq7puHGfPVQn*WKAE7LG-VGWY`E_k-
%*>rS*<JUqYE4k[?&g7-=)BGIZW;U&KS(&X06+1dH@)=f/;V/HcP$Vi]Z^'7ubQDUQQHLTi#]G2Erd&caerB-U67-Q-AR6l-(#To^
%'I(Pa4QM?r23pnpYbO$-[d:p3"gQPf!d?&3"+R8Tp\O4@C&@/8c&_aq@d^Gagg??3.V&AMQOh88='$KIrp-ESE:J6uFoO3R2,pQ(
%=B\u>gtL;t_rVUs5_?@],Vp&P??1.249&Dk>-)"bNSB`mHa@@mC[5pl.8T'mQ.b+oAUKR"Nk*o4iR'0aNWR]8r47hR`NWc=D=SsJ
%1HG9FG4i6;=ta]0HmUI-Xt[eEU&+63QXuMdRh^-^'U\@X7uO9Lr.Dbu0OKL:(F:@W)gQ$:[@XLk"=24EA&J,1/I*Zo$&=N91/RVC
%8-uIT^*\LeOK>n[L\]n,e\2`lguRqu:G!P[V.aC9s5ap]h73&acl-;@M`3S9KsoB0L,JbmA4#%)-`-Ts*F=g,/kEAQI@ZhBj]Et2
%W)>`P&dOqt(Nn;0X_9qgeEl)9o5ASnNd&"o]!s[n5rpgE*kc%1a5Y@Hbilbt0$h@@RF-GNPA*&:=/OJplGW'ecsjFCbU/2l8LGs6
%AqWna53<%%.K4eODG>+-9p68=Xd4d:I6]--q=PO-8`?h\#_tSC\UGk/NO';[R#N^B+EsK8H"BlO(\Y!UD`(qN2'WULVRZGp3-Eka
%gB[Qjc:cV)0^_h+);BC(MU](&r_5+e,h.X?ig1;l;i5Hda[d&EM_[/b^^G7I-_t>naH#ARYN%dO?8f"^a!FAakQq;)bP8b+noIQ&
%kcKG^Vdi7'^a+9RGate$JQCL+*`pp^!F].6hSQWh9)*($M56`.T6+u80!qe<\Wt6aL1$5Z_7CW"Y<h3HJpGNPJslEF8j=kGXF;ae
%j#Fd!m@R)'@;L9DkW-!\(\dSr4Bp$VFKL$-p\re]^1Nc%&SBR+[KQ_@a+)r_`pjtbYqias*Z=-.V!WnPXgl>]nYP4PeJ0TM=G:-\
%AHSF2pu+/hR88Fo#amaiB0e>D*1[s2L$elBrq(LtbNXu4%hn+NHXD>[3Xtk8Q"*M1`#W].=r&K8/GL)&IUT,IquJJD@Jk\N]\eVh
%VLRuOR3!4+A-MGaq;(UQKk:V(HLFAtmeCe'5!#*t`*+cHHJ9Qe+1q[G_kYjNP,FM4da=8,Y,4%p@O%e(3DIE2%6_UIG0L%c*?X'!
%YGVc:)PC39#GX](\**@gS2qchUW\-SjR;0Z0=Eg%ik2$<+I9t`H+D2@WE8mNne:UbhqG`%L"F8-E&QOc$r!FjE-sP#k4IK$7W=GS
%&9ietCE,P3[j.i'9(O1hh/jQ*%*-IgpCe\Q&[?&?5PI1#n&[L$%3i&j4($_n>%0;US@%(\KJM-Hl8^%HcJb+gWO9B&ZP.-N0\dFT
%[M/T2cCb5oG=GpiRthele&/A8IiWtqa7O4[:[-R%>()el+J\$E#ZZn*!%e=q$DXZD\@p0Wm_0%2A:4*t'bNlOdU5L4\Ald6>]@[C
%6u;[0r),1?pDs+A<$i*JXIh?1H8C,(R:GPeo-J6E$h9_?&/>U#/1+e(@P%2iL*<RarAUTQ)3;G`4,DXG(h%Lq!dF8=XPl>_UW/&J
%'-#]eb#+7JI:Jl_Rnmj9:8d:W$'U#Cagpi@QIKdKWlec;Cm9Xd+P\kup+.]L#9T<-og%F=&c5m*H9=Dic4g4N47-ueR,La?.$e4M
%qW^%i^%C,bhNfe/O]/Gm+eiZBkTaP(6oTIX!MXBFlAf'kA$e=T&U'BSXfEunEXV)!*UemuY=n!s1',4GRTZK%jSM*TEJ;%JAC'$/
%10U'42LCas96lB4c"IL?SoI,$0SJ9:)b4nd?X1K2LDO2X^I`bcX73S<2,()j`/gOE?Jrl9SM@5_GZKuTR0lu]UeL)8H(f4F4VRYT
%&N;5c[m%gKJbYETc8c.[$YXE,'DIK&mMBm0Q)/9G89[RMG@fSMdi\>e#,D8iJVDuVN@Y;"P>[s[1jZ<2pNf]Rp)+L4FWafcVj4+-
%gZi?DJ$<?q7\1Kn:_uGdG$L8<4a`nsJ[>A[<P1F3S_rV,?(jRPgS?*@7SOi5d\B"nUjdf-lI#Yp$D7o20<^Gd`'%89](p?\EVA9k
%0IJb(ritB'r:IlM`e,H&](![-kf.o9Y6er,`:?87kX^,"WBS#FIU'P`GdotbqX:+,JfSZFm'"upVM7M)'50Nl1]_*l:7sWFPUA?F
%$'#^Q;JW4g*s_hfrUie_Oua/0Nqf]L$>K`A4,?\[f<`)iebdOjs$?])WdK&:Gku=f!3FgHbQQ;l2h"t`^O?7N5=<`Ck0VL7CZmMY
%^[9uunGg\e?f'-tId#^2m]ZTE?_R>.gVI!/"uF%IK"(3cJ,:k2\*q1^q_"DJn%sPN/pR+rR"'>1=.$+nmO1??;eHQuEA%QG&6dqP
%<VAT-j":q#Feg6t5TbFVg]K#,3&bmZ.m$MALV1DE!jOcTeQ5e[J:\;KjSnue"34U@5uRkP'3a\%,9);ZQ@?DLPBI0^7L4'`/pt[0
%diIu#8:A':RZZHKLGU60kmhDsRaU#MC3N8CHU9]E,Jq;/p8V1(6_!d&B>+FN!-FU`^^57kZ0r'.;e#nc[hR2L2<K)U@9>mVkTIZG
%4NCsjd!p'eFC=7$&JF$q3?g2.:>,C#9J\Z1Y&DuM#0-tU/7dkhF+O[<JIbpqgC50u=V-lN2_\)t&D89l(]eVB>f<gCKk2;0J_?fO
%:lfp1\sXVP7[9Jg#W0l%dibG=!e>>rc(/jH`bU?q>!E-o5+F$;bC%L,[YV_1@WJ%Dj@:hGVTk@c/hd*,^K4TbmKN`YfGJUIU8]AF
%ZDm"t`S0,cD0IG,&6EkaB`%%2-dRp9=$T;X!5(DO]lBt_cn3..FbdKQbKL!u6a%bSI=PF2fAR>"!iI''6eaD$H%+GQ?/*./6"GcC
%TEYH%bJOQ".bKBD_7S8=.KDZ1LD@5F6W]YDAghgDp>G_;-[2[EB+E\4EYsef[[=Wt&am2MhckYVTnn4(@[12q?[gRs#A`DQH:^JT
%'CTT9qKNuH[@<BLA7J[@<F[[Dk3hqM]6cKcrp,0KgH7#C47n>6"EFjXm4+c_5W+6@4OG"k>7`BHdFcAW.%hSrm',ioBLgor(YUs:
%([WY>&cqC*(Y[.GD#\N`qa`QRGX477->mlPJm@5dJ=:/HC?:+[RsWr+'L?8bpfmrTRu1@)?==3!lo:$YT7g$jH<@bH*kK@US=qoO
%fE:_s(i?N`V!3n4_mM'td6W@GY"t%Z^m0l[!Sf]bfO[84C"'NQ5mG5`nr*uPG=^VC]k&)W]<9I06dkBHnV1*N]0tH49Z!;"@BR>]
%j7#H@QXIq4-<`pU=KJKoGm%uP0XrHs"\^W0YQC1Q,)Lgi/dlnWYQr>PmTLS2ltmO]E:m<KO!)LV_;,*MPM+0t1LRg!WX'eqU^&bR
%?C1pH:G<GONtR$T7K_,ao\^IaVE%6qbX:rV[i7GFq498%%Ksf32@\:G*;p3Vc>:?9G`HGF#V>a;D0ZDB=13hSCBlDP*AWdV%3Vd+
%5K"PS<.WAZWtb]S8)DdS+?2dpHOOE/S?hH(EJdS,M!U6Fe3I1DHr-T$I(Re$K[>?t@&d?dG_N/3NcJ!j$c`Ub>Z>(S*>!P*kK?<E
%CC4H.OKU-ahaCZkVOeOD7J30WL`^P`l3B`T1((MH96Uk".k!C9e6P#/_oNio!oX[AdpbT_hV?a!5fL\5m$PChN-7O5n%?3O`/Q:.
%ROu$E%<T`4Ah_0Z&?]I0d?Hs6DBooRCs-H'"F4S2L;(WSZPi1-.u$Y`A<6AU#3$6"nNi-AA/a>5boS0a*n19jc(`$)<)%Fugc9Jm
%*U3^Y2c%M@gk0J&d?+L-"?7MUDCOfi)?[YhN<',KG)4G?+*K.O!h&)7?<('C']>Mc&2m/EH?ot=iD#;K!L/Rp/'j0b].MZ1K@Ti7
%["1n*QdP,-!Jh7Ged.(`5>Y3p_dYB*dXU-X3=HdM92]ARi.g0=fsQ(+)8'R>E<B2DOZh-F)@/D88YL\BmOl[lArdRV%n6Y"c(`$)
%<)%Fu>7eBM*:D7X@Y$,fP7@E>Vr7]4Th$q)\Krn9T1PT9-aZ+jfWf\Jb:C!XP'OIIdU0K;+#[D7Tt($Y>*`F*#26;5^s!oCmg$S:
%\U?R38Od+ho-+I^..C,_O.4BVYu)]E&Oc=`%r*6biE>rK7Kn8AB5.&f+]=bl"&mI=_(/JZF-P)^FMWJHU6`S#agj2=@r-.!_hJN*
%GQU#QF@'a/LqSHI/6'W!gVEEm<$9g7/;YIi7<O9LanA%-"RZ;@>.dJCPE!*Qb/V/b*HQE=Wgt#>i!KV,J8;%V^gOi],$[%t,nP>X
%>O)gZi23qf!+fYXB1C\4d^6?ap.W,9gVHf6`$3g>L%7RJnF?U/f=#N9Z7BH8f*VN[U4gcn"Mp9'Pa'(VC,Fs:3TNqCTSakd6[UM<
%_0tZ+7'A<g'B"1KLCuool>c'#HL)PM@YXGa_H#N@T&A^]Y@1o&;AVurTBCo3+Tuc)&Qn!_MTq.uQnRUaqgmQ:m=%^bgO9NGQ':`)
%k\d27@=#=;R\tMZAcR&;>HmKS1<$[U18&r]J1NsYQ>[H+A7J[@PDs(>D$=J?`a8@I[+B!lq<#c$!7:k@&F21^Xu4u.8=e[X37&_%
%os"NJMXpkdlVp07AqHG1gi@'3-DCbi\tc/[$l?efLGU&7RXo*p-6]20csotuU2_\Oak8+S#4Qaf2$;8YUi*s`qS$'BcO':16TAfL
%3Ke5PLu"X8DP2"-0tU)h!G+h=\Ol.G\^L2h,nRKfr9'QtVu][PjoQCQT/'pEmP#+Jl9U%4o25AhgG_OJlqUZ.,g\.G\OU-@#^nmO
%]5S8]G;4c:1QDqS)FER0=9oFkUSo'7=nlkC<#Qs-]F_rc"N!(V!C!GZJQuo1fBc@$kWq?ch+S>cUIrg/)4$NJL]RPi@Y<j#%>HYE
%\ZP6k*a1qm4t"7sSNm/[6;3E5=fb9<'gs(gQE.ulfI&r8"H[m7oF56YKI7_n!Z5(611T`i#POuVl%Uju6_Ro*QfcF>fT+Im+^K5c
%.4!lo`i]:g)ojW;$HQ\9?']mUD%0.J8Ps<NRu5j?%>;EUFOg()+ke('VAEciaKU@1!8/qd.]se-"b4&;2_f$&m#W:<5j68Npn1([
%@tF'-%OHXse&0V9o[#Imj:!>e#CQee6o)gk2J/J9.k9V/,l4/j_o4Y//\+K(J?2J8/:>*s:$]/uCjI7k<Zm[R0LX(s((:;dK`[9=
%89*"3!(LgZB\^%$e8.2Y"GrHK*%bVYRN^4f@]2+Op.,^/+C6BY5,_<Z/`Y&0H^#(f:_-5Ydt?8NP&llK'"W%=1'79U*-"mW5!ULa
%"`sp1":3pl@#59G%u!=aSp+F2PW3l5d[]!m/T-2LeX`k5TN^cE0LQ\7d>^E.$<d!YOI'f'e[H\QS*eAS?unMbXoOE9@0FEU'uKM#
%:95=PU"k[%dLb(V4fEq9$/gIH)5t2gi1c)fl;9n35s6pX9FkI)9$U<%&+o]qF<Yh&-9),43#"b5F<X.-JfVrYqE,>S8jpHW0feBN
%4^ClZCDNlcWBBZ`MN09r5kH)""(:5FCij+nBjqi//FYN?!*:kR()-mc-T[%fJSd;tX#]ZS':"<ncKIP'FG4ba5_\4$a3>YOKHAVF
%e'0ugM_QYPUX=p_qmKn8@0_V1]#)mG_^'F?8YZl8H"&jS'YNnQ?pd.XCjQ`eo\s$^MS6Y^\A:0AY'rtX*l/hi^*_Y?(X<ja_]8aQ
%6\D!4OP>rVSt\]Y>HQ83cpRje;M&\O0,<(W9dk/=]!"qG^nUp%=>XQFVJ0@oNJ2Ff$(!3>rC1Y8*s=Dq6iE!PM,>e<4fP#C0;fk6
%hp,Hk:Rno`Tlo59+NiV"U.,O3(L5%I\0[Q@JEW79=X2qqA7K_?6XWi&'6C+&:960VYuuk0h9,ES=k;C\hpq%,70=CrNOAoj,q]1]
%Q::r^GF:5iG77;:bGEbL[V#]\7pRj-+K4<cM^MbrAi%(oJbWqIqRc*R*n.otm(5GF-4tM=Yi7o9Fa"0XO3']P7a\.LSu0V$NJ`XS
%#_<M*THT?U$87FD%.-$6Q+:-+W<<GiO3iV>(J6'n!"9u-L7.a)%U*X1gMW#.\\I&0,&Y<g?1!EJ@?(etB$n-9[R"Muej/p#Y8.tK
%iV2,7d+uB!f"T$>&4tM92@j1Ujg!sXQ[ucS/3hQ@>)j`>%Ou[=96eq$l#Y3o'g(qo*E>'(0K3rV&/Z0\Zj#laI"=*Uq&1(dgpZ8=
%_NC-&UOgm:PDC)KmeG'IF<YaQ3=:I+FXJ,4[SVlB%dGZkTS=V?BFB`?<X:)G+#YI4SN@L@[P1>fN43R2DkJ'S0NJcuLbon8=nHP1
%:Caf^][-WoatA%R#nQh\Ge-g1B#(g/NHn.F,lFgqTTs,ec(9dcMf;M!I=Y50,hNbGLh-.@5g%M.$0E<h/0HnY:f?s*^m\p>Z7RhH
%6/^*j+h:m)^',8lKHt#K.7S_)DADRGkCj1ol:pMEE=9=%XB`[Z.).M<7)(-S)]]MCNWM%\V#tB66lO*fi6p@;m^,tjFU]o?]me/p
%P)*MjnNL$fqIL42Yqc*>qjlIgiHMDYSUIh`FJ\'4GW,&-+Y[XRY'anrTi#@l"]=<?:kM8t4`hSN207.[jsDA7635<*D[0-`R4u[:
%dHNMGO63S[p+BC0_5?rE,9gnX?`8&uHEH2jg!Oe+[h7bA5rZpEJ9W@3TaH$t6#g7lGi(K\;!sJPLb8t!c-41P5-_B]\tO"85hO+c
%TIlFIf=9kh1DJh3:Cp(hrJi*hLBei$LeKBLp$dV;^>HJ<&q8GIfNjS;FRA/a8jP`$P*S0phN:bbkZC?DTUu8QM:j)7P)tHMQTVk8
%Kb:d)p)+9#m.TB:@u#454$g,)b42+42<l>1ZR:;H7G%VrW'F`E3X=7BY"t*<<:UjT&7SMq.^n]jC_hm>2?T5!a;uXG.tKrLJWgt/
%:atZNor&uLigLP`MjinHCK/D9.]sUq]Y):L3=["'FU?+S0MU8[[_PgrdR,&PFF\j50Ittm_mf7KF5J/eeBJicd!jSdgD9\p^(KMM
%M]r4W+C^#@dgma@g.o'aCbNBaGt=&T7(NXbJa4/t3/B94nI/A/7.s/HM&PRa(-=j:'[pXKkYXVuK`@hb=O^"T?DC-<;/0ZY[*I<u
%V=+P%l8IL4%`r&R\qlf0J5kAWckaXfddsVY"Kc6u>&q'*p3amr(D`3<+U,dDjChT:B"5$M_*`7:XcM2qII;)4fWO^%iK.5L#M2jr
%Q3D2S%%YIeo2tEa+RaoYn/^Je9N8uD[PIc8JKsr'1=IWrXUHVT\_4i`$RA$j>4a-f#2'jH%_-a\`3?aj*76HN.&)'O^pYP7,"ju7
%CERXn%Y*NI*OuJ@`)%+KE"cRA-Ld].V%_+C#p3U:-M2J"gGfMSCGkISrDaN**2a?ZZ1qStV*Ug5.*u590E_\2$\a1Oe<%4,"Lo"4
%Fl-]Cd42q)JfBM&5]h`VBb3<C>DQIV_<&Y::NrZ9dXi]u'X^i6eqi<A;cXa9XQ1$Da<</Hiuj3F@"a[u_T8UJfZ^Y#UZ@mqU.g1(
%n:1mNZ/_O/7s'g_PnO?nr<2ot4%q2bj=8P$9lomQp"n4e#:Oi\&:nlEdeUb'd%]mmV`/^>+q%!3O-C^<;eXj-'3Z3S>lhfN%U?rZ
%7i5cDC:(.jpcHi@^nn*+#/UOP!H2C'`e[?*X#LRu"8mmMs#*S5;Fh%!HOpI.(Z_:n*`q"YeI#H"lZhXW/R;<0ZqZ/@=q!DQiO(DE
%SDH8Pjh&t4!eDNXM3l\2])!#kkKNN4)KJnMNiN<a6'hk_ducnJqj7q.?m)g,\8qa_8r*R=ZQ;pLc]uu\!T_30KEAR2\e-Co`S_H%
%#U6mUk;3`U0JKk8,EhNOkY=I?YD=0_DPdXk0f;[$K`pGA1""@3\n#UcgF&(TbfD7N226hH,(pFF1N!j-1+RN>8t8_r)4@;=!D4^3
%XTg*)NMe]"3Xo&8T;K'`H!b9`r^:M%5EH#lc0-h9<u/#)O>"l%kk<CV]i>SIcKcXK<nDctJ](sQ+38B_rIHeBhB+_?hOd?-pBQ_l
%f>Fl^o=2;[@-Q=9aJ8J7qI"g2\?J3%c.F+_kPPkG/q+=ZR"'>NEBr,,l$T;obRkEIUHj,5OM74TcCfe$.:#fIU`iXT9$Xq91SH%Q
%0PQ((mikZ*;Uu_D<5BI`8=LBoJou8MEZofbjJZ%aB]KM#dfbq*f)tH-o$q-j%?[Ro&UGUsVK)[8Pl_'n*`OC;o7^F9(g%pY_(ZTl
%%iS`g92EII=8]>#]amB>7Lg@4@1Va:=p/k3<4*q#]n<W8&G%W@:9_Qn,,g&=`rpR:Dae,39pd_fmD^4c0]h#QCPBR5irbTa76Vh\
%o=uqRA;d4*jJ\(GS(\KqPb^<'@3AWB'($DTN0"B5l%.lF5S@NuK6ZF<hCke6FZQW/#E]\[HBX.>![AEV`=qg4cU?,LU8:s&R%*9t
%Nu$2n0$oT9id.)&R'VFCa;gTfKnc(4#L@\ZOdU#*TL5cj7X*,K8B_Ro&59#?>.:$Wa3B3u^>'HKR5$`Dh:"poog)+Ud-cTs0=h-]
%<^+iP3qR:$_W(pQ_3-6+P1rbb'J%(,L@%=7LU>*8E=in?R=AJe8W%>1fkoV^dpe-!YMq6I3'oV1"ot]V'Ld8JgMf87]j`fKE[AO_
%kjOHK+O547bhPKs<nK#IX9qstCh[<G!kr1:I7JKBCs-c`*%0F,%Ll5gTgCYVCF&HDZstsK>Vt1O)JmV)7i$n]*B5gJ(^jcEq17%8
%KOrK=_NnI-<jD;,fZKU(K;3kW1_%U)Ho[]`&R;:9a$a`=kcq"nC+.J7.C9::FA5IEgfR*HCiFd`Xlel(";&R'\SF'fQLf4GbUq9b
%[!;]`e:+F<EE9[<=E*(MbGB:C\ADCD?.YJ8^dSKX(8BPL+;Z[+>%Q`[0<])eqQ.=:D?CQDPLD!.1(EK(R0Oa4RejXFef*8&T"`0k
%eemHJ=#]!C85Ye4D[\?8Z@bOG%[I9b1[:-?Gemi.4"r#l#6A=[F>m+F9r:!W-=81=?20PfW*5Ri<-O,i_Qp\uO/$ctiu>d@;PEK(
%+p0>aXrt0g[KU\AB_j/M4?`nua;:9@N#mOn\ep-Rh/SsLR^+aU`7G%0E%S.VjLZL<T-+\J#`SG]"@$@s%u3%7PG=>P?.B!"U<mPm
%!ic1Y$fo0A(V&u=_YekC\NU&ZlPsdn&6^G8N7T%9e4Qi>e>6IpeG:L-W+dEn![UrSObk1[':JWb)<581r^;[lP?&WKoH^uD7o-R4
%s%cV_+7=o3`d14jr$L[M1Eu4t&3t0n%Ge.#[*Ek8@*KCHM?F8"Y+UI^KG5_g:e"mSd3FPo_u-$DfRP4;<>JfKmsrYRZkWFM5U!FL
%#]=M&Pr\4#?"73!G]Q.6^b.MWl_e5E"]qXaGSh_S7gqM?LHJ<OZ&QU)YYmXu%[G!'g*4Tbh@c+E%]:]egD0H@Ad<:+hS^B0R*5ae
%:R`Q\\ah'/(p4s!M.)T3f#9LY78Y$eff@;LrF@OI__L1h!\jlb!-@0MkZs,*S'.XWA"Lt%e#'gk7El:lJP-G>+F&,UiUfK00.+bi
%q[Q_Y%RQO;a9JB5&lCGNMU?^@8')W&T-2-d)_GLc4U-S^"tVl?5($5Knmb?QPMCPTr`d%tVY(Nq>9#1;!N$s?*(D"HQo]is8ckFJ
%"I%pISV+D+`Y6T.Gf$!TFp[9@-%5i6>J-r7-.7$JEbe0)*SA4G'dfDZQnIN9U%Af2FH2cNI*Z[KJAU5QL/FA,`Q#h5n4"'c0c:XD
%eX.3!(&kNtZc1WG=sAaiTHNNW][02!ct\9$@A9`<M)<e.TO^\;mO[*e1_`V,SnPco<HtAeG!`j@jK+cj)<kN9BsB7+$b`mK,\fF!
%_WtQ[moiE$*/44u.AD2%Xdcd\;5b#b\8F2B!F\1?Ihad7Ta[i,W^gOYDBeKa)d8W4"#s(c-g5"&ha9=4^DpX)@*I4mk$'*^1+<;9
%_?`57@%[UU^,80+)5B$DFP;7n[5cOIW%1R4i)3$imRdh_@)'Y4R>%e%>S'':K_\4[o]elr#J(7>+(TPug0bm>1]$[a4+R14dF^%K
%\Kq$.9c_eu=mR^N2,^[o_2Mg`BI[(O3a:e_JaQ)3',qS.,=H05]cqu\>RL+\W34>ZE<$2I/@Hb*8;S:f#c0+`d?:/?N?soZ2,\4a
%H;eU27di%9-Afj&2<hZ/9CN^bOb:-ai>cCXa`l!WojA]m=HmC+lM$WE(opWQRTqpe2ch)nc@5]..U4pYBE..0kj8<JiT9Ffl4JI`
%\p:l5L7YQ&T"dMf#9il(IUI9)^(%::rrK(f/;+~>
%AI9_PrivateDataEnd
