%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: subs_p8f5a.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Forcey,Stefan A
%%CreationDate: 9/28/2016
%%BoundingBox: 0 0 130 142
%%HiResBoundingBox: 0 0 129.5069 141.6915
%%CropBox: 0 0 129.5069 141.6915
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.351735, 2008/07/22-18:11:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:CreateDate>2016-09-28T17:38:05-04:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-09-28T17:38:06-04:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-09-28T17:38:06-04:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>236</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADsAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqgdW1zSdIt/rGo3KW0RPFS1SSetFVasT8hlWXPDGLkacjT6XJmlwwjxFBnXNTuLyW20/S5GhE&#xA;Jki1Gdljt2do+cQUVLspJAag2yrx5SNRjtXM8uWzf+VxxiJTmLv6RvLnR8h+lRbS/Nl7ZIl7qsdh&#xA;ceoxl/R8fJWjIHFQ01WUqa7jInFmlH1S4T/R/azGfTY5kxgZxr+M9f8ANREnlezlvLi6nuruY3Mb&#xA;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&#xA;gAAoOulIyNnmV2FDsVdirsVdirsVdirsVf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:D27F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:15+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T16:23:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F1174072068118D4ED246B3ADB1C6</stEvt:instanceID>
                  <stEvt:when>2008-05-15T17:10:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EF7F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T22:53:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F07F117407206811A46CA4519D24356B</stEvt:instanceID>
                  <stEvt:when>2008-05-15T23:07:07-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:35:43-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T10:40:59-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:26:55-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FB7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:29:20-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FD7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:30:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T11:31:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B233668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:23:46-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B333668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:27:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B433668C16206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T13:46:13-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:47:57-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:51:06-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F11740720681197C1BF14D1759E83</stEvt:instanceID>
                  <stEvt:when>2008-05-16T15:52:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FA7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T13:28:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FF7F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T16:23:53-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:07C3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T16:45:26-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F1174072068119098B097FDA39BEF</stEvt:instanceID>
                  <stEvt:when>2008-06-02T13:25:25-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T14:58:36-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:31:27-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0180117407206811834383CD3A8D2303</stEvt:instanceID>
                  <stEvt:when>2008-06-11T22:37:35-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811818C85DF6A1A75C3</stEvt:instanceID>
                  <stEvt:when>2008-06-27T14:40:42-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:572A10C19C85E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T12:58:18-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:582A10C19C85E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T13:00:43-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:592A10C19C85E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T15:36:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5A2A10C19C85E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T15:41:02-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5B2A10C19C85E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T15:43:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5C2A10C19C85E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T15:59:03-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BC52CC29B885E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T16:30:37-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C452CC29B885E61198ECBDBA923C7497</stEvt:instanceID>
                  <stEvt:when>2016-09-28T17:21:33-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:DE9281B2C385E611A8CBD98E22108186</stEvt:instanceID>
                  <stEvt:when>2016-09-28T17:38:06-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:C452CC29B885E61198ECBDBA923C7497</stRef:instanceID>
            <stRef:documentID>xmp.did:C452CC29B885E61198ECBDBA923C7497</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:DE9281B2C385E611A8CBD98E22108186</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:DE9281B2C385E611A8CBD98E22108186</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>134.500000</stDim:w>
            <stDim:h>147.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.07</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>times.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Red</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Yellow</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Green</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Cyan</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Blue</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>CMYK Magenta</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=15 M=100 Y=90 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>14.999998</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=90 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>84.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=80 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>80.000001</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=50 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=35 Y=85 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>35.000002</xmpG:magenta>
                           <xmpG:yellow>84.999996</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=5 M=0 Y=90 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>5.000001</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=20 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>19.999999</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=90 M=30 Y=95 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>90.000004</xmpG:cyan>
                           <xmpG:magenta>30.000001</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>30.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=0 Y=75 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=80 M=10 Y=45 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>80.000001</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>44.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=70 M=15 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>69.999999</xmpG:cyan>
                           <xmpG:magenta>14.999998</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=50 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=95 Y=5 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>94.999999</xmpG:magenta>
                           <xmpG:yellow>5.000001</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=100 Y=25 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>25.000000</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=75 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>75.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=100 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=100 Y=35 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>35.000002</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=10 M=100 Y=50 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>10.000002</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=95 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>94.999999</xmpG:magenta>
                           <xmpG:yellow>19.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=25 Y=40 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>25.000000</xmpG:magenta>
                           <xmpG:yellow>39.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=45 Y=50 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>44.999999</xmpG:magenta>
                           <xmpG:yellow>50.000000</xmpG:yellow>
                           <xmpG:black>5.000001</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=50 Y=60 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>60.000002</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=55 M=60 Y=65 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>55.000001</xmpG:cyan>
                           <xmpG:magenta>60.000002</xmpG:magenta>
                           <xmpG:yellow>64.999998</xmpG:yellow>
                           <xmpG:black>39.999998</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=25 M=40 Y=65 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>25.000000</xmpG:cyan>
                           <xmpG:magenta>39.999998</xmpG:magenta>
                           <xmpG:yellow>64.999998</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=30 M=50 Y=75 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>30.000001</xmpG:cyan>
                           <xmpG:magenta>50.000000</xmpG:magenta>
                           <xmpG:yellow>75.000000</xmpG:yellow>
                           <xmpG:black>10.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=35 M=60 Y=80 K=25</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>35.000002</xmpG:cyan>
                           <xmpG:magenta>60.000002</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>25.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=65 Y=90 K=35</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>64.999998</xmpG:magenta>
                           <xmpG:yellow>90.000004</xmpG:yellow>
                           <xmpG:black>35.000002</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=40 M=70 Y=100 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>39.999998</xmpG:cyan>
                           <xmpG:magenta>69.999999</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=50 M=70 Y=80 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>50.000000</xmpG:cyan>
                           <xmpG:magenta>69.999999</xmpG:magenta>
                           <xmpG:yellow>80.000001</xmpG:yellow>
                           <xmpG:black>69.999999</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>100.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>89.999402</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>79.998797</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>69.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>59.999102</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>50.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>39.999402</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>29.998803</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>19.999701</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>9.999102</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>4.998803</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Brights</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=100 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=75 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>75.000000</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=10 Y=95 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>94.999999</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=85 M=10 Y=100 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>84.999996</xmpG:cyan>
                           <xmpG:magenta>10.000002</xmpG:magenta>
                           <xmpG:yellow>100.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=100 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=60 M=90 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>60.000002</xmpG:cyan>
                           <xmpG:magenta>90.000004</xmpG:magenta>
                           <xmpG:yellow>0.003099</xmpG:yellow>
                           <xmpG:black>0.003099</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -141.691 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 141.691 li
129.507 141.691 li
129.507 0 li
cp
clp
[1 0 0 1 0 0 ]ct
43.1753 27.3353 mo
79.459 27.3353 li
79.459 26.4284 li
43.1753 26.4284 li
43.1753 27.3353 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 cmyk
f
79.0817 27.1334 mo
97.2233 54.3462 li
97.9779 53.8432 li
79.8363 26.6303 li
79.0817 27.1334 li
f
97.1471 54.0947 mo
97.1471 90.3779 li
98.054 90.3779 li
98.054 54.0947 li
97.1471 54.0947 li
f
97.2233 90.1264 mo
79.0817 117.339 li
79.8363 117.842 li
97.9779 90.6295 li
97.2233 90.1264 li
f
79.459 117.137 mo
43.1753 117.137 li
43.1753 118.044 li
79.459 118.044 li
79.459 117.137 li
f
43.5526 117.339 mo
25.4115 90.1264 li
24.6569 90.6295 li
42.798 117.842 li
43.5526 117.339 li
f
25.4876 90.3779 mo
25.4876 54.0947 li
24.5807 54.0947 li
24.5807 90.3779 li
25.4876 90.3779 li
f
25.4115 54.3462 mo
43.5526 27.1334 li
42.798 26.6303 li
24.6569 53.8432 li
25.4115 54.3462 li
f
79.0055 116.365 mo
78.0207 115.216 li
73.1737 103.098 li
73.9876 102.691 li
79.0055 115.236 li
79.0055 116.365 li
72.8357 102.254 mo
68.2668 90.8314 li
69.2436 90.8314 li
73.6496 101.847 li
72.8357 102.254 li
68.8808 89.9245 mo
67.904 89.9245 li
67.7712 89.5924 li
68.4372 88.8154 li
68.8808 89.9245 li
67.3911 88.6423 mo
61.3171 73.4573 li
61.5552 72.8622 li
62.1811 73.1752 li
68.0571 87.8653 li
67.3911 88.6423 li
61.0792 71.6102 mo
60.4531 71.2972 li
54.5772 56.6076 li
55.2432 55.8306 li
61.3171 71.0153 li
61.0792 71.6102 li
54.1971 55.6574 mo
53.7535 54.5482 li
54.7302 54.5482 li
54.8631 54.8804 li
54.1971 55.6574 li
54.3675 53.6413 mo
53.3907 53.6413 li
48.9847 42.6262 li
49.7987 42.2192 li
54.3675 53.6413 li
48.6467 41.7813 mo
43.6288 29.2366 li
43.6288 28.1077 li
44.6136 29.2567 li
49.4607 41.3743 li
48.6467 41.7813 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
.0235294 .0666667 .0352941 .901961 cmyk
f
96.8814 89.5113 mo
95.7949 88.9681 li
90.03 82.2424 li
90.3287 81.1972 li
96.5945 88.5074 li
96.8814 89.5113 li
89.3226 81.4171 mo
82.0506 72.9331 li
82.6479 72.2363 li
89.6212 80.3719 li
89.3226 81.4171 li
81.4534 72.2363 mo
79.9125 70.4386 li
79.9125 69.045 li
82.0506 71.5395 li
81.4534 72.2363 li
79.0055 69.3805 mo
75.7168 65.5436 li
76.5529 65.1256 li
79.0055 67.9869 li
79.0055 69.3805 li
75.1084 64.8338 mo
68.0571 56.6074 li
68.4372 55.6572 li
75.9445 64.4158 li
75.1084 64.8338 li
67.3911 55.8304 mo
66.2921 54.5482 li
67.4866 54.5482 li
67.7712 54.8802 li
67.3911 55.8304 li
66.7092 53.6413 mo
65.5147 53.6413 li
61.3172 48.7442 li
61.9145 48.0474 li
66.7092 53.6413 li
60.72 48.0474 mo
53.9467 40.1452 li
54.7828 39.7271 li
61.3172 47.3506 li
60.72 48.0474 li
53.3383 39.4354 mo
44.6136 29.2567 li
44.0393 27.8208 li
44.981 28.2917 li
54.1744 39.0173 li
53.3383 39.4354 li
.0235294 .067451 .0345098 .301176 cmyk
f
44.6136 29.2567 mo
43.6288 28.1077 li
43.6288 27.6156 li
44.0393 27.8208 li
44.6136 29.2567 li
.0376009 .107789 .055148 .481292 cmyk
f
96.7533 53.6413 mo
95.6797 53.6413 li
86.2255 48.9141 li
85.8875 47.7311 li
96.2761 52.9255 li
96.7533 53.6413 li
85.125 48.3639 mo
79.9125 45.7576 li
79.9125 44.7436 li
84.7871 47.1809 li
85.125 48.3639 li
79.0055 45.3041 mo
73.6496 42.6261 li
73.9876 41.7811 li
79.0055 44.2901 li
79.0055 45.3041 li
72.8357 42.2191 mo
68.6878 40.1452 li
69.2961 39.4354 li
73.1737 41.3741 li
72.8357 42.2191 li
67.8516 39.7271 mo
61.3172 36.4599 li
62.3312 35.9529 li
68.46 39.0173 li
67.8516 39.7271 li
60.3032 35.9529 mo
44.981 28.2917 li
44.1612 27.3353 li
45.0962 27.3353 li
61.3172 35.4459 li
60.3032 35.9529 li
.0235294 .067451 .0345098 .301176 cmyk
f
45.0962 27.3353 mo
44.1612 27.3353 li
43.5196 26.5867 li
43.1753 26.8818 li
43.1753 26.8818 li
43.3781 26.4762 li
45.0962 27.3353 li
.0235294 .0666667 .0352941 .901961 cmyk
f
97.6006 54.0947 mo
97.6006 53.6413 li
96.7533 53.6413 li
96.2761 52.9255 li
97.8034 53.6891 li
97.6006 54.0947 li
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
.0392157 .105882 .054902 .843137 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
f
44.981 28.2917 mo
44.0393 27.8208 li
43.8451 27.3353 li
44.1612 27.3353 li
44.981 28.2917 li
.0376009 .107789 .055148 .481292 cmyk
f
44.1612 27.3353 mo
43.8451 27.3353 li
43.5963 26.7134 li
43.1753 26.8818 li
43.5196 26.5867 li
44.1612 27.3353 li
.0392157 .105882 .054902 .843137 cmyk
f
44.0393 27.8208 mo
43.6288 27.6156 li
43.6288 27.3353 li
43.8451 27.3353 li
44.0393 27.8208 li
.0461361 .132257 .0676663 .590542 cmyk
f
43.8451 27.3353 mo
43.6288 27.3353 li
43.6288 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
43.5963 26.7134 li
43.8451 27.3353 li
.0470588 .129412 .0666667 .807843 cmyk
f
43.2469 116.191 mo
42.7218 114.353 li
42.7218 99.7289 li
43.6288 100.182 li
43.6288 115.236 li
43.2469 116.191 li
43.6288 99.1684 mo
42.7218 98.7149 li
42.7218 90.8314 li
43.6288 90.8314 li
43.6288 99.1684 li
43.6288 89.9245 mo
42.7218 89.9245 li
42.7218 82.0411 li
43.6288 81.5876 li
43.6288 89.9245 li
42.7218 81.0271 mo
42.7218 75.4273 li
43.6288 76.4854 li
43.6288 80.5736 li
42.7218 81.0271 li
43.6288 75.0918 mo
42.7218 74.0337 li
42.7218 70.439 li
43.6288 69.3808 li
43.6288 75.0918 li
42.7218 69.0454 mo
42.7218 63.4455 li
43.6288 63.899 li
43.6288 67.9873 li
42.7218 69.0454 li
43.6288 62.885 mo
42.7218 62.4316 li
42.7218 54.5482 li
43.6288 54.5482 li
43.6288 62.885 li
43.6288 53.6413 mo
42.7218 53.6413 li
42.7218 45.7577 li
43.6288 45.3042 li
43.6288 53.6413 li
42.7218 44.7437 mo
42.7218 30.1197 li
43.2469 28.2819 li
43.6288 29.2366 li
43.6288 44.2903 li
42.7218 44.7437 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.6288 29.2366 mo
43.2469 28.2819 li
43.3797 27.8171 li
43.6288 28.1077 li
43.6288 29.2366 li
.0376009 .107789 .055148 .481292 cmyk
f
43.6288 28.1077 mo
43.3797 27.8171 li
43.4612 27.5318 li
43.6288 27.6156 li
43.6288 28.1077 li
.0461361 .132257 .0676663 .590542 cmyk
f
43.6288 27.6156 mo
43.4612 27.5318 li
43.5174 27.3353 li
43.6288 27.3353 li
43.6288 27.6156 li
.0512111 .146805 .0751096 .655502 cmyk
f
43.6288 27.3353 mo
43.5174 27.3353 li
43.6113 27.0064 li
43.1753 26.8818 li
43.6288 26.8818 li
43.6288 27.3353 li
.0509804 .145098 .0745098 .784314 cmyk
f
25.4876 89.1521 mo
25.4876 87.14 li
29.7457 72.2363 li
30.2173 73.887 li
26.0402 88.5074 li
25.4876 89.1521 li
30.6889 72.2363 mo
30.2173 70.5856 li
32.3059 63.2753 li
33.0133 64.1006 li
30.6889 72.2363 li
.0235294 .067451 .0345098 .301176 cmyk
f
25.0342 90.3779 mo
24.5981 90.2533 li
25.4876 87.14 li
25.4876 89.1521 li
24.6899 90.0828 li
25.0342 90.3779 li
.0235294 .0666667 .0352941 .901961 cmyk
f
33.3119 63.0554 mo
32.6045 62.2301 li
33.5653 58.8673 li
34.3906 59.2799 li
33.3119 63.0554 li
34.6441 58.3927 mo
33.8188 57.98 li
34.7993 54.5482 li
35.7425 54.5482 li
34.6441 58.3927 li
36.0016 53.6413 mo
35.0584 53.6413 li
36.4089 48.9142 li
37.5094 48.364 li
36.0016 53.6413 li
36.7469 47.7312 mo
41.9412 29.5506 li
42.7218 28.3796 li
42.7218 30.1197 li
37.8473 47.181 li
36.7469 47.7312 li
.0235294 .067451 .0345098 .301176 cmyk
f
41.9412 29.5506 mo
42.7393 26.7573 li
43.1753 26.8818 li
43.1753 26.8818 li
42.7218 26.8818 li
42.7218 28.3796 li
41.9412 29.5506 li
.0235294 .0666667 .0352941 .901961 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
.0392157 .105882 .054902 .843137 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
.172549 .211765 .188235 .592157 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
.0470588 .129412 .0666667 .807843 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
.121569 .172549 .137255 .686274 cmyk
f
42.7218 30.1197 mo
42.7218 28.3796 li
43.0744 27.8507 li
43.2469 28.2819 li
42.7218 30.1197 li
.0376009 .107789 .055148 .481292 cmyk
f
42.7218 28.3796 mo
42.7218 26.8818 li
43.1753 26.8818 li
42.7542 27.0503 li
43.0744 27.8507 li
42.7218 28.3796 li
.0392157 .105882 .054902 .843137 cmyk
f
43.2469 28.2819 mo
43.0744 27.8507 li
43.2206 27.6314 li
43.3797 27.8171 li
43.2469 28.2819 li
.0461361 .132257 .0676663 .590542 cmyk
f
43.0744 27.8507 mo
42.7542 27.0503 li
43.1753 26.8818 li
43.1753 26.8819 li
42.831 27.177 li
43.2206 27.6314 li
43.0744 27.8507 li
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
.0470588 .129412 .0666667 .807843 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
.0980392 .172549 .117647 .713725 cmyk
f
43.3797 27.8171 mo
43.2206 27.6314 li
43.3306 27.4664 li
43.4612 27.5318 li
43.3797 27.8171 li
.0512111 .146805 .0751096 .655502 cmyk
f
43.2206 27.6314 mo
42.831 27.177 li
43.1753 26.8819 li
42.9725 27.2874 li
43.3306 27.4664 li
43.2206 27.6314 li
.0509804 .145098 .0745098 .784314 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
.0470588 .129412 .0666667 .807843 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
.0980392 .172549 .117647 .713725 cmyk
f
43.1753 26.8819 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8819 li
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
.0509804 .145098 .0745098 .784314 cmyk
f
43.1753 26.8818 mo
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
43.1753 26.8818 li
.0823529 .172549 .105882 .729412 cmyk
f
43.4612 27.5318 mo
43.3306 27.4664 li
43.418 27.3353 li
43.5174 27.3353 li
43.4612 27.5318 li
.0542099 .155402 .0795079 .693887 cmyk
f
43.5174 27.3353 mo
43.418 27.3353 li
43.5526 27.1334 li
43.1753 26.8818 li
43.6113 27.0064 li
43.5174 27.3353 li
.054902 .152941 .0784314 .772549 cmyk
f
43.3306 27.4664 mo
42.9725 27.2874 li
43.1753 26.8819 li
43.1753 26.8818 li
43.1753 26.8818 li
43.5526 27.1334 li
43.418 27.3353 li
43.3306 27.4664 li
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
26.955 53.6413 mo
25.8814 53.6413 li
26.3586 52.9255 li
36.7469 47.7312 li
36.4089 48.9142 li
26.955 53.6413 li
.0235294 .067451 .0345098 .301176 cmyk
f
25.0342 54.0947 mo
25.0342 54.0947 li
24.8314 53.6891 li
26.3586 52.9255 li
25.8814 53.6413 li
25.0342 53.6413 li
25.0342 54.0947 li
25.0342 54.0947 li
.0235294 .0666667 .0352941 .901961 cmyk
f
37.5094 48.364 mo
37.8473 47.181 li
42.7218 44.7437 li
42.7218 45.7577 li
37.5094 48.364 li
43.6288 45.3042 mo
43.6288 44.2903 li
48.6467 41.7813 li
48.9847 42.6262 li
43.6288 45.3042 li
49.7987 42.2192 mo
49.4607 41.3743 li
53.3383 39.4354 li
53.9467 40.1452 li
49.7987 42.2192 li
54.7828 39.7271 mo
54.1744 39.0173 li
60.3032 35.9529 li
61.3172 36.4599 li
54.7828 39.7271 li
62.3312 35.9529 mo
61.3172 35.4459 li
77.5381 27.3353 li
78.4731 27.3353 li
77.6533 28.2917 li
62.3312 35.9529 li
.0235294 .067451 .0345098 .301176 cmyk
f
78.4731 27.3353 mo
77.5381 27.3353 li
79.2562 26.4762 li
79.459 26.8818 li
79.459 26.8818 li
79.1147 26.5867 li
78.4731 27.3353 li
.0235294 .0666667 .0352941 .901961 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
f
48.9847 42.6262 mo
48.6467 41.7813 li
49.4607 41.3743 li
49.7987 42.2192 li
48.9847 42.6262 li
.0376009 .107789 .055148 .481292 cmyk
f
53.9467 40.1452 mo
53.3383 39.4354 li
54.1744 39.0173 li
54.7828 39.7271 li
53.9467 40.1452 li
f
61.3172 36.4599 mo
60.3032 35.9529 li
61.3172 35.4459 li
62.3312 35.9529 li
61.3172 36.4599 li
f
42.7218 45.7577 mo
42.7218 44.7437 li
43.6288 44.2903 li
43.6288 45.3042 li
42.7218 45.7577 li
f
36.4089 48.9142 mo
36.7469 47.7312 li
37.8473 47.181 li
37.5094 48.364 li
36.4089 48.9142 li
f
67.904 54.5482 mo
67.4866 54.5482 li
66.7092 53.6413 li
68.2668 53.6413 li
67.904 54.5482 li
66.2921 54.5482 mo
56.3424 54.5482 li
57.1197 53.6413 li
65.5147 53.6413 li
66.2921 54.5482 li
.0235294 .067451 .0345098 .301176 cmyk
f
67.4866 54.5482 mo
66.2921 54.5482 li
65.5147 53.6413 li
66.7092 53.6413 li
67.4866 54.5482 li
.0376009 .107789 .055148 .481292 cmyk
f
95.6796 54.5482 mo
87.8352 54.5482 li
87.5761 53.6413 li
95.6797 53.6413 li
96.5866 54.0947 li
95.6796 54.5482 li
86.892 54.5482 mo
79.9125 54.5482 li
79.9125 53.6413 li
86.6329 53.6413 li
86.892 54.5482 li
79.0055 54.5482 mo
68.8808 54.5482 li
69.2436 53.6413 li
79.0055 53.6413 li
79.0055 54.5482 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0235294 .067451 .0345098 .301176 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0235294 .0666667 .0352941 .901961 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.115309 .147897 .125336 .360969 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.113725 .14902 .12549 .721569 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
f
96.5866 54.0947 mo
95.6797 53.6413 li
96.7533 53.6413 li
96.9383 53.9188 li
96.5866 54.0947 li
.0376009 .107789 .055148 .481292 cmyk
f
97.6006 54.0947 mo
97.3978 53.6891 li
96.9383 53.9188 li
96.7533 53.6413 li
97.6006 53.6413 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0392157 .105882 .054902 .843137 cmyk
f
55.1479 54.5482 mo
54.7302 54.5482 li
54.3675 53.6413 li
55.9252 53.6413 li
55.1479 54.5482 li
53.7535 54.5482 mo
43.6288 54.5482 li
43.6288 53.6413 li
53.3907 53.6413 li
53.7535 54.5482 li
42.7218 54.5482 mo
35.7425 54.5482 li
36.0016 53.6413 li
42.7218 53.6413 li
42.7218 54.5482 li
.0235294 .067451 .0345098 .301176 cmyk
f
54.7302 54.5482 mo
53.7535 54.5482 li
53.3907 53.6413 li
54.3675 53.6413 li
54.7302 54.5482 li
.0376009 .107789 .055148 .481292 cmyk
f
43.6288 54.5482 mo
42.7218 54.5482 li
42.7218 53.6413 li
43.6288 53.6413 li
43.6288 54.5482 li
f
34.7993 54.5482 mo
26.9551 54.5482 li
26.0481 54.0947 li
26.955 53.6413 li
35.0584 53.6413 li
34.7993 54.5482 li
.0235294 .067451 .0345098 .301176 cmyk
f
35.7425 54.5482 mo
34.7993 54.5482 li
35.0584 53.6413 li
36.0016 53.6413 li
35.7425 54.5482 li
.0376009 .107789 .055148 .481292 cmyk
f
26.0481 54.0947 mo
25.6964 53.9188 li
25.8814 53.6413 li
26.955 53.6413 li
26.0481 54.0947 li
f
25.0342 54.0947 mo
25.0342 53.6413 li
25.8814 53.6413 li
25.6964 53.9188 li
25.237 53.6891 li
25.0342 54.0947 li
25.0342 54.0947 li
.0392157 .105882 .054902 .843137 cmyk
f
60.3034 72.2363 mo
46.9179 65.5436 li
47.5262 64.8338 li
60.4531 71.2972 li
60.7412 72.0174 li
60.3034 72.2363 li
.0235294 .067451 .0345098 .301176 cmyk
f
60.7412 72.0174 mo
60.4531 71.2972 li
61.0792 71.6102 li
60.9601 71.908 li
60.7412 72.0174 li
.0376009 .107789 .055148 .481292 cmyk
f
79.0055 81.5874 mo
75.9445 80.0569 li
76.5529 79.3471 li
79.0055 80.5734 li
79.0055 81.5874 li
75.1084 79.6388 mo
62.1811 73.1752 li
61.8932 72.4554 li
62.3314 72.2363 li
75.7168 78.929 li
75.1084 79.6388 li
.0235294 .067451 .0345098 .301176 cmyk
f
62.1811 73.1752 mo
61.5552 72.8622 li
61.6741 72.565 li
61.8932 72.4554 li
62.1811 73.1752 li
.0376009 .107789 .055148 .481292 cmyk
f
96.6146 89.9245 mo
95.6796 89.9245 li
88.8158 86.4925 li
89.0692 85.6053 li
95.7949 88.9681 li
96.6146 89.9245 li
87.9904 86.0798 mo
79.9125 82.0409 li
79.9125 81.0269 li
88.2439 85.1926 li
87.9904 86.0798 li
.0235294 .067451 .0345098 .301176 cmyk
f
96.9994 89.9245 mo
96.6146 89.9245 li
95.7949 88.9681 li
96.8814 89.5113 li
96.9994 89.9245 li
.0376009 .107789 .055148 .481292 cmyk
f
46.0817 65.1255 mo
43.6288 63.899 li
43.6288 62.885 li
46.6901 64.4157 li
46.0817 65.1255 li
42.7218 63.4455 mo
34.3906 59.2799 li
34.6441 58.3927 li
42.7218 62.4316 li
42.7218 63.4455 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.6288 63.899 mo
42.7218 63.4455 li
42.7218 62.4316 li
43.6288 62.885 li
43.6288 63.899 li
.0376009 .107789 .055148 .481292 cmyk
f
33.5653 58.8673 mo
26.8398 55.5045 li
26.0201 54.5482 li
26.9551 54.5482 li
33.8188 57.98 li
33.5653 58.8673 li
.0235294 .067451 .0345098 .301176 cmyk
f
34.3906 59.2799 mo
33.5653 58.8673 li
33.8188 57.98 li
34.6441 58.3927 li
34.3906 59.2799 li
.0376009 .107789 .055148 .481292 cmyk
f
26.9551 54.5482 mo
26.0201 54.5482 li
25.7564 54.2406 li
26.0481 54.0947 li
26.9551 54.5482 li
f
25.7564 54.2406 mo
25.602 54.0604 li
25.6964 53.9188 li
26.0481 54.0947 li
25.7564 54.2406 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.0342 54.0947 mo
25.237 53.6891 li
25.6964 53.9188 li
25.602 54.0604 li
25.3785 53.7996 li
25.0342 54.0947 li
.0470588 .129412 .0666667 .807843 cmyk
f
78.595 116.652 mo
77.6533 116.181 li
68.46 105.455 li
69.2961 105.037 li
78.0207 115.216 li
78.595 116.652 li
67.8516 104.746 mo
61.3172 97.122 li
61.9145 96.4253 li
68.6877 104.327 li
67.8516 104.746 li
60.72 96.4253 mo
55.9253 90.8314 li
57.1198 90.8314 li
61.3172 95.7285 li
60.72 96.4253 li
56.3424 89.9245 mo
55.1479 89.9245 li
54.8631 89.5922 li
55.2432 88.6421 li
56.3424 89.9245 li
.0235294 .067451 .0345098 .301176 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
.0235294 .0666667 .0352941 .901961 cmyk
f
79.0055 116.857 mo
78.595 116.652 li
78.0207 115.216 li
79.0055 116.365 li
79.0055 116.857 li
.0376009 .107789 .055148 .481292 cmyk
f
54.1971 88.8152 mo
46.6901 80.057 li
47.5262 79.6389 li
54.5772 87.8651 li
54.1971 88.8152 li
46.0817 79.3472 mo
43.6288 76.4854 li
43.6288 75.0918 li
46.9179 78.9291 li
46.0817 79.3472 li
42.7218 75.4273 mo
40.584 72.9331 li
41.1812 72.2363 li
42.7218 74.0337 li
42.7218 75.4273 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.6288 76.4854 mo
42.7218 75.4273 li
42.7218 74.0337 li
43.6288 75.0918 li
43.6288 76.4854 li
.0376009 .107789 .055148 .481292 cmyk
f
39.9867 72.2363 mo
33.0133 64.1006 li
33.3119 63.0554 li
40.584 71.5395 li
39.9867 72.2363 li
32.3059 63.2753 mo
26.0402 55.9652 li
25.7534 54.9613 li
26.8398 55.5045 li
32.6045 62.2301 li
32.3059 63.2753 li
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
.0235294 .067451 .0345098 .301176 cmyk
f
33.0133 64.1006 mo
32.3059 63.2753 li
32.6045 62.2301 li
33.3119 63.0554 li
33.0133 64.1006 li
.0376009 .107789 .055148 .481292 cmyk
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
.0392157 .105882 .054902 .843137 cmyk
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
.0470588 .129412 .0666667 .807843 cmyk
f
26.8398 55.5045 mo
25.7534 54.9613 li
25.6353 54.5482 li
26.0201 54.5482 li
26.8398 55.5045 li
.0376009 .107789 .055148 .481292 cmyk
f
26.0201 54.5482 mo
25.6353 54.5482 li
25.5736 54.332 li
25.7564 54.2406 li
26.0201 54.5482 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.5736 54.332 mo
25.5278 54.1718 li
25.602 54.0604 li
25.7564 54.2406 li
25.5736 54.332 li
.0512111 .146805 .0751096 .655502 cmyk
f
25.5278 54.1718 mo
25.4702 53.9702 li
25.0342 54.0947 li
25.0342 54.0947 li
25.3785 53.7996 li
25.602 54.0604 li
25.5278 54.1718 li
.0509804 .145098 .0745098 .784314 cmyk
f
42.7218 116.093 mo
41.9412 114.922 li
36.7469 96.7414 li
37.8473 97.2916 li
42.7218 114.353 li
42.7218 116.093 li
37.5094 96.1086 mo
36.4089 95.5584 li
35.0584 90.8314 li
36.0016 90.8314 li
37.5094 96.1086 li
35.7425 89.9245 mo
34.7993 89.9245 li
33.8188 86.4926 li
34.6441 86.0799 li
35.7425 89.9245 li
33.5653 85.6054 mo
32.6045 82.2426 li
33.3119 81.4172 li
34.3906 85.1927 li
33.5653 85.6054 li
.0235294 .067451 .0345098 .301176 cmyk
f
42.7393 117.715 mo
41.9412 114.922 li
42.7218 116.093 li
42.7218 117.591 li
43.1753 117.591 li
43.1753 117.591 li
42.7393 117.715 li
.0235294 .0666667 .0352941 .901961 cmyk
f
43.0744 116.622 mo
42.7218 116.093 li
42.7218 114.353 li
43.2469 116.191 li
43.0744 116.622 li
.0376009 .107789 .055148 .481292 cmyk
f
43.1753 117.591 mo
42.7218 117.591 li
42.7218 116.093 li
43.0744 116.622 li
42.7542 117.422 li
43.1753 117.591 li
43.1753 117.591 li
.0392157 .105882 .054902 .843137 cmyk
f
32.3059 81.1974 mo
30.2173 73.887 li
30.6889 72.2363 li
33.0133 80.372 li
32.3059 81.1974 li
29.7457 72.2363 mo
25.4876 57.3326 li
25.4876 55.3206 li
26.0402 55.9652 li
30.2173 70.5856 li
29.7457 72.2363 li
.0235294 .067451 .0345098 .301176 cmyk
f
25.4876 57.3326 mo
24.5981 54.2193 li
25.0342 54.0947 li
24.6899 54.3898 li
25.4876 55.3206 li
25.4876 57.3326 li
.0235294 .0666667 .0352941 .901961 cmyk
f
30.2173 73.887 mo
29.7457 72.2363 li
30.2173 70.5856 li
30.6889 72.2363 li
30.2173 73.887 li
.0376009 .107789 .055148 .481292 cmyk
f
26.0402 55.9652 mo
25.4876 55.3206 li
25.4876 54.8285 li
25.7534 54.9613 li
26.0402 55.9652 li
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
f
25.4876 55.3206 mo
24.6899 54.3898 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
24.8314 54.5003 li
25.4876 54.8285 li
25.4876 55.3206 li
.0392157 .105882 .054902 .843137 cmyk
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
.0470588 .129412 .0666667 .807843 cmyk
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
.0509804 .145098 .0745098 .784314 cmyk
f
25.7534 54.9613 mo
25.4876 54.8285 li
25.4876 54.5482 li
25.6353 54.5482 li
25.7534 54.9613 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.4876 54.8285 mo
24.8314 54.5003 li
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.5482 li
25.4876 54.5482 li
25.4876 54.8285 li
.0470588 .129412 .0666667 .807843 cmyk
f
25.0342 54.0947 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.0342 54.0947 li
.0509804 .145098 .0745098 .784314 cmyk
f
25.6353 54.5482 mo
25.4876 54.5482 li
25.4876 54.375 li
25.5736 54.332 li
25.6353 54.5482 li
.0512111 .146805 .0751096 .655502 cmyk
f
25.4876 54.5482 mo
25.0342 54.5482 li
25.0342 54.0947 li
25.237 54.5003 li
25.4876 54.375 li
25.4876 54.5482 li
.0509804 .145098 .0745098 .784314 cmyk
f
25.4876 54.375 mo
25.4876 54.232 li
25.5278 54.1718 li
25.5736 54.332 li
25.4876 54.375 li
.0542099 .155402 .0795079 .693887 cmyk
f
25.237 54.5003 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.4115 54.3462 li
25.4876 54.232 li
25.4876 54.375 li
25.237 54.5003 li
.054902 .152941 .0784314 .772549 cmyk
f
25.4115 54.3462 mo
25.0342 54.0947 li
25.0342 54.0947 li
25.4702 53.9702 li
25.5278 54.1718 li
25.4876 54.232 li
25.4115 54.3462 li
f
43.6288 116.365 mo
43.6288 115.236 li
48.6467 102.691 li
49.4607 103.098 li
44.6136 115.216 li
43.6288 116.365 li
49.7987 102.253 mo
48.9847 101.846 li
53.3907 90.8314 li
54.3675 90.8314 li
49.7987 102.253 li
54.7302 89.9245 mo
53.7535 89.9245 li
54.1971 88.8152 li
54.8631 89.5922 li
54.7302 89.9245 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.3797 116.656 mo
43.2469 116.191 li
43.6288 115.236 li
43.6288 116.365 li
43.3797 116.656 li
.0376009 .107789 .055148 .481292 cmyk
f
55.2432 88.6421 mo
54.5772 87.8651 li
60.4531 73.1755 li
61.0792 72.8624 li
61.3171 73.4573 li
55.2432 88.6421 li
.0235294 .067451 .0345098 .301176 cmyk
f
61.3171 73.4573 mo
61.0792 72.8624 li
61.3174 72.7433 li
61.5552 72.8622 li
61.3171 73.4573 li
.0376009 .107789 .055148 .481292 cmyk
f
61.5552 71.6104 mo
61.3171 71.0153 li
67.3911 55.8304 li
68.0571 56.6074 li
62.181 71.2975 li
61.5552 71.6104 li
68.4372 55.6572 mo
67.7712 54.8802 li
67.904 54.5482 li
68.8808 54.5482 li
68.4372 55.6572 li
.0235294 .067451 .0345098 .301176 cmyk
f
61.3174 71.7293 mo
61.0792 71.6102 li
61.3171 71.0153 li
61.5552 71.6104 li
61.3174 71.7293 li
.0376009 .107789 .055148 .481292 cmyk
f
68.0571 56.6074 mo
67.3911 55.8304 li
67.7712 54.8802 li
68.4372 55.6572 li
68.0571 56.6074 li
f
69.2436 53.6413 mo
68.2668 53.6413 li
72.8357 42.2191 li
73.6496 42.6261 li
69.2436 53.6413 li
73.9876 41.7811 mo
73.1737 41.3741 li
78.0207 29.2567 li
79.0055 28.1077 li
79.0055 29.2365 li
73.9876 41.7811 li
.0235294 .067451 .0345098 .301176 cmyk
f
73.6496 42.6261 mo
72.8357 42.2191 li
73.1737 41.3741 li
73.9876 41.7811 li
73.6496 42.6261 li
.0376009 .107789 .055148 .481292 cmyk
f
68.8808 54.5482 mo
67.904 54.5482 li
68.2668 53.6413 li
69.2436 53.6413 li
68.8808 54.5482 li
f
61.5552 72.8622 mo
61.3174 72.7433 li
61.6741 72.565 li
61.5552 72.8622 li
60.9601 71.908 mo
61.0792 71.6102 li
61.3174 71.7293 li
60.9601 71.908 li
.0461361 .132257 .0676663 .590542 cmyk
f
54.8631 89.5922 mo
54.1971 88.8152 li
54.5772 87.8651 li
55.2432 88.6421 li
54.8631 89.5922 li
.0376009 .107789 .055148 .481292 cmyk
f
43.2206 116.841 mo
43.0744 116.622 li
43.2469 116.191 li
43.3797 116.656 li
43.2206 116.841 li
.0461361 .132257 .0676663 .590542 cmyk
f
43.1753 117.591 mo
42.7542 117.422 li
43.0744 116.622 li
43.2206 116.841 li
42.831 117.296 li
43.1753 117.591 li
.0470588 .129412 .0666667 .807843 cmyk
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.7534 89.5114 mo
26.0402 88.5074 li
32.3059 81.1974 li
32.6045 82.2426 li
26.8398 88.9682 li
25.7534 89.5114 li
.0235294 .067451 .0345098 .301176 cmyk
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
25.4876 89.6442 mo
25.4876 89.1521 li
26.0402 88.5074 li
25.7534 89.5114 li
25.4876 89.6442 li
.0376009 .107789 .055148 .481292 cmyk
f
25.0342 90.3779 mo
25.0342 90.3779 li
24.6899 90.0828 li
25.4876 89.1521 li
25.4876 89.6442 li
24.8314 89.9723 li
25.0342 90.3779 li
.0392157 .105882 .054902 .843137 cmyk
f
33.3119 81.4172 mo
33.0133 80.372 li
39.9867 72.2363 li
40.584 72.9331 li
33.3119 81.4172 li
41.1812 72.2363 mo
40.584 71.5395 li
42.7218 69.0454 li
42.7218 70.439 li
41.1812 72.2363 li
43.6288 69.3808 mo
43.6288 67.9873 li
46.0817 65.1255 li
46.9179 65.5436 li
43.6288 69.3808 li
.0235294 .067451 .0345098 .301176 cmyk
f
42.7218 70.439 mo
42.7218 69.0454 li
43.6288 67.9873 li
43.6288 69.3808 li
42.7218 70.439 li
.0376009 .107789 .055148 .481292 cmyk
f
47.5262 64.8338 mo
46.6901 64.4157 li
54.1971 55.6574 li
54.5772 56.6076 li
47.5262 64.8338 li
55.2432 55.8306 mo
54.8631 54.8804 li
55.1479 54.5482 li
56.3424 54.5482 li
55.2432 55.8306 li
.0235294 .067451 .0345098 .301176 cmyk
f
54.5772 56.6076 mo
54.1971 55.6574 li
54.8631 54.8804 li
55.2432 55.8306 li
54.5772 56.6076 li
.0376009 .107789 .055148 .481292 cmyk
f
57.1197 53.6413 mo
55.9252 53.6413 li
60.72 48.0474 li
61.3172 48.7442 li
57.1197 53.6413 li
61.9145 48.0474 mo
61.3172 47.3506 li
67.8516 39.7271 li
68.6878 40.1452 li
61.9145 48.0474 li
69.2961 39.4354 mo
68.46 39.0173 li
77.6533 28.2917 li
78.595 27.8208 li
78.0207 29.2567 li
69.2961 39.4354 li
.0235294 .067451 .0345098 .301176 cmyk
f
61.3172 48.7442 mo
60.72 48.0474 li
61.3172 47.3506 li
61.9145 48.0474 li
61.3172 48.7442 li
.0376009 .107789 .055148 .481292 cmyk
f
68.6878 40.1452 mo
67.8516 39.7271 li
68.46 39.0173 li
69.2961 39.4354 li
68.6878 40.1452 li
f
77.6533 28.2917 mo
78.4731 27.3353 li
78.7892 27.3353 li
78.595 27.8208 li
77.6533 28.2917 li
f
78.7892 27.3353 mo
78.4731 27.3353 li
79.1147 26.5867 li
79.459 26.8818 li
79.038 26.7134 li
78.7892 27.3353 li
.0392157 .105882 .054902 .843137 cmyk
f
56.3424 54.5482 mo
55.1479 54.5482 li
55.9252 53.6413 li
57.1197 53.6413 li
56.3424 54.5482 li
.0376009 .107789 .055148 .481292 cmyk
f
46.9179 65.5436 mo
46.0817 65.1255 li
46.6901 64.4157 li
47.5262 64.8338 li
46.9179 65.5436 li
f
40.584 72.9331 mo
39.9867 72.2363 li
40.584 71.5395 li
41.1812 72.2363 li
40.584 72.9331 li
f
32.6045 82.2426 mo
32.3059 81.1974 li
33.0133 80.372 li
33.3119 81.4172 li
32.6045 82.2426 li
f
78.0207 29.2567 mo
78.595 27.8208 li
79.0055 27.6156 li
79.0055 28.1077 li
78.0207 29.2567 li
f
78.595 27.8208 mo
78.7892 27.3353 li
79.0055 27.3353 li
79.0055 27.6156 li
78.595 27.8208 li
.0461361 .132257 .0676663 .590542 cmyk
f
79.0055 27.3353 mo
78.7892 27.3353 li
79.038 26.7134 li
79.459 26.8818 li
79.0055 26.8818 li
79.0055 27.3353 li
.0470588 .129412 .0666667 .807843 cmyk
f
79.3874 116.191 mo
79.0055 115.236 li
79.0055 100.183 li
79.9125 99.7291 li
79.9125 114.353 li
79.3874 116.191 li
79.0055 99.1686 mo
79.0055 90.8314 li
79.9125 90.8314 li
79.9125 98.7151 li
79.0055 99.1686 li
79.9125 89.9245 mo
79.0055 89.9245 li
79.0055 81.5874 li
79.9125 82.0409 li
79.9125 89.9245 li
.0235294 .067451 .0345098 .301176 cmyk
f
79.2546 116.656 mo
79.0055 116.365 li
79.0055 115.236 li
79.3874 116.191 li
79.2546 116.656 li
.0376009 .107789 .055148 .481292 cmyk
f
79.9125 81.0269 mo
79.0055 80.5734 li
79.0055 76.4857 li
79.9125 75.4276 li
79.9125 81.0269 li
79.0055 75.0922 mo
79.0055 69.3805 li
79.9125 70.4386 li
79.9125 74.0341 li
79.0055 75.0922 li
79.9125 69.045 mo
79.0055 67.9869 li
79.0055 63.8993 li
79.9125 63.4458 li
79.9125 69.045 li
79.0055 62.8853 mo
79.0055 54.5482 li
79.9125 54.5482 li
79.9125 62.4318 li
79.0055 62.8853 li
.0235294 .067451 .0345098 .301176 cmyk
f
79.9125 70.4386 mo
79.0055 69.3805 li
79.0055 67.9869 li
79.9125 69.045 li
79.9125 70.4386 li
.0376009 .107789 .055148 .481292 cmyk
f
79.9125 53.6413 mo
79.0055 53.6413 li
79.0055 45.3041 li
79.9125 45.7576 li
79.9125 53.6413 li
79.9125 44.7436 mo
79.0055 44.2901 li
79.0055 29.2365 li
79.3874 28.2818 li
79.9125 30.1197 li
79.9125 44.7436 li
.0235294 .067451 .0345098 .301176 cmyk
f
79.9125 45.7576 mo
79.0055 45.3041 li
79.0055 44.2901 li
79.9125 44.7436 li
79.9125 45.7576 li
.0376009 .107789 .055148 .481292 cmyk
f
79.9125 54.5482 mo
79.0055 54.5482 li
79.0055 53.6413 li
79.9125 53.6413 li
79.9125 54.5482 li
f
79.9125 82.0409 mo
79.0055 81.5874 li
79.0055 80.5734 li
79.9125 81.0269 li
79.9125 82.0409 li
f
79.1731 116.941 mo
79.0055 116.857 li
79.0055 116.365 li
79.2546 116.656 li
79.1731 116.941 li
.0461361 .132257 .0676663 .590542 cmyk
f
79.0055 29.2365 mo
79.0055 28.1077 li
79.2546 27.8171 li
79.3874 28.2818 li
79.0055 29.2365 li
.0376009 .107789 .055148 .481292 cmyk
f
79.0055 28.1077 mo
79.0055 27.6156 li
79.1731 27.5318 li
79.2546 27.8171 li
79.0055 28.1077 li
.0461361 .132257 .0676663 .590542 cmyk
f
79.0055 27.6156 mo
79.0055 27.3353 li
79.1169 27.3353 li
79.1731 27.5318 li
79.0055 27.6156 li
.0512111 .146805 .0751096 .655502 cmyk
f
79.1169 27.3353 mo
79.0055 27.3353 li
79.0055 26.8818 li
79.459 26.8818 li
79.023 27.0064 li
79.1169 27.3353 li
.0509804 .145098 .0745098 .784314 cmyk
f
97.1471 89.1521 mo
96.5945 88.5074 li
92.4173 73.887 li
92.8889 72.2363 li
97.1471 87.1401 li
97.1471 89.1521 li
.0235294 .067451 .0345098 .301176 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.9449 90.0828 li
97.1471 89.1521 li
97.1471 87.1401 li
98.0366 90.2533 li
97.6006 90.3779 li
.0235294 .0666667 .0352941 .901961 cmyk
f
97.1471 89.6442 mo
96.8814 89.5113 li
96.5945 88.5074 li
97.1471 89.1521 li
97.1471 89.6442 li
.0376009 .107789 .055148 .481292 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.8034 89.9723 li
97.1471 89.6442 li
97.1471 89.1521 li
97.9449 90.0828 li
97.6006 90.3779 li
.0392157 .105882 .054902 .843137 cmyk
f
97.1471 89.9245 mo
96.9994 89.9245 li
96.8814 89.5113 li
97.1471 89.6442 li
97.1471 89.9245 li
.0461361 .132257 .0676663 .590542 cmyk
f
97.6006 90.3779 mo
97.6006 89.9245 li
97.1471 89.9245 li
97.1471 89.6442 li
97.8034 89.9723 li
97.6006 90.3779 li
.0470588 .129412 .0666667 .807843 cmyk
f
91.9457 72.2363 mo
89.6212 64.1007 li
90.3287 63.2754 li
92.4173 70.5857 li
91.9457 72.2363 li
89.3226 63.0555 mo
88.2439 59.2801 li
89.0693 58.8674 li
90.03 62.2302 li
89.3226 63.0555 li
87.9904 58.3928 mo
86.892 54.5482 li
87.8352 54.5482 li
88.8158 57.9801 li
87.9904 58.3928 li
87.5761 53.6413 mo
86.6329 53.6413 li
85.125 48.3639 li
86.2255 48.9141 li
87.5761 53.6413 li
85.8875 47.7311 mo
84.7871 47.1809 li
79.9125 30.1197 li
79.9125 28.3796 li
80.6931 29.5505 li
85.8875 47.7311 li
.0235294 .067451 .0345098 .301176 cmyk
f
80.6931 29.5505 mo
79.9125 28.3796 li
79.9125 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.895 26.7573 li
80.6931 29.5505 li
.0235294 .0666667 .0352941 .901961 cmyk
f
86.2255 48.9141 mo
85.125 48.3639 li
84.7871 47.1809 li
85.8875 47.7311 li
86.2255 48.9141 li
.0376009 .107789 .055148 .481292 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
.0392157 .105882 .054902 .843137 cmyk
f
87.8352 54.5482 mo
86.892 54.5482 li
86.6329 53.6413 li
87.5761 53.6413 li
87.8352 54.5482 li
.0376009 .107789 .055148 .481292 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
.168627 .196078 .176471 .611765 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
.113725 .14902 .12549 .721569 cmyk
f
79.9125 30.1197 mo
79.3874 28.2818 li
79.5598 27.8506 li
79.9125 28.3796 li
79.9125 30.1197 li
.0376009 .107789 .055148 .481292 cmyk
f
79.9125 28.3796 mo
79.5598 27.8506 li
79.88 27.0503 li
79.459 26.8818 li
79.459 26.8818 li
79.9125 26.8818 li
79.9125 28.3796 li
.0392157 .105882 .054902 .843137 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
.0901961 .156863 .109804 .733333 cmyk
f
79.3874 28.2818 mo
79.2546 27.8171 li
79.4137 27.6314 li
79.5598 27.8506 li
79.3874 28.2818 li
.0461361 .132257 .0676663 .590542 cmyk
f
79.5598 27.8506 mo
79.4137 27.6314 li
79.8033 27.177 li
79.459 26.8819 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.88 27.0503 li
79.5598 27.8506 li
.0470588 .129412 .0666667 .807843 cmyk
f
79.459 26.8819 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8819 li
.0509804 .145098 .0745098 .784314 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
.0392157 .105882 .054902 .843137 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
.0901961 .156863 .109804 .733333 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
.0470588 .129412 .0666667 .807843 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
.0509804 .145098 .0745098 .784314 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
.0901961 .156863 .109804 .733333 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
.0980392 .172549 .117647 .713725 cmyk
f
79.459 26.8818 mo
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8818 li
.101961 .180392 .121569 .698039 cmyk
f
79.2546 27.8171 mo
79.1731 27.5318 li
79.3037 27.4664 li
79.4137 27.6314 li
79.2546 27.8171 li
.0512111 .146805 .0751096 .655502 cmyk
f
79.4137 27.6314 mo
79.3037 27.4664 li
79.6618 27.2874 li
79.459 26.8819 li
79.8033 27.177 li
79.4137 27.6314 li
.0509804 .145098 .0745098 .784314 cmyk
f
79.1731 27.5318 mo
79.1169 27.3353 li
79.2163 27.3353 li
79.3037 27.4664 li
79.1731 27.5318 li
.0542099 .155402 .0795079 .693887 cmyk
f
79.2163 27.3353 mo
79.1169 27.3353 li
79.023 27.0064 li
79.459 26.8818 li
79.0817 27.1334 li
79.2163 27.3353 li
.054902 .152941 .0784314 .772549 cmyk
f
79.3037 27.4664 mo
79.2163 27.3353 li
79.0817 27.1334 li
79.459 26.8818 li
79.459 26.8818 li
79.459 26.8819 li
79.6618 27.2874 li
79.3037 27.4664 li
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
.164706 .176471 .172549 .639216 cmyk
f
26.9551 89.9245 mo
26.0201 89.9245 li
26.8398 88.9682 li
33.5653 85.6054 li
33.8188 86.4926 li
26.9551 89.9245 li
34.6441 86.0799 mo
34.3906 85.1927 li
42.7218 81.0271 li
42.7218 82.0411 li
34.6441 86.0799 li
43.6288 81.5876 mo
43.6288 80.5736 li
46.0817 79.3472 li
46.6901 80.057 li
43.6288 81.5876 li
47.5262 79.6389 mo
46.9179 78.9291 li
60.3034 72.2363 li
60.7412 72.4552 li
60.4531 73.1755 li
47.5262 79.6389 li
62.3314 72.2363 mo
61.8932 72.0172 li
62.181 71.2975 li
75.1084 64.8338 li
75.7168 65.5436 li
62.3314 72.2363 li
76.5529 65.1256 mo
75.9445 64.4158 li
79.0055 62.8853 li
79.0055 63.8993 li
76.5529 65.1256 li
79.9125 63.4458 mo
79.9125 62.4318 li
87.9904 58.3928 li
88.2439 59.2801 li
79.9125 63.4458 li
.0235294 .067451 .0345098 .301176 cmyk
f
75.7168 65.5436 mo
75.1084 64.8338 li
75.9445 64.4158 li
76.5529 65.1256 li
75.7168 65.5436 li
.0376009 .107789 .055148 .481292 cmyk
f
42.7218 82.0411 mo
42.7218 81.0271 li
43.6288 80.5736 li
43.6288 81.5876 li
42.7218 82.0411 li
f
60.7412 72.4552 mo
60.3034 72.2363 li
60.7412 72.0174 li
60.8287 72.2363 li
60.7412 72.4552 li
f
60.8287 72.2363 mo
60.7412 72.0174 li
60.9601 71.908 li
60.8287 72.2363 li
.0461361 .132257 .0676663 .590542 cmyk
f
61.8932 72.4554 mo
61.8055 72.2363 li
61.8932 72.0172 li
62.3314 72.2363 li
61.8932 72.4554 li
.0376009 .107789 .055148 .481292 cmyk
f
61.6741 72.565 mo
61.8055 72.2363 li
61.8932 72.4554 li
61.6741 72.565 li
.0461361 .132257 .0676663 .590542 cmyk
f
46.6901 80.057 mo
46.0817 79.3472 li
46.9179 78.9291 li
47.5262 79.6389 li
46.6901 80.057 li
.0376009 .107789 .055148 .481292 cmyk
f
33.8188 86.4926 mo
33.5653 85.6054 li
34.3906 85.1927 li
34.6441 86.0799 li
33.8188 86.4926 li
f
60.4531 73.1755 mo
60.7412 72.4552 li
60.9601 72.5647 li
61.0792 72.8624 li
60.4531 73.1755 li
f
61.0792 72.8624 mo
60.9601 72.5647 li
61.3174 72.7433 li
61.0792 72.8624 li
.0461361 .132257 .0676663 .590542 cmyk
f
61.8932 72.0172 mo
61.6741 71.9077 li
61.5552 71.6104 li
62.181 71.2975 li
61.8932 72.0172 li
.0376009 .107789 .055148 .481292 cmyk
f
61.6741 71.9077 mo
61.3174 71.7293 li
61.5552 71.6104 li
61.6741 71.9077 li
.0461361 .132257 .0676663 .590542 cmyk
f
60.9601 72.5647 mo
60.7412 72.4552 li
60.8287 72.2363 li
60.9601 72.5647 li
61.8055 72.2363 mo
61.6741 71.9077 li
61.8932 72.0172 li
61.8055 72.2363 li
f
61.3174 72.7433 mo
60.9601 72.5647 li
60.8287 72.2363 li
60.9601 71.908 li
61.3174 71.7293 li
61.6741 71.9077 li
61.8055 72.2363 li
61.6741 72.565 li
61.3174 72.7433 li
.0512111 .146805 .0751096 .655502 cmyk
f
26.0201 89.9245 mo
25.6353 89.9245 li
25.7534 89.5114 li
26.8398 88.9682 li
26.0201 89.9245 li
.0376009 .107789 .055148 .481292 cmyk
f
25.6353 89.9245 mo
25.4876 89.9245 li
25.4876 89.6442 li
25.7534 89.5114 li
25.6353 89.9245 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.0342 90.3779 mo
25.0342 90.3779 li
24.8314 89.9723 li
25.4876 89.6442 li
25.4876 89.9245 li
25.0342 89.9245 li
25.0342 90.3779 li
25.0342 90.3779 li
.0470588 .129412 .0666667 .807843 cmyk
f
79.0055 63.8993 mo
79.0055 62.8853 li
79.9125 62.4318 li
79.9125 63.4458 li
79.0055 63.8993 li
.0376009 .107789 .055148 .481292 cmyk
f
89.0693 58.8674 mo
88.8158 57.9801 li
95.6796 54.5482 li
96.6146 54.5482 li
95.7949 55.5046 li
89.0693 58.8674 li
.0235294 .067451 .0345098 .301176 cmyk
f
96.6146 54.5482 mo
95.6796 54.5482 li
96.5866 54.0947 li
96.8783 54.2406 li
96.6146 54.5482 li
.0376009 .107789 .055148 .481292 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0392157 .105882 .054902 .843137 cmyk
f
96.8783 54.2406 mo
96.5866 54.0947 li
96.9383 53.9188 li
97.0327 54.0604 li
96.8783 54.2406 li
.0461361 .132257 .0676663 .590542 cmyk
f
97.6006 54.0947 mo
97.2563 53.7996 li
97.0327 54.0604 li
96.9383 53.9188 li
97.3978 53.6891 li
97.6006 54.0947 li
97.6006 54.0947 li
.0470588 .129412 .0666667 .807843 cmyk
f
88.2439 59.2801 mo
87.9904 58.3928 li
88.8158 57.9801 li
89.0693 58.8674 li
88.2439 59.2801 li
.0376009 .107789 .055148 .481292 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
.164706 .176471 .172549 .639216 cmyk
f
54.7828 104.746 mo
53.9467 104.327 li
60.72 96.4253 li
61.3172 97.122 li
54.7828 104.746 li
61.9145 96.4253 mo
61.3172 95.7285 li
65.5147 90.8314 li
66.7092 90.8314 li
61.9145 96.4253 li
.0235294 .067451 .0345098 .301176 cmyk
f
61.3172 97.122 mo
60.72 96.4253 li
61.3172 95.7285 li
61.9145 96.4253 li
61.3172 97.122 li
.0376009 .107789 .055148 .481292 cmyk
f
44.0393 116.652 mo
44.6136 115.216 li
53.3383 105.037 li
54.1744 105.455 li
44.981 116.181 li
44.0393 116.652 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
.0235294 .0666667 .0352941 .901961 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
.0392157 .105882 .054902 .843137 cmyk
f
43.6288 116.857 mo
43.6288 116.365 li
44.6136 115.216 li
44.0393 116.652 li
43.6288 116.857 li
.0376009 .107789 .055148 .481292 cmyk
f
43.4612 116.941 mo
43.3797 116.656 li
43.6288 116.365 li
43.6288 116.857 li
43.4612 116.941 li
.0461361 .132257 .0676663 .590542 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
.0470588 .129412 .0666667 .807843 cmyk
f
43.3306 117.006 mo
43.2206 116.841 li
43.3797 116.656 li
43.4612 116.941 li
43.3306 117.006 li
.0512111 .146805 .0751096 .655502 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
42.831 117.296 li
43.2206 116.841 li
43.3306 117.006 li
42.9725 117.185 li
43.1753 117.591 li
43.1753 117.591 li
.0509804 .145098 .0745098 .784314 cmyk
f
67.4866 89.9245 mo
66.2921 89.9245 li
67.3911 88.6423 li
67.7712 89.5924 li
67.4866 89.9245 li
68.4372 88.8154 mo
68.0571 87.8653 li
75.1084 79.6388 li
75.9445 80.0569 li
68.4372 88.8154 li
76.5529 79.3471 mo
75.7168 78.929 li
79.0055 75.0922 li
79.0055 76.4857 li
76.5529 79.3471 li
79.9125 75.4276 mo
79.9125 74.0341 li
81.4534 72.2363 li
82.0506 72.9331 li
79.9125 75.4276 li
82.6479 72.2363 mo
82.0506 71.5395 li
89.3226 63.0555 li
89.6212 64.1007 li
82.6479 72.2363 li
.0235294 .067451 .0345098 .301176 cmyk
f
67.7712 89.5924 mo
67.3911 88.6423 li
68.0571 87.8653 li
68.4372 88.8154 li
67.7712 89.5924 li
.0376009 .107789 .055148 .481292 cmyk
f
82.0506 72.9331 mo
81.4534 72.2363 li
82.0506 71.5395 li
82.6479 72.2363 li
82.0506 72.9331 li
f
75.9445 80.0569 mo
75.1084 79.6388 li
75.7168 78.929 li
76.5529 79.3471 li
75.9445 80.0569 li
f
79.0055 76.4857 mo
79.0055 75.0922 li
79.9125 74.0341 li
79.9125 75.4276 li
79.0055 76.4857 li
f
90.3287 63.2754 mo
90.03 62.2302 li
95.7949 55.5046 li
96.8814 54.9613 li
96.5945 55.9652 li
90.3287 63.2754 li
.0235294 .067451 .0345098 .301176 cmyk
f
89.6212 64.1007 mo
89.3226 63.0555 li
90.03 62.2302 li
90.3287 63.2754 li
89.6212 64.1007 li
.0376009 .107789 .055148 .481292 cmyk
f
95.7949 55.5046 mo
96.6146 54.5482 li
96.9994 54.5482 li
96.8814 54.9613 li
95.7949 55.5046 li
f
96.9994 54.5482 mo
96.6146 54.5482 li
96.8783 54.2406 li
97.0612 54.332 li
96.9994 54.5482 li
.0461361 .132257 .0676663 .590542 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0470588 .129412 .0666667 .807843 cmyk
f
97.0612 54.332 mo
96.8783 54.2406 li
97.0327 54.0604 li
97.1069 54.1718 li
97.0612 54.332 li
.0512111 .146805 .0751096 .655502 cmyk
f
97.1069 54.1718 mo
97.0327 54.0604 li
97.2563 53.7996 li
97.6006 54.0947 li
97.6006 54.0947 li
97.1646 53.9702 li
97.1069 54.1718 li
.0509804 .145098 .0745098 .784314 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
.164706 .176471 .172549 .639216 cmyk
f
79.9125 116.093 mo
79.9125 114.353 li
84.7871 97.2917 li
85.8875 96.7415 li
80.6931 114.922 li
79.9125 116.093 li
85.125 96.1088 mo
86.6329 90.8314 li
87.5761 90.8314 li
86.2255 95.5585 li
85.125 96.1088 li
.0235294 .067451 .0345098 .301176 cmyk
f
79.895 117.715 mo
79.459 117.591 li
79.459 117.591 li
79.9125 117.591 li
79.9125 116.093 li
80.6931 114.922 li
79.895 117.715 li
.0235294 .0666667 .0352941 .901961 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
.0392157 .105882 .054902 .843137 cmyk
f
79.5598 116.622 mo
79.3874 116.191 li
79.9125 114.353 li
79.9125 116.093 li
79.5598 116.622 li
.0376009 .107789 .055148 .481292 cmyk
f
79.9125 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.88 117.422 li
79.5598 116.622 li
79.9125 116.093 li
79.9125 117.591 li
.0392157 .105882 .054902 .843137 cmyk
f
79.4137 116.841 mo
79.2546 116.656 li
79.3874 116.191 li
79.5598 116.622 li
79.4137 116.841 li
.0461361 .132257 .0676663 .590542 cmyk
f
79.459 117.591 mo
79.8033 117.296 li
79.4137 116.841 li
79.5598 116.622 li
79.88 117.422 li
79.459 117.591 li
.0470588 .129412 .0666667 .807843 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
.0784314 .160784 .101961 .741176 cmyk
f
79.3037 117.006 mo
79.1731 116.941 li
79.2546 116.656 li
79.4137 116.841 li
79.3037 117.006 li
.0512111 .146805 .0751096 .655502 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.6618 117.185 li
79.3037 117.006 li
79.4137 116.841 li
79.8033 117.296 li
79.459 117.591 li
79.459 117.591 li
.0509804 .145098 .0745098 .784314 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
f
87.8352 89.9245 mo
86.892 89.9245 li
87.9904 86.0798 li
88.8158 86.4925 li
87.8352 89.9245 li
89.0692 85.6053 mo
88.2439 85.1926 li
89.3226 81.4171 li
90.03 82.2424 li
89.0692 85.6053 li
90.3287 81.1972 mo
89.6212 80.3719 li
91.9457 72.2363 li
92.4173 73.887 li
90.3287 81.1972 li
.0235294 .067451 .0345098 .301176 cmyk
f
90.03 82.2424 mo
89.3226 81.4171 li
89.6212 80.3719 li
90.3287 81.1972 li
90.03 82.2424 li
.0376009 .107789 .055148 .481292 cmyk
f
88.8158 86.4925 mo
87.9904 86.0798 li
88.2439 85.1926 li
89.0692 85.6053 li
88.8158 86.4925 li
f
92.8889 72.2363 mo
92.4173 70.5857 li
96.5945 55.9652 li
97.1471 55.3206 li
97.1471 57.3326 li
92.8889 72.2363 li
.0235294 .067451 .0345098 .301176 cmyk
f
97.1471 57.3326 mo
97.1471 55.3206 li
97.9449 54.3898 li
97.6006 54.0947 li
97.6006 54.0947 li
98.0366 54.2193 li
97.1471 57.3326 li
.0235294 .0666667 .0352941 .901961 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0392157 .105882 .054902 .843137 cmyk
f
92.4173 73.887 mo
91.9457 72.2363 li
92.4173 70.5857 li
92.8889 72.2363 li
92.4173 73.887 li
.0376009 .107789 .055148 .481292 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0392157 .105882 .054902 .843137 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.121569 .172549 .137255 .686274 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
f
96.5945 55.9652 mo
96.8814 54.9613 li
97.1471 54.8285 li
97.1471 55.3206 li
96.5945 55.9652 li
.0376009 .107789 .055148 .481292 cmyk
f
97.1471 55.3206 mo
97.1471 54.8285 li
97.8034 54.5003 li
97.6006 54.0948 li
97.6006 54.0947 li
97.9449 54.3898 li
97.1471 55.3206 li
.0392157 .105882 .054902 .843137 cmyk
f
97.6006 54.0948 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0948 li
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0470588 .129412 .0666667 .807843 cmyk
f
97.6006 54.0947 mo
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
.0980392 .172549 .117647 .713725 cmyk
f
96.8814 54.9613 mo
96.9994 54.5482 li
97.1471 54.5482 li
97.1471 54.8285 li
96.8814 54.9613 li
.0461361 .132257 .0676663 .590542 cmyk
f
97.1471 54.8285 mo
97.1471 54.5482 li
97.6006 54.5482 li
97.6006 54.0948 li
97.8034 54.5003 li
97.1471 54.8285 li
.0470588 .129412 .0666667 .807843 cmyk
f
97.1471 54.5482 mo
96.9994 54.5482 li
97.0612 54.332 li
97.1471 54.375 li
97.1471 54.5482 li
.0512111 .146805 .0751096 .655502 cmyk
f
97.6006 54.5482 mo
97.1471 54.5482 li
97.1471 54.375 li
97.3978 54.5003 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0947 li
97.6006 54.0948 li
97.6006 54.5482 li
.0509804 .145098 .0745098 .784314 cmyk
f
97.1471 54.375 mo
97.0612 54.332 li
97.1069 54.1718 li
97.1471 54.232 li
97.1471 54.375 li
.0542099 .155402 .0795079 .693887 cmyk
f
97.1471 54.232 mo
97.1069 54.1718 li
97.1646 53.9702 li
97.6006 54.0947 li
97.1471 54.0947 li
97.1471 54.232 li
.054902 .152941 .0784314 .772549 cmyk
f
97.3978 54.5003 mo
97.1471 54.375 li
97.1471 54.232 li
97.1471 54.0947 li
97.6006 54.0947 li
97.3978 54.5003 li
f
95.6797 90.8314 mo
87.5761 90.8314 li
87.8352 89.9245 li
95.6796 89.9245 li
96.5866 90.3779 li
95.6797 90.8314 li
.0235294 .067451 .0345098 .301176 cmyk
f
96.5866 90.3779 mo
95.6796 89.9245 li
96.6146 89.9245 li
96.8783 90.2321 li
96.5866 90.3779 li
.0376009 .107789 .055148 .481292 cmyk
f
96.8783 90.2321 mo
96.6146 89.9245 li
96.9994 89.9245 li
97.0612 90.1406 li
96.8783 90.2321 li
.0461361 .132257 .0676663 .590542 cmyk
f
86.6329 90.8314 mo
79.9125 90.8314 li
79.9125 89.9245 li
86.892 89.9245 li
86.6329 90.8314 li
79.0055 90.8314 mo
69.2436 90.8314 li
68.8808 89.9245 li
79.0055 89.9245 li
79.0055 90.8314 li
68.2668 90.8314 mo
66.7092 90.8314 li
67.4866 89.9245 li
67.904 89.9245 li
68.2668 90.8314 li
.0235294 .067451 .0345098 .301176 cmyk
f
69.2436 90.8314 mo
68.2668 90.8314 li
67.904 89.9245 li
68.8808 89.9245 li
69.2436 90.8314 li
.0376009 .107789 .055148 .481292 cmyk
f
79.9125 90.8314 mo
79.0055 90.8314 li
79.0055 89.9245 li
79.9125 89.9245 li
79.9125 90.8314 li
f
65.5147 90.8314 mo
57.1198 90.8314 li
56.3424 89.9245 li
66.2921 89.9245 li
65.5147 90.8314 li
55.9253 90.8314 mo
54.3675 90.8314 li
54.7302 89.9245 li
55.1479 89.9245 li
55.9253 90.8314 li
53.3907 90.8314 mo
43.6288 90.8314 li
43.6288 89.9245 li
53.7535 89.9245 li
53.3907 90.8314 li
42.7218 90.8314 mo
36.0016 90.8314 li
35.7425 89.9245 li
42.7218 89.9245 li
42.7218 90.8314 li
35.0584 90.8314 mo
26.9551 90.8314 li
26.0481 90.3779 li
26.9551 89.9245 li
34.7993 89.9245 li
35.0584 90.8314 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.6288 90.8314 mo
42.7218 90.8314 li
42.7218 89.9245 li
43.6288 89.9245 li
43.6288 90.8314 li
.0376009 .107789 .055148 .481292 cmyk
f
57.1198 90.8314 mo
55.9253 90.8314 li
55.1479 89.9245 li
56.3424 89.9245 li
57.1198 90.8314 li
f
36.0016 90.8314 mo
35.0584 90.8314 li
34.7993 89.9245 li
35.7425 89.9245 li
36.0016 90.8314 li
f
54.3675 90.8314 mo
53.3907 90.8314 li
53.7535 89.9245 li
54.7302 89.9245 li
54.3675 90.8314 li
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
.0235294 .067451 .0345098 .301176 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0235294 .0666667 .0352941 .901961 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.113725 .14902 .12549 .721569 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0376009 .107789 .055148 .481292 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0392157 .105882 .054902 .843137 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.113725 .14902 .12549 .721569 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
.168627 .196078 .176471 .611765 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0392157 .105882 .054902 .843137 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0901961 .156863 .109804 .733333 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0470588 .129412 .0666667 .807843 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0901961 .156863 .109804 .733333 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0470588 .129412 .0666667 .807843 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0784314 .160784 .101961 .741176 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.0612 90.1406 mo
96.9994 89.9245 li
97.1471 89.9245 li
97.1471 90.0977 li
97.0612 90.1406 li
.0512111 .146805 .0751096 .655502 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.3978 89.9723 li
97.1471 90.0977 li
97.1471 89.9245 li
97.6006 89.9245 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0509804 .145098 .0745098 .784314 cmyk
f
26.0481 90.3779 mo
25.7564 90.2321 li
26.0201 89.9245 li
26.9551 89.9245 li
26.0481 90.3779 li
.0376009 .107789 .055148 .481292 cmyk
f
25.7564 90.2321 mo
25.5736 90.1406 li
25.6353 89.9245 li
26.0201 89.9245 li
25.7564 90.2321 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.5736 90.1406 mo
25.4876 90.0977 li
25.4876 89.9245 li
25.6353 89.9245 li
25.5736 90.1406 li
.0512111 .146805 .0751096 .655502 cmyk
f
25.0342 90.3779 mo
25.0342 89.9245 li
25.4876 89.9245 li
25.4876 90.0977 li
25.237 89.9723 li
25.0342 90.3779 li
.0509804 .145098 .0745098 .784314 cmyk
f
66.7092 90.8314 mo
65.5147 90.8314 li
66.2921 89.9245 li
67.4866 89.9245 li
66.7092 90.8314 li
.0376009 .107789 .055148 .481292 cmyk
f
87.5761 90.8314 mo
86.6329 90.8314 li
86.892 89.9245 li
87.8352 89.9245 li
87.5761 90.8314 li
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0235294 .067451 .0345098 .301176 cmyk
f
97.6006 90.378 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.378 li
.0235294 .0666667 .0352941 .901961 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0376009 .107789 .055148 .481292 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
.184314 .223529 .196078 .568627 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
.165444 .175471 .170457 .27574 cmyk
f
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.175317 .199923 .184544 .387543 cmyk
f
45.0962 117.137 mo
44.1612 117.137 li
44.981 116.181 li
60.3032 108.52 li
61.3172 109.027 li
45.0962 117.137 li
.0235294 .067451 .0345098 .301176 cmyk
f
43.3781 117.996 mo
43.1753 117.591 li
43.5196 117.886 li
44.1612 117.137 li
45.0962 117.137 li
43.3781 117.996 li
.0235294 .0666667 .0352941 .901961 cmyk
f
44.1612 117.137 mo
43.8451 117.137 li
44.0393 116.652 li
44.981 116.181 li
44.1612 117.137 li
.0376009 .107789 .055148 .481292 cmyk
f
43.5196 117.886 mo
43.1753 117.591 li
43.1753 117.591 li
43.5963 117.759 li
43.8451 117.137 li
44.1612 117.137 li
43.5196 117.886 li
.0392157 .105882 .054902 .843137 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
f
43.8451 117.137 mo
43.6288 117.137 li
43.6288 116.857 li
44.0393 116.652 li
43.8451 117.137 li
.0461361 .132257 .0676663 .590542 cmyk
f
43.5963 117.759 mo
43.1753 117.591 li
43.1753 117.591 li
43.6288 117.591 li
43.6288 117.137 li
43.8451 117.137 li
43.5963 117.759 li
.0470588 .129412 .0666667 .807843 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
f
43.6288 117.137 mo
43.5174 117.137 li
43.4612 116.941 li
43.6288 116.857 li
43.6288 117.137 li
.0512111 .146805 .0751096 .655502 cmyk
f
43.6288 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.6113 117.466 li
43.5174 117.137 li
43.6288 117.137 li
43.6288 117.591 li
.0509804 .145098 .0745098 .784314 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
43.1753 117.591 li
f
43.5174 117.137 mo
43.418 117.137 li
43.3306 117.006 li
43.4612 116.941 li
43.5174 117.137 li
.0542099 .155402 .0795079 .693887 cmyk
f
43.1753 117.591 mo
43.5526 117.339 li
43.418 117.137 li
43.5174 117.137 li
43.6113 117.466 li
43.1753 117.591 li
.054902 .152941 .0784314 .772549 cmyk
f
43.1753 117.591 mo
43.1753 117.591 li
43.1753 117.591 li
42.9725 117.185 li
43.3306 117.006 li
43.418 117.137 li
43.5526 117.339 li
43.1753 117.591 li
43.1753 117.591 li
f
62.3312 108.52 mo
61.3172 108.013 li
67.8516 104.746 li
68.46 105.455 li
62.3312 108.52 li
69.2961 105.037 mo
68.6877 104.327 li
72.8357 102.254 li
73.1737 103.098 li
69.2961 105.037 li
73.9876 102.691 mo
73.6496 101.847 li
79.0055 99.1686 li
79.0055 100.183 li
73.9876 102.691 li
79.9125 99.7291 mo
79.9125 98.7151 li
85.125 96.1088 li
84.7871 97.2917 li
79.9125 99.7291 li
.0235294 .067451 .0345098 .301176 cmyk
f
73.1737 103.098 mo
72.8357 102.254 li
73.6496 101.847 li
73.9876 102.691 li
73.1737 103.098 li
.0376009 .107789 .055148 .481292 cmyk
f
68.46 105.455 mo
67.8516 104.746 li
68.6877 104.327 li
69.2961 105.037 li
68.46 105.455 li
f
79.0055 100.183 mo
79.0055 99.1686 li
79.9125 98.7151 li
79.9125 99.7291 li
79.0055 100.183 li
f
85.8875 96.7415 mo
86.2255 95.5585 li
95.6797 90.8314 li
96.7533 90.8314 li
96.2761 91.5472 li
85.8875 96.7415 li
.0235294 .067451 .0345098 .301176 cmyk
f
96.2761 91.5472 mo
96.7533 90.8314 li
97.6006 90.8314 li
97.6006 90.378 li
97.8034 90.7835 li
96.2761 91.5472 li
.0235294 .0666667 .0352941 .901961 cmyk
f
84.7871 97.2917 mo
85.125 96.1088 li
86.2255 95.5585 li
85.8875 96.7415 li
84.7871 97.2917 li
.0376009 .107789 .055148 .481292 cmyk
f
96.7533 90.8314 mo
95.6797 90.8314 li
96.5866 90.3779 li
96.9383 90.5538 li
96.7533 90.8314 li
f
97.6006 90.8314 mo
96.7533 90.8314 li
96.9383 90.5538 li
97.3978 90.7835 li
97.6006 90.3779 li
97.6006 90.378 li
97.6006 90.8314 li
.0392157 .105882 .054902 .843137 cmyk
f
96.9383 90.5538 mo
96.5866 90.3779 li
96.8783 90.2321 li
97.0327 90.4122 li
96.9383 90.5538 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0461361 .132257 .0676663 .590542 cmyk
f
97.3978 90.7835 mo
96.9383 90.5538 li
97.0327 90.4122 li
97.2563 90.673 li
97.6006 90.3779 li
97.6006 90.3779 li
97.3978 90.7835 li
.0470588 .129412 .0666667 .807843 cmyk
f
97.0327 90.4122 mo
96.8783 90.2321 li
97.0612 90.1406 li
97.1069 90.3009 li
97.0327 90.4122 li
97.6006 90.3779 mo
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
.0512111 .146805 .0751096 .655502 cmyk
f
97.2563 90.673 mo
97.0327 90.4122 li
97.1069 90.3009 li
97.1646 90.5025 li
97.6006 90.3779 li
97.6006 90.3779 li
97.2563 90.673 li
.0509804 .145098 .0745098 .784314 cmyk
f
97.6006 90.3779 mo
97.6005 90.3779 li
97.6006 90.3779 li
97.6006 90.3779 li
97.1069 90.3009 mo
97.0612 90.1406 li
97.1471 90.0977 li
97.1471 90.2406 li
97.1069 90.3009 li
.0542099 .155402 .0795079 .693887 cmyk
f
97.6006 90.3779 mo
97.6005 90.3779 li
97.2233 90.1264 li
97.1471 90.2406 li
97.1471 90.0977 li
97.3978 89.9723 li
97.6006 90.3779 li
.054902 .152941 .0784314 .772549 cmyk
f
97.1646 90.5025 mo
97.1069 90.3009 li
97.1471 90.2406 li
97.2233 90.1264 li
97.6005 90.3779 li
97.6006 90.3779 li
97.1646 90.5025 li
f
79.459 117.591 mo
79.459 117.591 li
.176471 .2 .184314 .603922 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
.180392 .211765 .192157 .580392 cmyk
f
78.4731 117.137 mo
77.5381 117.137 li
61.3172 109.027 li
62.3312 108.52 li
77.6533 116.181 li
78.4731 117.137 li
.0235294 .067451 .0345098 .301176 cmyk
f
79.2562 117.996 mo
77.5381 117.137 li
78.4731 117.137 li
79.1147 117.886 li
79.459 117.591 li
79.2562 117.996 li
.0235294 .0666667 .0352941 .901961 cmyk
f
78.7892 117.137 mo
78.4731 117.137 li
77.6533 116.181 li
78.595 116.652 li
78.7892 117.137 li
.0376009 .107789 .055148 .481292 cmyk
f
79.1147 117.886 mo
78.4731 117.137 li
78.7892 117.137 li
79.038 117.759 li
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
79.1147 117.886 li
.0392157 .105882 .054902 .843137 cmyk
f
79.0055 117.137 mo
78.7892 117.137 li
78.595 116.652 li
79.0055 116.857 li
79.0055 117.137 li
.0461361 .132257 .0676663 .590542 cmyk
f
79.038 117.759 mo
78.7892 117.137 li
79.0055 117.137 li
79.0055 117.591 li
79.459 117.591 li
79.038 117.759 li
.0470588 .129412 .0666667 .807843 cmyk
f
79.1169 117.137 mo
79.0055 117.137 li
79.0055 116.857 li
79.1731 116.941 li
79.1169 117.137 li
.0512111 .146805 .0751096 .655502 cmyk
f
79.459 117.591 mo
79.0055 117.591 li
79.0055 117.137 li
79.1169 117.137 li
79.023 117.466 li
79.459 117.591 li
.0509804 .145098 .0745098 .784314 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
.0470588 .129412 .0666667 .807843 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
.0509804 .145098 .0745098 .784314 cmyk
f
79.2163 117.137 mo
79.1169 117.137 li
79.1731 116.941 li
79.3037 117.006 li
79.2163 117.137 li
.0542099 .155402 .0795079 .693887 cmyk
f
79.459 117.591 mo
79.459 117.137 li
79.2163 117.137 li
79.3037 117.006 li
79.6618 117.185 li
79.459 117.591 li
.054902 .152941 .0784314 .772549 cmyk
f
79.459 117.591 mo
79.459 117.591 li
79.023 117.466 li
79.1169 117.137 li
79.2163 117.137 li
79.459 117.137 li
79.459 117.591 li
79.459 117.591 li
79.459 117.591 li
f
60.3032 108.52 mo
54.1744 105.455 li
54.7828 104.746 li
61.3172 108.013 li
60.3032 108.52 li
53.3383 105.037 mo
49.4607 103.098 li
49.7987 102.253 li
53.9467 104.327 li
53.3383 105.037 li
48.6467 102.691 mo
43.6288 100.182 li
43.6288 99.1684 li
48.9847 101.846 li
48.6467 102.691 li
42.7218 99.7289 mo
37.8473 97.2916 li
37.5094 96.1086 li
42.7218 98.7149 li
42.7218 99.7289 li
36.7469 96.7414 mo
26.3586 91.5472 li
25.8815 90.8314 li
26.9551 90.8314 li
36.4089 95.5584 li
36.7469 96.7414 li
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
.0235294 .067451 .0345098 .301176 cmyk
f
26.3586 91.5472 mo
24.8314 90.7835 li
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.8314 li
25.8815 90.8314 li
26.3586 91.5472 li
.0235294 .0666667 .0352941 .901961 cmyk
f
43.6288 100.182 mo
42.7218 99.7289 li
42.7218 98.7149 li
43.6288 99.1684 li
43.6288 100.182 li
.0376009 .107789 .055148 .481292 cmyk
f
37.8473 97.2916 mo
36.7469 96.7414 li
36.4089 95.5584 li
37.5094 96.1086 li
37.8473 97.2916 li
f
49.4607 103.098 mo
48.6467 102.691 li
48.9847 101.846 li
49.7987 102.253 li
49.4607 103.098 li
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
.0512111 .146805 .0751096 .655502 cmyk
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
.0509804 .145098 .0745098 .784314 cmyk
f
54.1744 105.455 mo
53.3383 105.037 li
53.9467 104.327 li
54.7828 104.746 li
54.1744 105.455 li
.0376009 .107789 .055148 .481292 cmyk
f
26.9551 90.8314 mo
25.8815 90.8314 li
25.6964 90.5538 li
26.0481 90.3779 li
26.9551 90.8314 li
f
25.8815 90.8314 mo
25.0342 90.8314 li
25.0342 90.3779 li
25.237 90.7835 li
25.6964 90.5538 li
25.8815 90.8314 li
.0392157 .105882 .054902 .843137 cmyk
f
25.6964 90.5538 mo
25.602 90.4122 li
25.7564 90.2321 li
26.0481 90.3779 li
25.6964 90.5538 li
25.0342 90.3779 mo
25.0342 90.3779 li
.0461361 .132257 .0676663 .590542 cmyk
f
25.237 90.7835 mo
25.0342 90.3779 li
25.3785 90.673 li
25.602 90.4122 li
25.6964 90.5538 li
25.237 90.7835 li
.0470588 .129412 .0666667 .807843 cmyk
f
25.602 90.4122 mo
25.5278 90.3009 li
25.5736 90.1406 li
25.7564 90.2321 li
25.602 90.4122 li
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
.0512111 .146805 .0751096 .655502 cmyk
f
25.3785 90.673 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.4702 90.5025 li
25.5278 90.3009 li
25.602 90.4122 li
25.3785 90.673 li
.0509804 .145098 .0745098 .784314 cmyk
f
25.0342 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
25.5278 90.3009 mo
25.4876 90.2406 li
25.4876 90.0977 li
25.5736 90.1406 li
25.5278 90.3009 li
.0542099 .155402 .0795079 .693887 cmyk
f
25.4702 90.5025 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.4876 90.3779 li
25.4876 90.2406 li
25.5278 90.3009 li
25.4702 90.5025 li
.054902 .152941 .0784314 .772549 cmyk
f
25.4876 90.3779 mo
25.0342 90.3779 li
25.0342 90.3779 li
25.0342 90.3779 li
25.237 89.9723 li
25.4876 90.0977 li
25.4876 90.2406 li
25.4876 90.3779 li
f
61.3172 109.027 mo
60.3032 108.52 li
61.3172 108.013 li
62.3312 108.52 li
61.3172 109.027 li
.0376009 .107789 .055148 .481292 cmyk
f
0 0 0 1 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2016 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
/three <1C60D8A8C9B7A73D83638F79AE86E17D4CE334FAA90E146D21CDA0FE
B71815E9499D6C6A6E581E78F34038D792771470EBF894DABD777E9B4FDE68E7
E1544BCF1EFB2DCE59357B716B4D2ADF3EAC3A9FF8BD07EC79AF5536B9B74185
F8F7489AD909079119E88D2BB755D6F6AC02C01BDFADB347EC55DAC49C8BB047
661CC7AAA3BDC1DB8E01EC56137B53ED31B24F4502353853D049BB0515CA4217
D33D10484933F30AD1EAA43CFDF00AFA5462EE9B1772CE60A3392B8D9C1A3598
CF2273E36A1FF3A58B2E24B1EACE5E34650257902678998DAAFF235764CCCA14
3A> |-
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
/five <1C60D8A8C9B7A73DB97C1FD4849B14157B765BEEE66B9438731A1E1DB
F6D904609867EBF49E3E19DC6BA786F7382AB36C8CFA3690DF4F8E7A258691DF
DD71792965BBA1DCE407BE309901C1513A762BED3C73A852D4EDA1BE20A2B364
C59E2224D36D9C8BEE5DE8D6C54C49D0F66DB7448A8FCE0E63D5DEE7BBBA026A
808CDA9AD5556005639017FF42B963FB833B4B64B6445B350600BDCDD563F> |-
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
/seven <1C60D8A8C9B7A73DFE31854B8CA51F015562FECC80A8475F282F7722
52E10D05B7D43981266F60616595AB1BFBC47BFB03D1BE> |-
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BSIKJD+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/BSIKJD+TimesNewRomanPSMT*1 
[49{/.notdef}rp /one /two /three /four /five /six /seven 
/eight 199{/.notdef}rp]
BSIKJD+TimesNewRomanPSMT nf
BSIKJD+TimesNewRomanPSMT*1 [7.97011 0 0 -7.97011 0 0 ]msf
37.9292 126.663 mo
(1)sh
83.9331 117.59 mo
(2)sh
92.1006 105.487 mo
(3)sh
101.683 56.5908 mo
(4)sh
73.2178 24.7822 mo
(5)sh
49.6001 21.2109 mo
(6)sh
18.6294 55.4243 mo
(7)sh
18.6294 84.9346 mo
(8)sh
102.163 90.163 mo
102.069 89.2308 li
102.064 89.1807 li
101.733 88.1177 li
100.778 88.4147 li
101.079 89.3817 li
101.168 90.264 li
102.163 90.163 li
cp
101.22 87.1484 mo
101.191 87.0966 li
101.168 87.054 li
100.443 86.1751 li
99.7138 85.5731 li
99.0772 86.3443 li
99.7327 86.8854 li
100.335 87.6158 li
100.34 87.625 li
101.22 87.1484 li
cp
98.7713 85.0186 mo
98.5971 84.9239 li
98.5538 84.9004 li
97.4363 84.5535 li
96.659 84.4745 li
96.558 85.4694 li
97.2356 85.5383 li
98.163 85.8262 li
98.2939 85.8972 li
98.7713 85.0186 li
cp
95.5631 84.5007 mo
95.0931 84.5485 li
95.0432 84.5535 li
93.9257 84.9004 li
93.4809 85.1421 li
93.9583 86.0208 li
94.3164 85.8262 li
95.2439 85.5383 li
95.6641 85.4956 li
95.5631 84.5007 li
cp
92.5662 85.7378 mo
92.0733 86.1447 li
92.0364 86.1751 li
91.3111 87.0541 li
91.1366 87.3758 li
92.0157 87.8524 li
92.144 87.6158 li
92.7468 86.8854 li
93.2028 86.509 li
92.5662 85.7378 li
cp
90.6696 88.3648 mo
90.4308 89.1328 li
90.4158 89.1807 li
90.2994 90.3274 li
90.2943 90.3779 li
90.3088 90.5213 li
91.3037 90.4204 li
91.2994 90.3779 li
91.4006 89.3818 li
91.6245 88.6617 li
90.6696 88.3648 li
cp
90.4098 91.5162 mo
90.4108 91.526 li
90.4158 91.576 li
90.7627 92.6915 li
91.2257 93.5444 li
92.1046 93.0674 li
91.6884 92.3007 li
91.3856 91.3271 li
90.9082 91.4756 li
91.4056 91.4251 li
91.4046 91.4153 li
90.4098 91.5162 li
cp
91.8951 94.4095 mo
92.006 94.5438 li
92.0363 94.5806 li
92.9159 95.3078 li
93.6444 95.7036 li
94.1218 94.8249 li
93.4785 94.4754 li
92.7469 93.8706 li
92.6664 93.773 li
91.8951 94.4095 li
cp
94.6698 96.0867 mo
94.9957 96.1876 li
95.0436 96.2024 li
96.1902 96.3178 li
96.2403 96.3228 li
96.8442 96.262 li
96.7439 95.2671 li
96.2402 95.3178 li
95.2435 95.2175 li
94.9655 95.1314 li
94.6698 96.0868 li
cp
97.9188 96.053 mo
98.5062 95.8712 li
98.5536 95.8565 li
99.5635 95.3078 li
99.858 95.0644 li
99.2208 94.2936 li
99.001 94.4754 li
98.1632 94.9306 li
97.6231 95.0977 li
97.9188 96.053 li
cp
100.657 94.3214 mo
101.138 93.7391 li
101.168 93.7019 li
101.717 92.6914 li
101.789 92.4604 li
100.834 92.1635 li
100.791 92.3008 li
100.336 93.1399 li
99.8858 93.6849 li
100.657 94.3214 li
cp
102.081 91.4026 mo
102.18 90.4284 li
101.185 90.3275 li
101.086 91.3017 li
cp
.730469 0 1 0 cmyk
f
81.4625 133.533 mo
82.0784 133.87 82.7721 134.086 83.5236 134.197 cv
83.6692 133.208 li
83.0158 133.111 82.4386 132.927 81.9418 132.656 cv
81.4625 133.533 li
cp
84.5818 134.283 mo
84.7882 134.285 li
85.3852 134.285 86.0107 134.232 86.661 134.128 cv
86.5038 133.141 li
85.899 133.237 85.3252 133.285 84.7882 133.285 cv
84.603 133.283 li
84.5818 134.283 li
cp
87.6749 133.931 mo
88.3133 133.786 88.9721 133.597 89.6479 133.368 cv
89.3261 132.421 li
88.6798 132.64 88.0538 132.819 87.4529 132.956 cv
87.6749 133.931 li
cp
90.6078 133.018 mo
91.2202 132.781 91.8448 132.512 92.4788 132.213 cv
92.0525 131.309 li
91.4384 131.598 90.8354 131.858 90.2466 132.086 cv
90.6078 133.018 li
cp
93.391 131.766 mo
93.9786 131.467 94.5732 131.143 95.1727 130.796 cv
94.6712 129.93 li
94.0867 130.269 93.5079 130.584 92.9372 130.875 cv
93.391 131.766 li
cp
96.0426 130.277 mo
96.6068 129.931 97.1744 129.565 97.7438 129.179 cv
97.1831 128.351 li
96.6259 128.728 96.071 129.086 95.52 129.424 cv
96.0426 130.277 li
cp
98.575 128.603 mo
99.1166 128.22 99.659 127.819 100.201 127.401 cv
99.5904 126.609 li
99.0591 127.019 98.5274 127.411 97.9969 127.787 cv
98.5749 128.603 li
cp
100.995 126.777 mo
101.514 126.361 102.032 125.93 102.548 125.485 cv
101.894 124.728 li
101.388 125.165 100.879 125.589 100.37 125.997 cv
100.995 126.777 li
cp
103.305 124.818 mo
103.802 124.373 104.296 123.915 104.785 123.444 cv
104.092 122.723 li
103.611 123.186 103.126 123.636 102.638 124.073 cv
103.305 124.818 li
cp
105.506 122.738 mo
105.979 122.266 106.448 121.783 106.911 121.288 cv
106.181 120.605 li
105.726 121.091 105.265 121.566 104.8 122.029 cv
105.506 122.738 li
cp
107.594 120.545 mo
108.043 120.048 108.485 119.541 108.921 119.024 cv
108.156 118.38 li
107.728 118.888 107.293 119.387 106.852 119.875 cv
107.594 120.545 li
cp
109.564 118.246 mo
109.986 117.725 110.401 117.195 110.808 116.655 cv
110.009 116.054 li
109.61 116.583 109.203 117.104 108.787 117.616 cv
109.564 118.246 li
cp
111.406 115.846 mo
111.799 115.304 112.184 114.752 112.558 114.193 cv
111.727 113.636 li
111.36 114.186 110.983 114.727 110.596 115.259 cv
111.406 115.846 li
cp
113.111 113.35 mo
113.474 112.784 113.826 112.211 114.168 111.63 cv
113.305 111.123 li
112.971 111.693 112.625 112.255 112.269 112.81 cv
113.111 113.35 li
cp
114.67 110.754 mo
114.999 110.166 115.316 109.572 115.62 108.97 cv
114.728 108.519 li
114.43 109.108 114.12 109.69 113.797 110.265 cv
114.67 110.754 li
cp
116.067 108.063 mo
116.358 107.455 116.636 106.84 116.899 106.219 cv
115.978 105.829 li
115.721 106.436 115.449 107.037 115.165 107.631 cv
116.067 108.063 li
cp
117.283 105.283 mo
117.532 104.656 117.766 104.023 117.984 103.384 cv
117.038 103.061 li
116.825 103.684 116.597 104.302 116.354 104.914 cv
117.283 105.283 li
cp
118.299 102.422 mo
118.501 101.778 118.687 101.129 118.855 100.475 cv
117.886 100.226 li
117.723 100.863 117.542 101.495 117.345 102.123 cv
118.299 102.422 li
cp
119.093 99.4916 mo
119.243 98.8343 119.376 98.1724 119.489 97.5063 cv
118.503 97.3385 li
118.393 97.9858 118.265 98.6294 118.118 99.269 cv
119.093 99.4916 li
cp
119.645 96.5074 mo
119.739 95.8393 119.813 95.1673 119.868 94.4919 cv
118.871 94.4114 li
118.818 95.0668 118.746 95.7191 118.654 96.368 cv
119.645 96.5074 li
cp
119.934 93.4817 mo
119.961 92.9361 119.975 92.3886 119.975 91.8392 cv
119.975 91.7102 119.975 91.581 119.973 91.4518 cv
118.973 91.4638 li
118.975 91.589 118.975 91.7142 118.975 91.8392 cv
118.975 92.3716 118.962 92.9025 118.935 93.4315 cv
119.934 93.4817 li
cp
119.945 90.4368 mo
119.916 89.7638 119.865 89.0885 119.792 88.4114 cv
118.798 88.5187 li
118.868 89.1744 118.917 89.8284 118.946 90.4803 cv
119.945 90.4368 li
cp
119.667 87.4036 mo
119.573 86.7379 119.458 86.0706 119.319 85.4023 cv
118.34 85.6049 li
118.474 86.2521 118.586 86.8982 118.676 87.5428 cv
119.667 87.4036 li
cp
119.098 84.4114 mo
118.941 83.7594 118.762 83.1066 118.56 82.4534 cv
117.605 82.7484 li
117.8 83.3814 117.974 84.0138 118.125 84.6453 cv
119.098 84.4114 li
cp
118.246 81.4885 mo
118.03 80.8608 117.793 80.2329 117.534 79.6052 cv
117.528 79.5886 li
116.604 79.9722 li
116.61 79.9866 li
116.861 80.5957 117.091 81.2046 117.3 81.8132 cv
118.246 81.4885 li
cp
117.054 78.6373 mo
116.71 78.0481 116.29 77.4883 115.807 76.9522 cv
115.064 77.621 li
115.508 78.1146 115.886 78.6204 116.19 79.1408 cv
117.054 78.6373 li
cp
115.085 76.2089 mo
114.606 75.7502 114.083 75.3075 113.523 74.8767 cv
112.913 75.6691 li
113.449 76.0818 113.945 76.5019 114.393 76.9311 cv
115.085 76.2089 li
cp
112.703 74.2709 mo
112.164 73.8886 111.599 73.5146 111.014 73.1462 cv
110.481 73.9927 li
111.054 74.353 111.604 74.7169 112.124 75.0862 cv
112.703 74.2709 li
cp
110.153 72.6168 mo
109.586 72.2757 109.004 71.9385 108.411 71.603 cv
107.919 72.4733 li
108.506 72.8055 109.08 73.1384 109.637 73.4736 cv
110.153 72.6169 li
cp
107.534 71.1119 mo
106.954 70.7898 106.367 70.4686 105.776 70.1465 cv
105.297 71.0243 li
105.887 71.3461 106.473 71.6662 107.049 71.9862 cv
107.534 71.1119 li
cp
104.899 69.6681 mo
104.315 69.3491 103.73 69.0285 103.15 68.7047 cv
102.663 69.5782 li
103.248 69.9043 103.835 70.2263 104.42 70.5458 cv
104.899 69.6681 li
cp
102.279 68.2149 mo
101.699 67.8851 101.124 67.5513 100.561 67.2119 cv
100.045 68.0685 li
100.617 68.4132 101.199 68.7512 101.785 69.0843 cv
102.279 68.2149 li
cp
99.7156 66.693 mo
99.1489 66.3381 98.596 65.9766 98.0619 65.6071 cv
97.4929 66.4295 li
98.0416 66.8091 98.6073 67.1788 99.1849 67.5405 cv
99.7156 66.693 li
cp
97.2593 65.0347 mo
96.7212 64.6386 96.2066 64.2328 95.7209 63.8157 cv
95.0695 64.5744 li
95.5767 65.01 96.111 65.4311 96.6664 65.84 cv
97.2593 65.0347 li
cp
94.995 63.1629 mo
94.5127 62.7075 94.0663 62.2387 93.6621 61.7547 cv
92.8946 62.3958 li
93.3273 62.9139 93.8011 63.4109 94.3085 63.89 cv
94.995 63.1629 li
cp
93.0716 60.9944 mo
92.9927 60.8845 92.9159 60.7739 92.8414 60.6625 cv
92.5434 60.2168 92.2756 59.7801 92.0354 59.3513 cv
91.163 59.84 li
91.4165 60.2927 91.6982 60.7519 92.0102 61.2184 cv
92.091 61.3393 92.1742 61.4592 92.2595 61.5779 cv
93.0716 60.9944 li
cp
91.5848 58.4911 mo
91.2872 57.8805 91.0448 57.2857 90.8495 56.7033 cv
89.9014 57.0211 li
90.1107 57.6456 90.3699 58.281 90.6859 58.9292 cv
91.5848 58.4911 li
cp
90.5756 55.779 mo
90.4098 55.1361 90.2987 54.5064 90.2318 53.8846 cv
89.2375 53.9917 li
89.3094 54.6591 89.429 55.3374 89.6072 56.0287 cv
90.5756 55.779 li
cp
90.1619 52.9218 mo
90.1544 52.7273 90.1507 52.5333 90.1508 52.3397 cv
90.1507 51.8857 90.1705 51.4339 90.2061 50.9824 cv
89.2092 50.9039 li
89.1718 51.3785 89.1507 51.8566 89.1508 52.3397 cv
89.1507 52.5457 89.1546 52.7526 89.1626 52.9604 cv
90.1618 52.9218 li
cp
90.3055 50.0104 mo
90.3857 49.3651 90.4921 48.7182 90.6128 48.0654 cv
89.6295 47.8836 li
89.5065 48.5491 89.3966 49.2155 89.3131 49.8872 cv
90.3055 50.0104 li
cp
90.801 47.0911 mo
90.9295 46.447 91.0658 45.7951 91.1979 45.1318 cv
90.2171 44.9365 li
90.0863 45.5937 89.9501 46.2452 89.8203 46.8954 cv
90.801 47.0911 li
cp
91.3885 44.1433 mo
91.5092 43.4907 91.6205 42.8256 91.7113 42.1444 cv
90.72 42.0123 li
90.6321 42.6719 90.5238 43.3202 90.4052 43.9613 cv
91.3885 44.1433 li
cp
91.8283 41.1338 mo
91.8929 40.471 91.934 39.7924 91.942 39.0952 cv
90.9421 39.0837 li
90.9344 39.7491 90.8952 40.3989 90.833 41.0367 cv
91.8283 41.1338 li
cp
91.9294 38.0714 mo
91.9138 37.6439 91.8848 37.2094 91.8403 36.7673 cv
91.8158 36.5239 91.7902 36.2822 91.7636 36.042 cv
90.7697 36.152 li
90.7959 36.3889 90.8211 36.6273 90.8453 36.8674 cv
90.8876 37.2877 90.9152 37.7009 90.9301 38.1079 cv
91.9294 38.0714 li
cp
91.6457 35.042 mo
91.5608 34.3642 91.4673 33.6993 91.3653 33.0473 cv
90.3773 33.2019 li
90.4777 33.8435 90.5698 34.4982 90.6534 35.1663 cv
91.6457 35.042 li
cp
91.2015 32.0529 mo
91.0846 31.3785 90.9585 30.7184 90.823 30.0723 cv
89.8443 30.2775 li
89.9772 30.9118 90.1012 31.5604 90.2161 32.2236 cv
91.2015 32.0529 li
cp
90.6068 29.0867 mo
90.4536 28.4184 90.2901 27.7656 90.1165 27.1283 cv
89.1516 27.3911 li
89.3215 28.015 89.4818 28.6546 89.6321 29.3102 cv
90.6068 29.0867 li
cp
89.8405 26.1563 mo
89.6456 25.4975 89.4395 24.8559 89.2224 24.2313 cv
88.2779 24.5595 li
88.4896 25.169 88.691 25.7957 88.8816 26.44 cv
89.8405 26.1563 li
cp
88.8783 23.2795 mo
88.6361 22.6353 88.3816 22.0101 88.1152 21.4036 cv
87.1996 21.8057 li
87.4586 22.3953 87.7062 23.0037 87.9423 23.6315 cv
88.8783 23.2795 li
cp
87.694 20.4812 mo
87.3986 19.8587 87.0899 19.2569 86.7682 18.6757 cv
85.8933 19.16 li
86.2046 19.7225 86.5038 20.3056 86.7906 20.9099 cv
87.694 20.4812 li
cp
86.2615 17.7951 mo
85.9077 17.2034 85.5396 16.6345 85.1576 16.088 cv
84.3379 16.6609 li
84.7061 17.1876 85.0613 17.7365 85.4033 18.3084 cv
86.2615 17.7951 li
cp
84.5589 15.2647 mo
84.1433 14.7154 83.7127 14.1905 83.2674 13.6897 cv
82.5201 14.3542 li
82.9475 14.835 83.3614 15.3393 83.7614 15.868 cv
84.5589 15.2647 li
cp
82.5745 12.9417 mo
82.0972 12.4475 81.6046 11.979 81.0971 11.5357 cv
80.4392 12.2888 li
80.9252 12.7134 81.3973 13.1623 81.8551 13.6364 cv
82.5745 12.9417 li
cp
80.314 10.881 mo
79.7797 10.4536 79.2303 10.0524 78.6664 9.67689 cv
78.1121 10.5092 li
78.6519 10.8687 79.1778 11.2527 79.6894 11.6619 cv
80.314 10.881 li
cp
77.8039 9.1293 mo
77.2216 8.77712 76.6251 8.45073 76.0149 8.14953 cv
75.5723 9.04622 li
76.1572 9.33501 76.7287 9.64771 77.2864 9.98497 cv
77.8039 9.12931 li
cp
75.0938 7.7184 mo
74.475 7.44418 73.8432 7.19449 73.199 6.96871 cv
72.8682 7.91243 li
73.4878 8.1296 74.0948 8.36949 74.6887 8.63267 cv
75.0938 7.71841 li
cp
72.2316 6.65035 mo
71.5879 6.45202 70.9328 6.27637 70.2667 6.1228 cv
70.0421 7.09723 li
70.6854 7.24555 71.3172 7.41498 71.9371 7.60601 cv
72.2316 6.65036 li
cp
69.2724 5.91141 mo
68.6141 5.78306 67.9457 5.6753 67.2678 5.58756 cv
67.1394 6.57929 li
67.797 6.6644 68.4443 6.7688 69.081 6.89294 cv
69.2724 5.91142 li
cp
66.2597 5.47246 mo
65.5944 5.40644 64.9203 5.35892 64.2379 5.32937 cv
64.1946 6.32844 li
64.8591 6.35721 65.5147 6.40346 66.161 6.46758 cv
66.2598 5.47247 li
cp
63.2256 5.29876 mo
62.9906 5.29468 62.7547 5.29264 62.5179 5.29265 cv
62.0823 5.29266 61.6435 5.29953 61.2018 5.31316 cv
61.2326 6.31269 li
61.6643 6.29937 62.0928 6.29266 62.5179 6.29266 cv
62.749 6.29265 62.9791 6.29464 63.2082 6.29862 cv
63.2256 5.29877 li
cp
60.1915 5.35577 mo
59.5262 5.39125 58.8544 5.44154 58.1764 5.50621 cv
58.2714 6.50169 li
58.9359 6.43829 59.5939 6.38906 60.2448 6.35435 cv
60.1915 5.35577 li
cp
57.1723 5.61196 mo
56.511 5.68808 55.8442 5.77747 55.1721 5.87976 cv
55.3225 6.86837 li
55.983 6.76785 56.6378 6.68009 57.2866 6.6054 cv
57.1723 5.61196 li
cp
54.1764 6.04004 mo
53.5205 6.15132 52.8598 6.27454 52.1946 6.40937 cv
52.3933 7.38944 li
53.0484 7.25665 53.6986 7.1354 54.3437 7.02595 cv
54.1764 6.04004 li
cp
51.2088 6.61694 mo
50.559 6.7588 49.9052 6.91144 49.2474 7.07458 cv
49.4882 8.04517 li
50.1371 7.88423 50.7818 7.73372 51.4221 7.59393 cv
51.2088 6.61694 li
cp
48.272 7.32342 mo
47.6288 7.49204 46.982 7.67045 46.332 7.85837 cv
46.6097 8.81903 li
47.2519 8.63336 47.8907 8.45718 48.5256 8.29073 cv
48.272 7.32342 li
cp
45.3673 8.14347 mo
44.7307 8.33569 44.0911 8.53681 43.4486 8.7466 cv
43.7591 9.6972 li
44.3946 9.48967 45.0271 9.29078 45.6563 9.10078 cv
45.3673 8.14347 li
cp
42.4947 9.06379 mo
41.8647 9.27696 41.2322 9.49826 40.5973 9.72749 cv
40.9369 10.6681 li
41.5656 10.4411 42.1917 10.222 42.8152 10.011 cv
42.4947 9.06379 li
cp
39.6538 10.0733 mo
39.0304 10.3052 38.4048 10.5445 37.7772 10.7912 cv
38.143 11.7219 li
38.765 11.4774 39.3848 11.2403 40.0024 11.0106 cv
39.6538 10.0733 li
cp
36.844 11.1627 mo
36.227 11.4114 35.6082 11.667 34.9877 11.9293 cv
35.3771 12.8504 li
35.9925 12.5902 36.6062 12.3367 37.2179 12.0901 cv
36.844 11.1627 li
cp
34.0628 12.3259 mo
33.4507 12.5939 32.8389 12.8745 32.2286 13.1682 cv
32.6623 14.0693 li
33.2615 13.7809 33.8624 13.5053 34.4638 13.242 cv
34.0628 12.3259 li
cp
31.3232 13.6142 mo
30.7255 13.9154 30.1299 14.2294 29.5375 14.5564 cv
30.0208 15.4319 li
30.602 15.111 31.1866 14.8029 31.7733 14.5072 cv
31.3232 13.6142 li
cp
28.6583 15.0528 mo
28.078 15.3879 27.5013 15.7358 26.9293 16.0969 cv
27.4631 16.9425 li
28.0237 16.5886 28.5891 16.2475 29.1583 15.9188 cv
28.6583 15.0528 li
cp
26.0806 16.6448 mo
25.5207 17.0142 24.966 17.3967 24.4174 17.7925 cv
25.0025 18.6035 li
25.5395 18.216 26.0828 17.8414 26.6314 17.4794 cv
26.0806 16.6448 li
cp
23.6041 18.3925 mo
23.0682 18.7967 22.5389 19.2141 22.0171 19.6449 cv
22.6538 20.4161 li
23.164 19.9948 23.6819 19.5864 24.2064 19.1908 cv
23.6041 18.3925 li
cp
21.2446 20.2974 mo
20.7365 20.7365 20.2363 21.1888 19.745 21.6546 cv
20.433 22.3803 li
20.913 21.9253 21.4018 21.4833 21.8985 21.054 cv
21.2446 20.2974 li
cp
19.019 22.3592 mo
18.5427 22.8326 18.0755 23.3193 17.6184 23.8196 cv
18.3567 24.4942 li
18.8028 24.0059 19.2588 23.5308 19.724 23.0685 cv
19.019 22.3592 li
cp
16.945 24.5751 mo
16.5044 25.0817 16.0742 25.6016 15.6551 26.1351 cv
16.4415 26.7528 li
16.8501 26.2326 17.2698 25.7255 17.6996 25.2313 cv
16.945 24.5751 li
cp
15.0398 26.939 mo
14.6388 27.4769 14.2491 28.028 13.8716 28.5926 cv
14.7028 29.1485 li
15.0708 28.5983 15.4506 28.0611 15.8416 27.5367 cv
15.0398 26.939 li
cp
13.3196 29.4415 mo
12.9615 30.008 12.6154 30.5876 12.2823 31.1804 cv
13.1541 31.6703 li
13.4787 31.0926 13.8159 30.5279 14.1649 29.9758 cv
13.3196 29.4415 li
cp
11.7977 32.0695 mo
11.485 32.6614 11.185 33.2659 10.8985 33.8834 cv
11.8056 34.3043 li
12.0849 33.7025 12.3772 33.1134 12.6819 32.5366 cv
11.7978 32.0695 li
cp
10.4842 34.8072 mo
10.2185 35.4206 9.96588 36.0462 9.7271 36.6843 cv
10.6637 37.0348 li
10.8965 36.4125 11.1428 35.8026 11.4018 35.2047 cv
10.4842 34.8072 li
cp
9.38431 37.6366 mo
9.16612 38.2674 8.96126 38.91 8.77034 39.5645 cv
9.73033 39.8445 li
9.91666 39.2057 10.1165 38.5788 10.3294 37.9635 cv
9.38431 37.6366 li
cp
8.49882 40.539 mo
8.32767 41.1831 8.16987 41.8385 8.02595 42.5052 cv
9.00344 42.7162 li
9.14405 42.0647 9.29819 41.4247 9.46528 40.7958 cv
8.49882 40.539 li
cp
7.82401 43.4958 mo
7.69854 44.1494 7.58628 44.8136 7.48767 45.4886 cv
8.47717 45.6332 li
8.57363 44.9728 8.68344 44.3233 8.80609 43.6844 cv
7.82401 43.4958 li
cp
7.35246 46.4901 mo
7.28328 47.0477 7.2233 47.6125 7.17283 48.1846 cv
7.16368 48.2883 7.1545 48.3922 7.1453 48.4962 cv
8.14141 48.5843 li
8.15061 48.4803 8.1598 48.3763 8.16896 48.2725 cv
8.21841 47.7121 8.27713 47.159 8.34486 46.6132 cv
7.35246 46.4901 li
cp
7.05716 49.4921 mo
6.99873 50.1531 6.94035 50.8179 6.88345 51.4859 cv
7.87984 51.5708 li
7.9366 50.9045 7.99488 50.2408 8.05327 49.5802 cv
7.05716 49.4921 li
cp
6.79991 52.4838 mo
6.74546 53.1473 6.69314 53.8136 6.64435 54.4822 cv
7.6417 54.555 li
7.69022 53.89 7.7423 53.2267 7.79656 52.5656 cv
6.79991 52.4838 li
cp
6.57426 55.4826 mo
6.52965 56.1487 6.48919 56.8168 6.45425 57.4864 cv
7.45289 57.5385 li
7.48754 56.8744 7.5277 56.2113 7.57203 55.5495 cv
6.57426 55.4826 li
cp
6.40625 58.4896 mo
6.37726 59.1582 6.35443 59.8281 6.3391 60.4987 cv
7.33884 60.5215 li
7.35399 59.8584 7.37659 59.1954 7.40531 58.5329 cv
6.40625 58.4896 li
cp
6.32193 61.5044 mo
6.31864 61.8001 6.31693 62.0958 6.31693 62.3916 cv
6.31693 62.767 6.31968 63.1424 6.32541 63.5179 cv
7.32529 63.5027 li
7.31964 63.1325 7.31692 62.7621 7.31693 62.3916 cv
7.31693 62.0996 7.31862 61.8076 7.32187 61.5156 cv
6.32193 61.5044 li
cp
6.34812 64.5254 mo
6.36827 65.1973 6.39866 65.8689 6.44067 66.5398 cv
7.43872 66.4773 li
7.39742 65.818 7.36751 65.1572 7.34766 64.4954 cv
6.34811 64.5254 li
cp
6.51266 67.5465 mo
6.56673 68.2176 6.63315 68.8876 6.71329 69.556 cv
7.70618 69.437 li
7.62766 68.7821 7.56251 68.125 7.50943 67.4662 cv
6.51266 67.5465 li
cp
6.84408 70.5581 mo
6.93837 71.2252 7.04711 71.8905 7.17169 72.5535 cv
8.15449 72.3688 li
8.03283 71.7214 7.92652 71.071 7.83423 70.4181 cv
6.84407 70.5581 li
cp
7.37041 73.5451 mo
7.51086 74.2041 7.66778 74.8605 7.84254 75.5136 cv
8.80856 75.2552 li
8.6384 74.6192 8.48546 73.9796 8.34844 73.3366 cv
7.3704 73.5451 li
cp
8.11711 76.4871 mo
8.30867 77.1325 8.51851 77.7744 8.74797 78.4123 cv
9.68894 78.0738 li
9.46608 77.4542 9.26211 76.8304 9.07577 76.2025 cv
8.11711 76.4871 li
cp
9.10529 79.3615 mo
9.35157 79.9875 9.61763 80.6093 9.90477 81.2263 cv
10.8114 80.8044 li
10.533 80.2062 10.2749 79.6031 10.0359 78.9954 cv
9.10529 79.3615 li
cp
10.3472 82.1398 mo
10.6491 82.7393 10.9719 83.3339 11.3166 83.9231 cv
12.1797 83.4181 li
11.8457 82.8472 11.533 82.271 11.2403 81.69 cv
10.3472 82.1398 li
cp
11.8429 84.7911 mo
12.1989 85.3579 12.5762 85.9193 12.9758 86.475 cv
13.7877 85.8912 li
13.4003 85.3525 13.0347 84.8085 12.6897 84.2592 cv
11.8429 84.7911 li
cp
13.581 87.2896 mo
13.9871 87.8191 14.4144 88.343 14.8638 88.8608 cv
15.619 88.2053 li
15.1828 87.7027 14.7683 87.1945 14.3744 86.681 cv
13.581 87.2896 li
cp
15.5397 89.6168 mo
15.9904 90.1063 16.4616 90.59 16.9544 91.0677 cv
17.6505 90.3498 li
17.1712 89.8851 16.7131 89.4149 16.2753 88.9394 cv
15.5397 89.6168 li
cp
17.6912 91.7629 mo
18.1801 92.2117 18.6887 92.6549 19.2178 93.0922 cv
19.8549 92.3214 li
19.339 91.895 18.8435 91.4632 18.3675 91.0263 cv
17.6912 91.7629 li
cp
20.0057 93.727 mo
20.5266 94.1362 21.0661 94.5399 21.6249 94.9379 cv
22.205 94.1234 li
21.6588 93.7343 21.1318 93.34 20.6235 92.9407 cv
20.0057 93.727 li
cp
22.4546 95.515 mo
23.0016 95.8866 23.5662 96.253 24.1489 96.6139 cv
24.6755 95.7638 li
24.1045 95.4101 23.5517 95.0513 23.0164 94.6878 cv
22.4546 95.515 li
cp
25.0125 97.137 mo
25.2836 97.2976 25.5583 97.457 25.8369 97.6154 cv
26.331 96.746 li
26.0576 96.5906 25.788 96.4342 25.5222 96.2767 cv
25.0125 97.1371 li
cp
f
25.9355 97.6698 mo
26.1699 97.8212 26.7485 98.211 27.5995 98.7889 cv
28.1612 97.9616 li
27.307 97.3816 26.7329 96.9945 26.4783 96.8299 cv
25.9355 97.6698 li
cp
28.4299 99.3535 mo
28.9236 99.6894 29.4793 100.068 30.0905 100.484 cv
30.6536 99.658 li
30.0424 99.2415 29.4865 98.8629 28.9925 98.5267 cv
28.4299 99.3535 li
cp
30.9191 101.049 mo
31.44 101.404 31.994 101.781 32.5777 102.179 cv
33.1407 101.353 li
32.557 100.955 32.0032 100.578 31.4822 100.223 cv
30.9191 101.049 li
cp
33.4059 102.743 mo
33.9379 103.105 34.4913 103.482 35.0641 103.872 cv
35.6266 103.045 li
35.0539 102.655 34.5006 102.279 33.9687 101.917 cv
33.4059 102.743 li
cp
35.8924 104.435 mo
36.4306 104.801 36.9839 105.177 37.5509 105.562 cv
38.1127 104.735 li
37.5459 104.35 36.9927 103.974 36.4547 103.608 cv
35.8924 104.435 li
cp
38.3796 106.125 mo
38.9218 106.493 39.4753 106.868 40.0388 107.25 cv
40.5998 106.422 li
40.0365 106.04 39.4832 105.665 38.9411 105.297 cv
38.3796 106.125 li
cp
40.8679 107.811 mo
41.4133 108.181 41.967 108.555 42.5281 108.935 cv
43.0881 108.106 li
42.5273 107.727 41.9737 107.352 41.4286 106.983 cv
40.8679 107.811 li
cp
43.3578 109.495 mo
43.9057 109.865 44.4598 110.239 45.0192 110.616 cv
45.5782 109.787 li
45.019 109.41 44.4652 109.036 43.9175 108.666 cv
43.3578 109.495 li
cp
45.8496 111.176 mo
46.3997 111.546 46.9543 111.919 47.5125 112.294 cv
48.0702 111.464 li
47.5124 111.089 46.9581 110.717 46.4082 110.346 cv
45.8496 111.176 li
cp
48.3437 112.853 mo
48.8958 113.223 49.4509 113.595 50.0082 113.969 cv
50.5646 113.138 li
50.0077 112.765 49.4529 112.393 48.901 112.022 cv
48.3437 112.853 li
cp
50.8383 114.524 mo
51.3922 114.895 51.9477 115.266 52.504 115.637 cv
53.0589 114.805 li
52.503 114.434 51.9478 114.063 51.3942 113.693 cv
50.8383 114.524 li
cp
53.3398 116.194 mo
53.8961 116.565 54.4526 116.935 55.0087 117.304 cv
55.5619 116.471 li
55.0063 116.102 54.4501 115.732 53.8942 115.362 cv
53.3399 116.194 li
cp
55.8431 117.858 mo
56.4015 118.228 56.9589 118.597 57.5145 118.964 cv
58.0657 118.13 li
57.5106 117.763 56.9537 117.394 56.3957 117.024 cv
55.8431 117.858 li
cp
58.3503 119.516 mo
58.9111 119.885 59.4696 120.253 60.0248 120.618 cv
60.5737 119.782 li
60.0191 119.417 59.4612 119.05 58.9008 118.681 cv
58.3503 119.516 li
cp
60.8623 121.167 mo
61.4259 121.536 61.9856 121.902 62.5404 122.264 cv
63.0866 121.426 li
62.5324 121.065 61.9734 120.699 61.4103 120.33 cv
60.8623 121.167 li
cp
63.3799 122.81 mo
63.9469 123.179 64.5081 123.543 65.0626 123.901 cv
65.6053 123.061 li
65.0518 122.704 64.4913 122.34 63.925 121.972 cv
63.3799 122.81 li
cp
65.9045 124.444 mo
66.4757 124.812 67.0388 125.174 67.5928 125.528 cv
68.1313 124.685 li
67.5784 124.332 67.0163 123.971 66.446 123.604 cv
65.9045 124.444 li
cp
68.4379 126.067 mo
69.0146 126.434 69.5803 126.792 70.1335 127.14 cv
70.6664 126.294 li
70.1147 125.947 69.5503 125.589 68.9747 125.223 cv
68.4379 126.067 li
cp
70.9828 127.674 mo
71.5675 128.04 72.1367 128.394 72.6885 128.734 cv
73.2136 127.883 li
72.6638 127.544 72.0965 127.191 71.5134 126.826 cv
70.9828 127.674 li
cp
73.5438 129.259 mo
74.1414 129.625 74.7159 129.972 75.2649 130.3 cv
75.7777 129.442 li
75.2321 129.116 74.6605 128.77 74.0655 128.406 cv
73.5438 129.259 li
cp
76.13 130.813 mo
76.7527 131.179 77.3369 131.516 77.8785 131.82 cv
78.3681 130.948 li
77.8336 130.648 77.2549 130.314 76.6369 129.951 cv
76.13 130.813 li
cp
78.7638 132.308 mo
79.4657 132.688 80.0755 132.997 80.5864 133.229 cv
80.9999 132.319 li
80.521 132.102 79.9278 131.801 79.2396 131.429 cv
78.7639 132.308 li
cp
f
17.7175 56.5337 mo
17.1767 56.2054 16.7298 55.8053 16.3625 55.3363 cv
15.575 55.9526 li
16.0154 56.5156 16.5576 56.9999 17.1988 57.3887 cv
17.7175 56.5337 li
cp
15.8665 54.5717 mo
15.59 54.0531 15.3845 53.4696 15.2489 52.8256 cv
14.2704 53.0316 li
14.4227 53.7555 14.6577 54.4301 14.9841 55.0422 cv
15.8665 54.5717 li
cp
15.1053 51.8905 mo
15.0693 51.5344 15.0514 51.1637 15.0514 50.7798 cv
15.0514 50.5172 15.0598 50.2483 15.0764 49.9737 cv
14.0782 49.9133 li
14.0604 50.207 14.0514 50.4959 14.0514 50.7798 cv
14.0514 51.1948 14.0707 51.5989 14.1104 51.9912 cv
15.1053 51.8905 li
cp
15.1656 49.0089 mo
15.2415 48.3915 15.3547 47.7497 15.5036 47.0877 cv
14.5279 46.8683 li
14.3725 47.5594 14.2534 48.2333 14.1731 48.8869 cv
15.1656 49.0089 li
cp
15.7383 46.1359 mo
15.9025 45.5227 16.095 44.8947 16.3142 44.2548 cv
15.3682 43.9307 li
15.1421 44.5906 14.9429 45.2403 14.7724 45.8773 cv
15.7383 46.1359 li
cp
16.6477 43.327 mo
16.874 42.7251 17.1226 42.1142 17.3923 41.4967 cv
16.476 41.0965 li
16.1996 41.7291 15.9445 42.356 15.7117 42.9751 cv
16.6477 43.327 li
cp
17.7989 40.5952 mo
18.0724 40.007 18.3641 39.414 18.6731 38.8179 cv
17.7853 38.3577 li
17.47 38.9661 17.1719 39.5719 16.8922 40.1735 cv
17.7989 40.5952 li
cp
19.1379 37.9428 mo
19.4496 37.3695 19.7768 36.7943 20.1183 36.2186 cv
19.2583 35.7083 li
18.9105 36.2944 18.5773 36.8805 18.2594 37.4651 cv
19.1379 37.9428 li
cp
20.632 35.3702 mo
20.9766 34.8125 21.3342 34.2551 21.7042 33.6997 cv
20.8719 33.1453 li
20.4957 33.7102 20.1319 34.2771 19.7812 34.8447 cv
20.632 35.3702 li
cp
22.2611 32.8784 mo
22.6349 32.3369 23.0201 31.798 23.4159 31.2629 cv
22.6119 30.6682 li
22.2097 31.212 21.8182 31.7598 21.4382 32.3103 cv
22.2611 32.8784 li
cp
24.0126 30.4697 mo
24.4127 29.9467 24.8227 29.4281 25.242 28.9152 cv
24.4677 28.2823 li
24.0417 28.8036 23.625 29.3306 23.2183 29.8622 cv
24.0126 30.4697 li
cp
25.8758 28.1524 mo
26.3028 27.647 26.7385 27.1479 27.1822 26.6565 cv
26.4399 25.9864 li
25.9888 26.486 25.5459 26.9933 25.1119 27.507 cv
25.8758 28.1524 li
cp
27.855 25.9238 mo
28.3074 25.4394 28.7674 24.9634 29.2343 24.497 cv
28.5276 23.7895 li
28.0523 24.2642 27.5843 24.7485 27.1242 25.2412 cv
27.855 25.9238 li
cp
29.9421 23.8025 mo
30.4201 23.3418 30.9047 22.8916 31.3951 22.4532 cv
30.7287 21.7077 li
30.2287 22.1546 29.7349 22.6133 29.2482 23.0824 cv
29.9421 23.8025 li
cp
32.1402 21.8003 mo
32.6444 21.3671 33.1542 20.9469 33.6688 20.5409 cv
33.0494 19.7558 li
32.5235 20.1707 32.003 20.5998 31.4886 21.0417 cv
32.1402 21.8003 li
cp
34.4522 19.9367 mo
34.9835 19.5364 35.5193 19.1517 36.0588 18.7842 cv
35.4958 17.9578 li
34.9427 18.3346 34.3939 18.7285 33.8504 19.1381 cv
34.4522 19.9367 li
cp
36.8819 18.2387 mo
37.4412 17.8784 38.0039 17.5371 38.5689 17.2164 cv
38.0753 16.3468 li
37.4933 16.6771 36.9147 17.0281 36.3404 17.3981 cv
36.8819 18.2387 li
cp
39.4327 16.7433 mo
40.0205 16.4331 40.6102 16.1459 41.2007 15.8833 cv
40.7945 14.9695 li
40.1824 15.2417 39.5725 15.5388 38.9659 15.859 cv
39.4327 16.7433 li
cp
42.1045 15.5013 mo
42.7196 15.2548 43.3349 15.036 43.9492 14.8468 cv
43.6549 13.8911 li
43.0128 14.0888 42.3717 14.3169 41.7325 14.573 cv
42.1045 15.5013 li
cp
44.8887 14.5805 mo
45.5261 14.4156 46.1618 14.2837 46.7945 14.1868 cv
46.6431 13.1984 li
45.9753 13.3006 45.3066 13.4395 44.6383 13.6123 cv
44.8887 14.5805 li
cp
47.758 14.0664 mo
48.2768 14.0163 48.7932 13.9907 49.3064 13.9907 cv
49.4359 13.9907 49.5652 13.9923 49.6942 13.9956 cv
49.7196 12.9959 li
49.582 12.9924 49.4443 12.9907 49.3064 12.9907 cv
48.7599 12.9907 48.2115 13.018 47.6619 13.071 cv
47.758 14.0664 li
cp
50.6597 14.0515 mo
51.3007 14.1098 51.9359 14.2105 52.5645 14.3561 cv
52.7902 13.3819 li
52.1161 13.2257 51.4354 13.1179 50.7502 13.0556 cv
50.6597 14.0515 li
cp
53.4953 14.6064 mo
54.1021 14.7926 54.7022 15.0228 55.2948 15.2996 cv
55.7179 14.3935 li
55.0834 14.0971 54.4397 13.8502 53.7887 13.6504 cv
53.4953 14.6064 li
cp
56.1556 15.7377 mo
56.7063 16.0417 57.2501 16.3882 57.786 16.7796 cv
58.3759 15.972 li
57.8067 15.5564 57.2272 15.187 56.6387 14.8622 cv
56.1556 15.7377 li
cp
58.5525 17.3748 mo
59.0373 17.7743 59.515 18.2126 59.9849 18.6916 cv
60.6988 17.9914 li
60.2052 17.4881 59.7014 17.0258 59.1884 16.6031 cv
58.5525 17.3748 li
cp
60.6512 19.4046 mo
60.7853 19.5549 60.9186 19.7087 61.0512 19.8661 cv
61.3435 20.2131 61.6226 20.5639 61.8893 20.9184 cv
62.6884 20.3172 li
62.4108 19.9482 62.1202 19.583 61.816 19.2218 cv
61.6774 19.0574 61.538 18.8965 61.3977 18.7391 cv
60.6513 19.4046 li
cp
62.4621 21.7121 mo
62.8376 22.255 63.1864 22.8059 63.5113 23.3644 cv
64.3757 22.8614 li
64.038 22.2813 63.6753 21.7082 63.2845 21.1433 cv
62.4621 21.7121 li
cp
63.9883 24.2208 mo
64.2975 24.8012 64.5832 25.3893 64.8482 25.9844 cv
65.7617 25.5775 li
65.4876 24.9622 65.1917 24.3529 64.8708 23.7506 cv
63.9883 24.2208 li
cp
65.2343 26.8907 mo
65.4822 27.4996 65.7106 28.1152 65.9225 28.7368 cv
66.869 28.4141 li
66.6514 27.7757 66.4163 27.1419 66.1605 26.5136 cv
65.2343 26.8907 li
cp
66.2288 29.6747 mo
66.4251 30.3025 66.6065 30.936 66.7761 31.5743 cv
67.7425 31.3175 li
67.5697 30.6669 67.3843 30.0195 67.1832 29.3762 cv
66.2288 29.6747 li
cp
67.0213 32.533 mo
67.1792 33.1735 67.3268 33.8183 67.4673 34.4667 cv
68.4446 34.2549 li
68.3025 33.5989 68.1528 32.9449 67.9922 32.2936 cv
67.0213 32.533 li
cp
67.6724 35.4387 mo
67.8059 36.0874 67.9338 36.7391 68.0592 37.3931 cv
69.0413 37.2048 li
68.9154 36.548 68.7866 35.8918 68.6519 35.2372 cv
67.6724 35.4387 li
cp
68.2453 38.3731 mo
68.3685 39.0267 68.4907 39.6821 68.615 40.3386 cv
69.5976 40.1525 li
69.4736 39.4979 69.3514 38.8428 69.228 38.1879 cv
68.2453 38.3731 li
cp
68.8032 41.3222 mo
68.9301 41.9779 69.0606 42.6342 69.1978 43.2902 cv
70.1766 43.0855 li
70.0408 42.4359 69.9112 41.7846 69.785 41.1322 cv
68.8032 41.3222 li
cp
69.4088 44.2728 mo
69.5532 44.9272 69.7058 45.5809 69.8697 46.2331 cv
70.8395 45.9893 li
70.6784 45.348 70.5279 44.7038 70.3853 44.0573 cv
69.4088 44.2728 li
cp
70.1239 47.2081 mo
70.2992 47.8562 70.4873 48.5024 70.6912 49.1458 cv
71.6445 48.8437 li
71.4453 48.2153 71.2612 47.5828 71.0892 46.947 cv
70.1239 47.2081 li
cp
71.0077 50.1039 mo
71.2265 50.7397 71.4625 51.3723 71.7186 52.0009 cv
72.6447 51.6236 li
72.3961 51.0134 72.1665 50.3981 71.9532 49.7784 cv
71.0077 50.1039 li
cp
72.1155 52.9345 mo
72.3879 53.5486 72.6811 54.1583 72.9981 54.7627 cv
73.8837 54.2983 li
73.5773 53.7142 73.2936 53.1243 73.0297 52.5291 cv
72.1155 52.9345 li
cp
73.4856 55.6545 mo
73.8171 56.2365 74.1724 56.8131 74.554 57.3835 cv
75.3851 56.8274 li
75.0173 56.2776 74.6746 55.7214 74.3545 55.1595 cv
73.4856 55.6545 li
cp
75.1349 58.2183 mo
75.5259 58.7587 75.9421 59.293 76.3858 59.8204 cv
77.151 59.1765 li
76.7232 58.668 76.322 58.1531 75.9451 57.6322 cv
75.1349 58.2183 li
cp
77.0549 60.5869 mo
77.1987 60.7458 77.3452 60.904 77.4944 61.0616 cv
77.8126 61.3976 78.1425 61.7246 78.4829 62.0433 cv
79.1664 61.3134 li
78.8398 61.0075 78.5241 60.6946 78.2204 60.3739 cv
78.0764 60.2219 77.9351 60.0692 77.7963 59.9159 cv
77.0549 60.5869 li
cp
79.2407 62.725 mo
79.7495 63.1652 80.2783 63.5896 80.8239 64.0005 cv
81.4256 63.2018 li
80.8962 62.8031 80.3851 62.3927 79.895 61.9687 cv
79.2407 62.725 li
cp
81.643 64.599 mo
82.1895 64.9866 82.7504 65.3625 83.3229 65.7287 cv
83.8618 64.8862 li
83.3011 64.5276 82.7535 64.1606 82.2215 63.7833 cv
81.643 64.599 li
cp
84.1794 66.2644 mo
84.7497 66.6135 85.3297 66.9544 85.9169 67.2888 cv
86.4118 66.4198 li
85.8325 66.0899 85.2615 65.7543 84.7015 65.4115 cv
84.1794 66.2644 li
cp
86.7948 67.7815 mo
87.3787 68.1046 87.9681 68.4223 88.5607 68.7364 cv
89.0291 67.8529 li
88.4406 67.5409 87.8564 67.226 87.279 66.9065 cv
86.7948 67.7814 li
cp
89.448 69.2032 mo
90.0404 69.5128 90.6345 69.8196 91.2281 70.1254 cv
91.6861 69.2364 li
91.0931 68.9309 90.5006 68.625 89.9111 68.317 cv
89.448 69.2033 li
cp
92.1197 70.5845 mo
92.715 70.8912 93.3084 71.1976 93.8973 71.5055 cv
94.3606 70.6193 li
93.7687 70.3098 93.1736 70.0025 92.5777 69.6955 cv
92.1197 70.5845 li
cp
94.78 71.9702 mo
95.3707 72.2836 95.9555 72.5993 96.5318 72.919 cv
97.0169 72.0445 li
96.4338 71.7211 95.8436 71.4024 95.2487 71.0868 cv
94.78 71.9702 li
cp
97.398 73.4066 mo
97.9781 73.7383 98.548 74.0751 99.1047 74.4188 cv
99.63 73.5678 li
99.0622 73.2174 98.4827 72.8749 97.8943 72.5385 cv
97.398 73.4066 li
cp
99.9415 74.9473 mo
100.501 75.3095 101.046 75.6799 101.572 76.0604 cv
102.158 75.2503 li
101.616 74.8583 101.057 74.4781 100.485 74.1076 cv
99.9415 74.9473 li
cp
102.36 76.6495 mo
102.885 77.0553 103.388 77.4728 103.867 77.9043 cv
104.536 77.1617 li
104.037 76.7116 103.514 76.2779 102.972 75.8583 cv
102.36 76.6495 li
cp
104.577 78.5743 mo
105.045 79.0354 105.484 79.5123 105.891 80.0076 cv
106.663 79.3724 li
106.232 78.8482 105.77 78.3458 105.28 77.8624 cv
104.577 78.5743 li
cp
106.485 80.7749 mo
106.865 81.2964 107.21 81.8379 107.518 82.4024 cv
108.396 81.9236 li
108.066 81.3192 107.697 80.741 107.294 80.1865 cv
106.485 80.7749 li
cp
107.949 83.2628 mo
108.213 83.8375 108.439 84.4357 108.624 85.0605 cv
109.583 84.7758 li
109.384 84.1054 109.141 83.4627 108.858 82.846 cv
107.949 83.2628 li
cp
108.866 85.9917 mo
109.002 86.6005 109.1 87.2339 109.159 87.8946 cv
110.155 87.8061 li
110.093 87.1031 109.987 86.4262 109.842 85.7742 cv
108.866 85.9917 li
cp
109.215 88.8618 mo
109.22 89.0224 109.222 89.1846 109.222 89.3484 cv
109.222 89.8209 109.203 90.3066 109.163 90.8063 cv
110.16 90.8852 li
110.202 90.3602 110.222 89.8481 110.222 89.3484 cv
110.222 89.1752 110.22 89.0035 110.215 88.8333 cv
109.215 88.8618 li
cp
109.063 91.7771 mo
109.019 92.1209 108.966 92.4711 108.904 92.8278 cv
108.851 93.1277 108.797 93.4252 108.742 93.7205 cv
109.725 93.9053 li
109.781 93.6059 109.836 93.3043 109.889 93.0003 cv
109.954 92.6286 110.009 92.2629 110.055 91.9031 cv
109.063 91.7771 li
cp
108.552 94.6949 mo
108.418 95.3531 108.277 95.9994 108.129 96.6339 cv
109.103 96.8614 li
109.253 96.2171 109.396 95.5612 109.532 94.8935 cv
108.552 94.6949 li
cp
107.896 97.5982 mo
107.733 98.2497 107.562 98.8882 107.384 99.5139 cv
108.346 99.788 li
108.527 99.1516 108.701 98.5026 108.866 97.8408 cv
107.896 97.5982 li
cp
107.104 100.465 mo
106.909 101.107 106.706 101.736 106.495 102.35 cv
107.441 102.675 li
107.656 102.049 107.863 101.409 108.061 100.755 cv
107.104 100.465 li
cp
106.164 103.283 mo
105.934 103.914 105.695 104.528 105.448 105.128 cv
106.373 105.509 li
106.625 104.896 106.869 104.269 107.103 103.626 cv
106.164 103.283 li
cp
105.062 106.039 mo
104.794 106.653 104.517 107.251 104.231 107.832 cv
105.129 108.273 li
105.421 107.678 105.705 107.067 105.979 106.439 cv
105.062 106.039 li
cp
103.785 108.713 mo
103.475 109.307 103.157 109.883 102.829 110.44 cv
103.691 110.946 li
104.028 110.374 104.354 109.784 104.672 109.176 cv
103.785 108.713 li
cp
102.318 111.283 mo
101.964 111.851 101.601 112.398 101.229 112.925 cv
102.046 113.502 li
102.429 112.959 102.803 112.396 103.167 111.813 cv
102.318 111.284 li
cp
100.649 113.721 mo
100.248 114.255 99.8376 114.766 99.4186 115.255 cv
100.178 115.906 li
100.611 115.4 101.035 114.872 101.449 114.322 cv
100.649 113.721 li
cp
98.7671 115.991 mo
98.3174 116.482 97.8586 116.949 97.3914 117.391 cv
98.0793 118.117 li
98.5638 117.658 99.0392 117.175 99.5045 116.667 cv
98.7671 115.991 li
cp
96.6671 118.053 mo
96.1689 118.491 95.662 118.903 95.1472 119.289 cv
95.7473 120.089 li
96.2831 119.687 96.8102 119.259 97.3276 118.804 cv
96.6671 118.053 li
cp
94.3522 119.861 mo
93.808 120.236 93.2557 120.582 92.6963 120.902 cv
93.1919 121.77 li
93.776 121.437 94.3522 121.075 94.9193 120.684 cv
94.3522 119.861 li
cp
91.8369 121.368 mo
91.252 121.669 90.6599 121.94 90.0619 122.183 cv
90.4381 123.11 li
91.0639 122.856 91.683 122.571 92.2943 122.257 cv
91.8369 121.368 li
cp
89.1489 122.53 mo
88.5316 122.748 87.9086 122.937 87.2808 123.096 cv
87.5261 124.065 li
88.1837 123.899 88.8363 123.701 89.4825 123.473 cv
89.1489 122.53 li
cp
86.3275 123.313 mo
85.6886 123.444 85.0453 123.544 84.3988 123.615 cv
84.5074 124.609 li
85.1844 124.535 85.8582 124.43 86.5276 124.293 cv
86.3275 123.313 li
cp
83.4266 123.699 mo
82.9756 123.727 82.5234 123.741 82.0702 123.741 cv
81.872 123.741 81.6737 123.739 81.4752 123.733 cv
81.448 124.733 li
81.6555 124.738 81.8629 124.741 82.0702 124.741 cv
82.5442 124.741 83.0175 124.726 83.4895 124.697 cv
83.4266 123.699 li
cp
80.4991 123.685 mo
79.8522 123.638 79.2044 123.564 78.5568 123.46 cv
78.3996 124.448 li
79.0753 124.556 79.7517 124.634 80.4276 124.682 cv
80.4991 123.685 li
cp
77.5938 123.286 mo
76.9589 123.158 76.3246 123.002 75.6921 122.82 cv
75.415 123.781 li
76.0731 123.971 76.7336 124.133 77.3954 124.267 cv
77.5938 123.286 li
cp
74.7559 122.53 mo
74.1411 122.326 73.5284 122.097 72.919 121.843 cv
72.534 122.766 li
73.1663 123.03 73.8025 123.268 74.4415 123.479 cv
74.7559 122.53 li
cp
72.02 121.449 mo
71.4315 121.178 70.8464 120.884 70.2657 120.566 cv
69.7854 121.443 li
70.3862 121.772 70.992 122.077 71.6019 122.357 cv
72.02 121.449 li
cp
69.4115 120.079 mo
68.8535 119.749 68.3001 119.397 67.7521 119.023 cv
67.1886 119.849 li
67.754 120.235 68.3255 120.598 68.9022 120.94 cv
69.4115 120.079 li
cp
66.9476 118.456 mo
66.423 118.074 65.9039 117.671 65.391 117.249 cv
64.7553 118.021 li
65.2833 118.456 65.8181 118.87 66.3589 119.264 cv
66.9476 118.456 li
cp
64.6392 116.612 mo
64.1496 116.185 63.6663 115.739 63.1897 115.275 cv
62.492 115.991 li
62.9814 116.468 63.4782 116.926 63.9818 117.365 cv
64.6392 116.612 li
cp
62.4922 114.577 mo
62.0385 114.111 61.5916 113.628 61.152 113.128 cv
60.4009 113.788 li
60.8516 114.301 61.3101 114.797 61.7758 115.275 cv
62.4922 114.577 li
cp
60.5093 112.378 mo
60.0916 111.879 59.6812 111.364 59.2785 110.833 cv
58.4818 111.437 li
58.8939 111.981 59.3143 112.508 59.7422 113.02 cv
60.5093 112.378 li
cp
58.6903 110.039 mo
58.3085 109.51 57.9343 108.968 57.568 108.411 cv
56.7324 108.96 li
57.1067 109.529 57.4894 110.084 57.8799 110.624 cv
58.6903 110.039 li
cp
57.0336 107.578 mo
56.6871 107.026 56.3484 106.46 56.0178 105.88 cv
55.1492 106.376 li
55.4866 106.967 55.8324 107.545 56.1864 108.11 cv
57.0336 107.578 li
cp
55.5361 105.016 mo
55.2241 104.442 54.9201 103.856 54.6243 103.258 cv
53.7279 103.701 li
54.0294 104.311 54.3394 104.909 54.6577 105.494 cv
55.5361 105.016 li
cp
54.194 102.366 mo
53.9156 101.775 53.6453 101.173 53.3834 100.559 cv
52.4636 100.951 li
52.7303 101.576 53.0056 102.19 53.2892 102.792 cv
54.194 102.366 li
cp
53.0027 99.6436 mo
52.757 99.0378 52.5194 98.4212 52.2901 97.794 cv
51.3509 98.1374 li
51.5841 98.7754 51.8259 99.4028 52.0761 100.019 cv
53.0027 99.6436 li
cp
51.9576 96.86 mo
51.7435 96.2418 51.5373 95.6137 51.3396 94.9757 cv
50.3844 95.2717 li
50.5854 95.9202 50.7949 96.5587 51.0128 97.1874 cv
51.9576 96.8601 li
cp
51.0536 94.0259 mo
51.0097 93.8758 50.9663 93.7253 50.9233 93.5742 cv
50.7814 93.0751 50.6305 92.5827 50.471 92.0969 cv
49.5209 92.4089 li
49.6762 92.882 49.8232 93.3615 49.9614 93.8477 cv
50.0051 94.0012 50.0492 94.1541 50.0938 94.3066 cv
51.0536 94.0259 li
cp
50.1423 91.139 mo
49.913 90.4984 49.6686 89.8694 49.41 89.2516 cv
48.4875 89.6376 li
48.7394 90.2395 48.9775 90.8521 49.2008 91.476 cv
50.1423 91.139 li
cp
49.0069 88.3227 mo
48.7285 87.7034 48.4359 87.0955 48.1299 86.4985 cv
47.24 86.9546 li
47.5383 87.5367 47.8236 88.1292 48.0948 88.7327 cv
49.0069 88.3227 li
cp
47.657 85.6037 mo
47.333 85.0086 46.9958 84.4246 46.6464 83.8511 cv
45.7924 84.3714 li
46.1336 84.9314 46.4627 85.5014 46.7788 86.0819 cv
47.657 85.6037 li
cp
46.1083 82.9908 mo
45.7425 82.4208 45.3648 81.8615 44.9762 81.312 cv
44.1598 81.8895 li
44.5399 82.427 44.9093 82.974 45.2667 83.5309 cv
46.1083 82.9908 li
cp
44.3826 80.4916 mo
43.9808 79.9485 43.5685 79.4153 43.1469 78.8913 cv
42.3678 79.5182 li
42.7813 80.032 43.1852 80.5545 43.5787 81.0863 cv
44.3826 80.4916 li
cp
42.5056 78.1098 mo
42.073 77.5926 41.6314 77.0845 41.1821 76.5849 cv
40.4386 77.2536 li
40.8803 77.7448 41.314 78.2438 41.7387 78.7514 cv
42.5056 78.1097 li
cp
40.5006 75.84 mo
40.042 75.3469 39.5761 74.8621 39.104 74.3849 cv
38.3931 75.0883 li
38.8584 75.5585 39.3172 76.0359 39.7684 76.521 cv
40.5006 75.84 li
cp
38.3894 73.673 mo
37.9094 73.2015 37.4237 72.7375 36.9334 72.2802 cv
36.2514 73.0116 li
36.7358 73.4633 37.2152 73.9214 37.6887 74.3864 cv
38.3894 73.673 li
cp
36.1921 71.5972 mo
35.6948 71.1443 35.1934 70.698 34.689 70.2577 cv
34.0314 71.011 li
34.5309 71.4471 35.0271 71.8887 35.5188 72.3365 cv
36.1921 71.5972 li
cp
33.9268 69.5986 mo
33.416 69.161 32.9027 68.7292 32.388 68.3025 cv
31.7498 69.0724 li
32.2607 69.4959 32.7699 69.9243 33.2763 70.3581 cv
33.9268 69.5986 li
cp
31.6132 67.6647 mo
31.0933 67.2397 30.5728 66.8196 30.0526 66.4039 cv
29.4283 67.1851 li
29.946 67.5989 30.4637 68.0166 30.9802 68.4389 cv
31.6132 67.6647 li
cp
29.2682 65.7799 mo
28.7418 65.3629 28.2165 64.9502 27.6935 64.5409 cv
27.0772 65.3284 li
27.5992 65.7368 28.1229 66.1484 28.6472 66.5637 cv
29.2682 65.7799 li
cp
26.9045 63.9246 mo
26.375 63.5116 25.8484 63.102 25.3261 62.6949 cv
24.7114 63.4837 li
25.2341 63.8911 25.7606 64.3007 26.2895 64.7132 cv
26.9045 63.9246 li
cp
24.538 62.08 mo
24.0087 61.6664 23.4846 61.2552 22.967 60.8458 cv
22.3466 61.6301 li
22.8664 62.0412 23.392 62.4536 23.9222 62.8679 cv
24.538 62.08 li
cp
22.1858 60.2249 mo
21.6609 59.8057 21.1437 59.3879 20.6356 58.9708 cv
20.0011 59.7438 li
20.5133 60.1642 21.034 60.5848 21.5617 61.0063 cv
22.1858 60.2249 li
cp
19.8686 58.3357 mo
19.3532 57.905 18.8484 57.4747 18.3558 57.044 cv
17.6975 57.7967 li
18.1966 58.2331 18.707 58.6683 19.2273 59.103 cv
19.8686 58.3357 li
cp
f
44.5366 26.8643 mo
44.5366 26.1123 43.9277 25.5039 43.1763 25.5039 cv
42.4248 25.5039 41.8154 26.1123 41.8154 26.8643 cv
41.8154 27.6162 42.4248 28.2246 43.1763 28.2246 cv
43.9277 28.2246 44.5366 27.6162 44.5366 26.8643 cv
0 0 0 0 cmyk
f
45.0366 26.8643 mo
45.0365 25.8361 44.2037 25.004 43.1763 25.0039 cv
42.1489 25.004 41.3157 25.8359 41.3154 26.8643 cv
41.3157 27.8926 42.1489 28.7245 43.1763 28.7246 cv
44.2037 28.7245 45.0365 27.8924 45.0366 26.8643 cv
44.0366 26.8643 li
44.0358 27.3401 43.6517 27.7237 43.1763 27.7246 cv
42.7007 27.7237 42.3163 27.3398 42.3154 26.8643 cv
42.3163 26.3887 42.7007 26.0048 43.1763 26.0039 cv
43.6517 26.0048 44.0358 26.3885 44.0366 26.8643 cv
45.0366 26.8643 li
cp
0 0 0 1 cmyk
f
80.8369 26.8643 mo
80.8369 26.1123 80.2275 25.5039 79.4766 25.5039 cv
78.7246 25.5039 78.1152 26.1123 78.1152 26.8643 cv
78.1152 27.6162 78.7246 28.2246 79.4766 28.2246 cv
80.2275 28.2246 80.8369 27.6162 80.8369 26.8643 cv
0 0 0 0 cmyk
f
81.3369 26.8643 mo
81.3366 25.8359 80.5036 25.0041 79.4766 25.0039 cv
78.4489 25.004 77.6154 25.8358 77.6152 26.8643 cv
77.6154 27.8927 78.4489 28.7245 79.4766 28.7246 cv
80.5036 28.7244 81.3366 27.8926 81.3369 26.8643 cv
80.3369 26.8643 li
80.3361 27.3398 79.9515 27.7237 79.4766 27.7246 cv
79.0003 27.7237 78.6161 27.3398 78.6152 26.8643 cv
78.6161 26.3888 79.0003 26.0048 79.4766 26.0039 cv
79.9515 26.0048 80.3361 26.3887 80.3369 26.8643 cv
81.3369 26.8643 li
cp
0 0 0 1 cmyk
f
98.9375 54.0645 mo
98.9375 53.3135 98.3281 52.7041 97.5762 52.7041 cv
96.8242 52.7041 96.2158 53.3135 96.2158 54.0645 cv
96.2158 54.8154 96.8242 55.4248 97.5762 55.4248 cv
98.3281 55.4248 98.9375 54.8154 98.9375 54.0645 cv
0 0 0 0 cmyk
f
99.4375 54.0645 mo
99.4371 53.0369 98.6043 52.2045 97.5762 52.2041 cv
96.5478 52.2044 95.716 53.0374 95.7158 54.0645 cv
95.716 55.0915 96.5478 55.9245 97.5762 55.9248 cv
98.6043 55.9244 99.4371 55.092 99.4375 54.0645 cv
98.4375 54.0645 li
98.4366 54.5388 98.0519 54.9239 97.5762 54.9248 cv
97.1006 54.9239 96.7167 54.5394 96.7158 54.0645 cv
96.7167 53.5895 97.1006 53.205 97.5762 53.2041 cv
98.0519 53.205 98.4366 53.5901 98.4375 54.0645 cv
99.4375 54.0645 li
cp
0 0 0 1 cmyk
f
26.437 54.0645 mo
26.437 53.3135 25.8276 52.7041 25.0762 52.7041 cv
24.3247 52.7041 23.7158 53.3135 23.7158 54.0645 cv
23.7158 54.8154 24.3247 55.4248 25.0762 55.4248 cv
25.8276 55.4248 26.437 54.8154 26.437 54.0645 cv
0 0 0 0 cmyk
f
26.937 54.0645 mo
26.9366 53.0369 26.104 52.2045 25.0762 52.2041 cv
24.0482 52.2045 23.2162 53.0372 23.2158 54.0645 cv
23.2162 55.0917 24.0482 55.9244 25.0762 55.9248 cv
26.104 55.9244 26.9366 55.092 26.937 54.0645 cv
25.937 54.0645 li
25.9361 54.5389 25.5513 54.9239 25.0762 54.9248 cv
24.6012 54.9239 24.2167 54.5391 24.2158 54.0645 cv
24.2167 53.5898 24.6012 53.205 25.0762 53.2041 cv
25.5513 53.205 25.9361 53.59 25.937 54.0645 cv
26.937 54.0645 li
cp
0 0 0 1 cmyk
f
26.437 90.3643 mo
26.437 89.6123 25.8276 89.0039 25.0762 89.0039 cv
24.3247 89.0039 23.7158 89.6123 23.7158 90.3643 cv
23.7158 91.1162 24.3247 91.7246 25.0762 91.7246 cv
25.8276 91.7246 26.437 91.1162 26.437 90.3643 cv
0 0 0 0 cmyk
f
26.937 90.3643 mo
26.9368 89.3359 26.1035 88.504 25.0762 88.5039 cv
24.0487 88.504 23.216 89.3361 23.2158 90.3643 cv
23.216 91.3924 24.0487 92.2245 25.0762 92.2246 cv
26.1035 92.2245 26.9368 91.3926 26.937 90.3643 cv
25.937 90.3643 li
25.9361 90.8398 25.5517 91.2237 25.0762 91.2246 cv
24.6007 91.2237 24.2167 90.84 24.2158 90.3643 cv
24.2167 89.8885 24.6007 89.5048 25.0762 89.5039 cv
25.5517 89.5048 25.9361 89.8887 25.937 90.3643 cv
26.937 90.3643 li
cp
0 0 0 1 cmyk
f
98.9375 90.3643 mo
98.9375 89.6123 98.3281 89.0039 97.5762 89.0039 cv
96.8242 89.0039 96.2158 89.6123 96.2158 90.3643 cv
96.2158 91.1162 96.8242 91.7246 97.5762 91.7246 cv
98.3281 91.7246 98.9375 91.1162 98.9375 90.3643 cv
0 0 0 0 cmyk
f
99.4375 90.3643 mo
99.4373 89.3358 98.6038 88.504 97.5762 88.5039 cv
96.5483 88.5058 95.7177 89.3364 95.7158 90.3643 cv
95.7177 91.3921 96.5483 92.2227 97.5762 92.2246 cv
98.6038 92.2245 99.4373 91.3927 99.4375 90.3643 cv
98.4375 90.3643 li
98.4366 90.8397 98.0524 91.2237 97.5762 91.2246 cv
97.1001 91.2246 96.7158 90.8403 96.7158 90.3643 cv
96.7158 89.8882 97.1001 89.5039 97.5762 89.5039 cv
98.0524 89.5048 98.4366 89.8888 98.4375 90.3643 cv
99.4375 90.3643 li
cp
0 0 0 1 cmyk
f
80.8369 117.564 mo
80.8369 116.813 80.2275 116.204 79.4766 116.204 cv
78.7246 116.204 78.1152 116.813 78.1152 117.564 cv
78.1152 118.315 78.7246 118.925 79.4766 118.925 cv
80.2275 118.925 80.8369 118.315 80.8369 117.564 cv
0 0 0 0 cmyk
f
81.3369 117.564 mo
81.3364 116.537 80.5041 115.705 79.4766 115.704 cv
78.4484 115.704 77.6156 116.537 77.6152 117.564 cv
77.6156 118.592 78.4484 119.424 79.4766 119.425 cv
80.5041 119.424 81.3364 118.592 81.3369 117.564 cv
80.3369 117.564 li
80.3361 118.039 79.951 118.424 79.4766 118.425 cv
79.0008 118.424 78.6161 118.039 78.6152 117.564 cv
78.6161 117.09 79.0008 116.705 79.4766 116.704 cv
79.951 116.705 80.3361 117.09 80.3369 117.564 cv
81.3369 117.564 li
cp
0 0 0 1 cmyk
f
44.5371 117.564 mo
44.5371 116.813 43.9277 116.204 43.1763 116.204 cv
42.4248 116.204 41.8159 116.813 41.8159 117.564 cv
41.8159 118.315 42.4248 118.925 43.1763 118.925 cv
43.9277 118.925 44.5371 118.315 44.5371 117.564 cv
0 0 0 0 cmyk
f
45.0371 117.564 mo
45.0367 116.537 44.2041 115.705 43.1763 115.704 cv
42.1483 115.704 41.3163 116.537 41.3159 117.564 cv
41.3163 118.592 42.1483 119.424 43.1763 119.425 cv
44.2041 119.424 45.0367 118.592 45.0371 117.564 cv
44.0371 117.564 li
44.0362 118.039 43.6514 118.424 43.1763 118.425 cv
42.7013 118.424 42.3168 118.039 42.3159 117.564 cv
42.3168 117.09 42.7013 116.705 43.1763 116.704 cv
43.6514 116.705 44.0362 117.09 44.0371 117.564 cv
45.0371 117.564 li
cp
0 0 0 1 cmyk
f
19.7244 18.454 mo
20.2548 18.0446 20.7836 17.6429 21.3108 17.2488 cv
20.712 16.4479 li
20.1807 16.8451 19.6479 17.2498 19.1134 17.6623 cv
19.7244 18.4539 li
cp
22.1108 16.6556 mo
22.6507 16.2586 23.1887 15.8696 23.7249 15.4886 cv
23.1456 14.6735 li
22.6049 15.0577 22.0625 15.4498 21.5184 15.85 cv
22.1108 16.6556 li
cp
24.5389 14.9152 mo
25.0884 14.5316 25.6359 14.1564 26.1814 13.7896 cv
25.6233 12.9598 li
25.073 13.3299 24.5207 13.7084 23.9665 14.0952 cv
24.5389 14.9152 li
cp
27.0099 13.2378 mo
27.5693 12.8688 28.1266 12.5086 28.6816 12.1572 cv
28.1466 11.3123 li
27.5863 11.6671 27.0239 12.0306 26.4593 12.403 cv
27.0099 13.2378 li
cp
29.5249 11.6288 mo
30.0945 11.2757 30.6617 10.9319 31.2265 10.5973 cv
30.7167 9.73701 li
30.1462 10.0751 29.5733 10.4223 28.998 10.7788 cv
29.5249 11.6288 li
cp
32.0849 10.0947 mo
32.665 9.75903 33.2423 9.43315 33.817 9.11694 cv
33.3349 8.24082 li
32.7539 8.56053 32.1703 8.88992 31.5841 9.22911 cv
32.0849 10.0947 li
cp
34.6908 8.64242 mo
35.2816 8.32593 35.8693 8.01973 36.454 7.72372 cv
36.0023 6.83153 li
35.4106 7.13109 34.816 7.44086 34.2186 7.76097 cv
34.6908 8.64242 li
cp
37.3434 7.28016 mo
37.9448 6.98475 38.543 6.70021 39.1378 6.42644 cv
38.7197 5.51805 li
38.1172 5.79538 37.5114 6.08352 36.9025 6.38258 cv
37.3434 7.28016 li
cp
40.0429 6.01701 mo
40.6551 5.7449 41.2636 5.48429 41.8685 5.23508 cv
41.4875 4.3105 li
40.8741 4.56324 40.2571 4.82745 39.6367 5.10321 cv
40.0429 6.01702 li
cp
42.789 4.8634 mo
43.4119 4.6171 44.0307 4.38299 44.6453 4.16095 cv
44.3055 3.22045 li
43.6814 3.44593 43.0533 3.68356 42.4213 3.93347 cv
42.789 4.8634 li
cp
45.5809 3.83112 mo
46.2141 3.61348 46.8427 3.40879 47.4667 3.21687 cv
47.1727 2.26106 li
46.5382 2.45623 45.8992 2.66431 45.2559 2.88543 cv
45.5809 3.83112 li
cp
48.4166 2.93353 mo
49.0595 2.74777 49.6973 2.57575 50.3299 2.41731 cv
50.0869 1.44727 li
49.4425 1.60867 48.7932 1.78382 48.1391 1.97283 cv
48.4166 2.93353 li
cp
51.2929 2.18564 mo
51.9444 2.03537 52.5903 1.89969 53.2304 1.77841 cv
53.0442 .795889 li
53.0442 .795893 li
52.391 .91966 51.7323 1.05805 51.0682 1.21121 cv
51.2929 2.18564 li
cp
54.2044 1.60417 mo
54.8632 1.49337 55.5156 1.39805 56.1614 1.31798 cv
56.0384 .325578 li
56.0384 .325581 li
55.3779 .40745 54.7113 .50488 54.0386 .618025 cv
54.2044 1.60418 li
cp
57.1437 1.20745 mo
57.8074 1.14042 58.464 1.08975 59.1134 1.05525 cv
59.0603 .0566549 li
59.0603 .0566568 li
58.3949 .0920248 57.7224 .143919 57.0432 .212519 cv
57.1437 1.20746 li
cp
60.1 1.01505 mo
60.4636 1.00479 60.8249 .999673 61.1838 .999681 cv
61.482 .999681 61.7785 1.00321 62.0734 1.01025 cv
62.0973 .0105343 li
62.0973 .0105295 li
61.7944 .00330257 61.4899 -.000325203 61.1838 -.000317574 cv
61.1838 -.00031662 li
60.8154 -.00031662 60.4447 .00492573 60.0718 .0154533 cv
60.1 1.01506 li
60.1 1.01505 li
cp
63.0588 1.0471 mo
63.7225 1.081 64.3774 1.133 65.0234 1.20284 cv
65.1309 .208632 li
65.1309 .208629 li
64.4658 .136727 63.7921 .0832491 63.1099 .0484028 cv
63.0589 1.0471 li
cp
66.001 1.32306 mo
66.6576 1.41369 67.3046 1.52315 67.9418 1.65115 cv
68.1387 .670742 li
68.1387 .670739 li
67.4813 .538661 66.8142 .425828 66.1377 .332448 cv
66.0009 1.32306 li
cp
68.9032 1.86008 mo
69.5467 2.01064 70.1799 2.18059 70.8023 2.36964 cv
71.0929 1.41279 li
70.4495 1.21738 69.7954 1.04183 69.131 .886369 cv
68.9032 1.86008 li
cp
71.738 2.67087 mo
72.3617 2.88323 72.9742 3.11529 73.5754 3.36677 cv
73.9613 2.44424 li
73.3391 2.18395 72.7053 1.94386 72.0603 1.72424 cv
71.738 2.67087 li
cp
74.4769 3.76233 mo
75.0739 4.03669 75.659 4.33081 76.2323 4.64439 cv
76.7122 3.76709 li
76.1186 3.44232 75.5125 3.13775 74.8945 2.8537 cv
74.4769 3.76233 li
cp
77.0858 5.13095 mo
77.6489 5.46516 78.1999 5.81882 78.7384 6.19169 cv
79.3076 5.36952 li
78.75 4.98342 78.1794 4.61714 77.5962 4.27101 cv
77.0858 5.13095 li
cp
79.5351 6.76402 mo
80.0587 7.15411 80.5699 7.56309 81.0685 7.9907 cv
81.7195 7.23164 li
81.2037 6.78925 80.6746 6.36595 80.1325 5.9621 cv
79.5351 6.76401 li
cp
81.8035 8.64299 mo
82.2838 9.08392 82.7516 9.54291 83.2068 10.0197 cv
83.9301 9.32931 li
83.46 8.83673 82.9764 8.3623 82.4798 7.90633 cv
81.8035 8.64299 li
cp
83.8743 10.7421 mo
84.3085 11.2274 84.7304 11.7298 85.1397 12.249 cv
85.9251 11.63 li
85.5031 11.0947 85.0678 10.5763 84.6195 10.0753 cv
83.8743 10.7421 li
cp
85.7374 13.0314 mo
86.1248 13.5545 86.5 14.0936 86.8627 14.6484 cv
87.6997 14.1011 li
87.3264 13.5303 86.9402 12.9753 86.5411 12.4363 cv
85.7374 13.0314 li
cp
87.3906 15.4808 mo
87.7314 16.0354 88.0604 16.6047 88.3774 17.1885 cv
89.2562 16.7114 li
88.9309 16.1121 88.5929 15.5273 88.2425 14.9572 cv
87.3906 15.4808 li
cp
88.837 18.0619 mo
89.1328 18.642 89.4171 19.2357 89.6898 19.8428 cv
90.602 19.4331 li
90.3227 18.8113 90.0313 18.2027 89.7278 17.6076 cv
88.837 18.0619 li
cp
90.0839 20.7489 mo
90.1053 20.7999 li
90.3592 21.4052 90.6144 22.0028 90.8706 22.5929 cv
91.7878 22.1946 li
91.5333 21.6083 91.2798 21.0146 91.0275 20.413 cv
91.0056 20.3609 li
90.0839 20.7489 li
cp
91.2731 23.5116 mo
91.5463 24.1297 91.8207 24.7394 92.0962 25.3408 cv
93.0053 24.9243 li
92.7317 24.327 92.4592 23.7214 92.1877 23.1073 cv
91.2731 23.5116 li
cp
92.517 26.2514 mo
92.8027 26.8641 93.0895 27.4681 93.3772 28.0636 cv
94.2776 27.6285 li
93.9919 27.0372 93.7071 26.4374 93.4233 25.8288 cv
92.517 26.2514 li
cp
93.8168 28.9654 mo
94.1153 29.5723 94.4148 30.1702 94.7151 30.7593 cv
95.606 30.3052 li
95.3079 29.7203 95.0106 29.1267 94.7142 28.524 cv
93.8168 28.9654 li
cp
95.1739 31.6516 mo
95.4855 32.2522 95.7979 32.8435 96.1109 33.4258 cv
96.9917 32.9523 li
96.681 32.3743 96.3709 31.7874 96.0616 31.1911 cv
95.1739 31.6516 li
cp
96.5893 34.3078 mo
96.9143 34.9016 97.2398 35.4858 97.5658 36.0608 cv
98.4357 35.5676 li
98.1122 34.997 97.7891 34.4172 97.4666 33.8278 cv
96.5893 34.3078 li
cp
98.064 36.9319 mo
98.4024 37.5185 98.7412 38.0951 99.0802 38.6623 cv
99.9386 38.1493 li
99.6022 37.5865 99.266 37.0142 98.9301 36.4322 cv
98.064 36.9319 li
cp
99.5983 39.5218 mo
99.9503 40.1006 100.302 40.6693 100.654 41.2283 cv
101.501 40.6955 li
101.151 40.1408 100.802 39.5766 100.453 39.0022 cv
99.5983 39.5218 li
cp
101.192 42.0755 mo
101.558 42.6461 101.923 43.2065 102.288 43.7569 cv
103.122 43.2044 li
102.76 42.6583 102.397 42.1023 102.034 41.5361 cv
101.192 42.0755 li
cp
102.846 44.5913 mo
103.225 45.1535 103.603 45.7051 103.98 46.2466 cv
104.801 45.675 li
104.426 45.1376 104.051 44.5902 103.675 44.0324 cv
102.846 44.5913 li
cp
104.557 47.0678 mo
104.949 47.6213 105.34 48.1641 105.729 48.6966 cv
106.536 48.1065 li
106.15 47.5779 105.762 47.0393 105.373 46.4899 cv
104.557 47.0678 li
cp
106.324 49.5045 mo
106.729 50.0492 107.131 50.5831 107.532 51.1067 cv
108.326 50.4992 li
107.928 49.9792 107.529 49.4492 107.127 48.9084 cv
106.324 49.5045 li
cp
108.144 51.9014 mo
108.56 52.4376 108.973 52.9629 109.384 53.4778 cv
110.166 52.8545 li
109.758 52.3428 109.347 51.821 108.934 51.2884 cv
108.144 51.9014 li
cp
110.012 54.26 mo
110.438 54.7882 110.861 55.3054 111.28 55.8125 cv
112.051 55.1754 li
111.634 54.671 111.213 54.1568 110.79 53.6318 cv
110.012 54.26 li
cp
111.921 56.5834 mo
112.356 57.1044 112.787 57.6147 113.213 58.115 cv
113.974 57.467 li
113.55 56.9687 113.121 56.4607 112.688 55.9422 cv
111.921 56.5834 li
cp
113.863 58.8766 mo
114.305 59.3922 114.741 59.8972 115.171 60.3926 cv
115.926 59.7376 li
115.498 59.2432 115.063 58.7396 114.622 58.2258 cv
113.863 58.8767 li
cp
115.827 61.148 mo
116.272 61.6603 116.71 62.1625 117.14 62.6558 cv
117.894 61.9989 li
117.464 61.5054 117.026 61.0034 116.581 60.4917 cv
115.827 61.148 li
cp
117.796 63.4095 mo
118.241 63.9217 118.676 64.4246 119.101 64.9194 cv
119.86 64.2681 li
119.433 63.7711 118.997 63.2667 118.551 62.7535 cv
117.796 63.4095 li
cp
119.749 65.6776 mo
120.188 66.1942 120.614 66.7025 121.027 67.2041 cv
121.799 66.5686 li
121.382 66.0622 120.952 65.5499 120.511 65.0302 cv
119.749 65.6776 li
cp
121.655 67.9749 mo
122.079 68.5015 122.487 69.0214 122.878 69.5365 cv
123.674 68.9317 li
123.277 68.4079 122.863 67.8806 122.433 67.3477 cv
121.655 67.975 li
cp
123.47 70.3303 mo
123.867 70.8734 124.244 71.4122 124.6 71.9489 cv
125.433 71.3963 li
125.068 70.8453 124.682 70.2941 124.277 69.7401 cv
123.47 70.3303 li
cp
125.133 72.777 mo
125.485 73.343 125.813 73.9078 126.115 74.4745 cv
126.998 74.0042 li
126.684 73.4158 126.345 72.8314 125.981 72.2481 cv
125.133 72.777 li
cp
126.558 75.3465 mo
126.844 75.9386 127.101 76.534 127.327 77.1361 cv
128.263 76.7845 li
128.026 76.1523 127.757 75.5291 127.459 74.9117 cv
126.558 75.3465 li
cp
127.646 78.0534 mo
127.842 78.6684 128.007 79.2919 128.138 79.9278 cv
129.117 79.7262 li
128.979 79.0547 128.805 78.3966 128.598 77.7491 cv
127.646 78.0534 li
cp
128.307 80.8825 mo
128.401 81.5112 128.463 82.1533 128.49 82.8122 cv
129.489 82.7706 li
129.46 82.0765 129.395 81.3986 129.296 80.7345 cv
128.307 80.8825 li
cp
128.506 83.7862 mo
128.5 84.4184 128.463 85.0667 128.394 85.7338 cv
129.389 85.8368 li
129.461 85.1397 129.499 84.4601 129.506 83.7956 cv
128.506 83.7862 li
cp
128.272 86.7041 mo
128.181 87.3293 128.062 87.9712 127.913 88.6316 cv
128.889 88.8504 li
129.042 88.1668 129.166 87.5003 129.262 86.8491 cv
128.272 86.7041 li
cp
127.682 89.5868 mo
127.523 90.2008 127.34 90.8307 127.132 91.4779 cv
128.084 91.7842 li
128.298 91.1197 128.486 90.4714 128.65 89.8376 cv
127.682 89.5868 li
cp
126.818 92.4133 mo
126.607 93.015 126.375 93.6315 126.122 94.2636 cv
127.051 94.6353 li
127.309 93.9903 127.546 93.36 127.761 92.7436 cv
126.818 92.4133 li
cp
125.745 95.1789 mo
125.496 95.769 125.228 96.3726 124.941 96.9903 cv
125.848 97.4111 li
126.14 96.7837 126.412 96.1697 126.666 95.5685 cv
125.745 95.1789 li
cp
124.517 97.887 mo
124.237 98.4668 123.942 99.0587 123.63 99.6635 cv
124.518 100.122 li
124.834 99.5096 125.134 98.9097 125.418 98.3215 cv
124.517 97.887 li
cp
123.169 100.544 mo
122.866 101.115 122.549 101.696 122.217 102.29 cv
123.09 102.778 li
123.425 102.178 123.746 101.59 124.052 101.013 cv
123.169 100.544 li
cp
121.728 103.156 mo
121.406 103.719 121.072 104.292 120.725 104.876 cv
121.585 105.387 li
121.934 104.798 122.271 104.22 122.596 103.652 cv
121.728 103.156 li
cp
120.213 105.73 mo
119.876 106.286 119.529 106.852 119.169 107.427 cv
120.017 107.957 li
120.379 107.378 120.729 106.808 121.068 106.248 cv
120.213 105.73 li
cp
118.639 108.271 mo
118.29 108.821 117.931 109.38 117.562 109.948 cv
118.4 110.493 li
118.772 109.922 119.133 109.36 119.483 108.806 cv
118.639 108.271 li
cp
117.016 110.783 mo
116.657 111.328 116.289 111.882 115.911 112.444 cv
116.741 113.001 li
117.121 112.437 117.491 111.881 117.851 111.332 cv
117.016 110.783 li
cp
115.353 113.27 mo
114.986 113.811 114.61 114.36 114.225 114.916 cv
115.048 115.485 li
115.434 114.926 115.812 114.375 116.18 113.832 cv
115.353 113.27 li
cp
113.656 115.736 mo
113.282 116.274 112.9 116.818 112.509 117.37 cv
113.326 117.947 li
113.717 117.394 114.101 116.847 114.477 116.308 cv
113.656 115.736 li
cp
111.931 118.183 mo
111.551 118.717 111.163 119.258 110.767 119.806 cv
111.578 120.391 li
111.975 119.842 112.364 119.3 112.746 118.764 cv
111.931 118.183 li
cp
110.182 120.614 mo
110 120.864 li
109.669 121.319 109.334 121.768 108.996 122.21 cv
109.791 122.817 li
110.133 122.369 110.473 121.914 110.809 121.452 cv
110.991 121.202 li
110.182 120.614 li
cp
108.388 122.996 mo
107.976 123.52 107.559 124.035 107.139 124.539 cv
107.907 125.179 li
108.334 124.667 108.756 124.145 109.174 123.613 cv
108.388 122.996 li
cp
106.498 125.297 mo
106.063 125.804 105.625 126.299 105.183 126.784 cv
105.921 127.458 li
106.371 126.966 106.816 126.463 107.257 125.949 cv
106.498 125.297 li
cp
104.508 127.512 mo
104.051 127.998 103.59 128.472 103.125 128.934 cv
103.831 129.643 li
104.303 129.173 104.772 128.691 105.236 128.197 cv
104.508 127.512 li
cp
102.417 129.628 mo
101.936 130.09 101.451 130.54 100.964 130.977 cv
101.632 131.721 li
102.128 131.277 102.621 130.819 103.11 130.348 cv
102.417 129.628 li
cp
100.221 131.631 mo
99.7155 132.068 99.2076 132.49 98.6972 132.897 cv
99.3213 133.679 li
99.8419 133.263 100.36 132.833 100.874 132.388 cv
100.221 131.631 li
cp
97.9176 133.507 mo
97.3879 133.913 96.8558 134.303 96.3219 134.677 cv
96.8956 135.496 li
97.4414 135.114 97.9849 134.715 98.5257 134.301 cv
97.9176 133.507 li
cp
95.5058 135.235 mo
94.951 135.605 94.3945 135.958 93.8368 136.293 cv
94.3515 137.15 li
94.9232 136.807 95.4932 136.446 96.0608 136.067 cv
95.5057 135.235 li
cp
92.984 136.79 mo
92.4042 137.119 91.8235 137.427 91.2423 137.716 cv
91.6874 138.612 li
92.2852 138.315 92.8818 137.997 93.4768 137.66 cv
92.984 136.79 li
cp
90.3537 138.142 mo
89.7496 138.421 89.1456 138.678 88.5421 138.913 cv
88.9044 139.845 li
89.5276 139.602 90.1506 139.337 90.7727 139.05 cv
90.3537 138.142 li
cp
87.6199 139.254 mo
86.9938 139.474 86.3688 139.669 85.7455 139.839 cv
86.0093 140.804 li
86.6561 140.627 87.3036 140.425 87.9512 140.197 cv
87.6199 139.254 li
cp
84.7948 140.08 mo
84.1511 140.23 83.5097 140.354 82.8714 140.449 cv
83.0191 141.438 li
83.6849 141.338 84.3528 141.21 85.0219 141.054 cv
84.7948 140.08 li
cp
81.9013 140.572 mo
81.2475 140.641 80.5975 140.681 79.9519 140.69 cv
79.9657 141.689 li
80.6425 141.68 81.323 141.639 82.0062 141.567 cv
81.9013 140.572 li
cp
78.9753 140.68 mo
78.3226 140.657 77.675 140.603 77.0332 140.516 cv
76.8991 141.507 li
77.5747 141.599 78.2557 141.656 78.941 141.679 cv
78.9753 140.68 li
cp
76.0718 140.361 mo
75.4353 140.241 74.805 140.088 74.1816 139.901 cv
73.8947 140.859 li
74.5519 141.056 75.2163 141.217 75.8868 141.344 cv
76.0718 140.361 li
cp
73.2577 139.598 mo
72.6518 139.381 72.053 139.131 71.4618 138.847 cv
71.0288 139.749 li
71.6511 140.048 72.2821 140.311 72.9207 140.539 cv
73.2577 139.598 li
cp
70.5948 138.403 mo
70.0324 138.097 69.4774 137.759 68.9306 137.387 cv
68.3689 138.215 li
68.9423 138.604 69.5251 138.959 70.1166 139.281 cv
70.5948 138.403 li
cp
68.1358 136.82 mo
67.6243 136.437 67.1204 136.024 66.6248 135.58 cv
65.9575 136.325 li
66.4743 136.788 67.0009 137.219 67.5363 137.621 cv
68.1358 136.82 li
cp
65.9092 134.912 mo
65.4508 134.466 65.0001 133.992 64.5576 133.491 cv
63.8078 134.152 li
64.2666 134.672 64.7348 135.164 65.2119 135.628 cv
65.9092 134.912 li
cp
63.9212 132.743 mo
63.5145 132.248 63.1154 131.728 62.7242 131.183 cv
61.9116 131.765 li
62.3151 132.328 62.7275 132.865 63.1484 133.378 cv
63.9212 132.743 li
cp
62.1525 130.368 mo
61.7608 129.811 61.367 129.268 60.9713 128.738 cv
60.1702 129.337 li
60.5601 129.859 60.9483 130.394 61.3345 130.943 cv
62.1525 130.368 li
cp
60.3625 127.936 mo
59.9466 127.397 59.5287 126.872 59.109 126.36 cv
58.3361 126.995 li
58.7493 127.498 59.1608 128.015 59.5705 128.547 cv
60.3625 127.936 li
cp
58.4636 125.587 mo
58.023 125.067 57.5806 124.562 57.1364 124.071 cv
56.395 124.742 li
56.8319 125.225 57.2672 125.722 57.7009 126.233 cv
58.4636 125.587 li
cp
56.454 123.33 mo
55.9885 122.832 55.5214 122.35 55.0528 121.882 cv
54.346 122.589 li
54.8067 123.049 55.266 123.524 55.7238 124.013 cv
56.454 123.33 li
cp
54.3337 121.175 mo
53.8437 120.702 53.3524 120.244 52.8599 119.8 cv
52.1905 120.543 li
52.6745 120.979 53.1574 121.43 53.639 121.895 cv
54.3337 121.175 li
cp
52.1052 119.132 mo
51.5918 118.685 51.0773 118.253 50.5622 117.835 cv
49.9321 118.612 li
50.4385 119.023 50.9441 119.447 51.4487 119.886 cv
52.1052 119.132 li
cp
49.774 117.207 mo
49.2387 116.787 48.7028 116.382 48.1668 115.991 cv
47.5769 116.798 li
48.1041 117.183 48.631 117.582 49.1572 117.994 cv
49.774 117.207 li
cp
47.3481 115.403 mo
46.7932 115.011 46.2383 114.633 45.6837 114.268 cv
45.1334 115.103 li
45.6794 115.463 46.2256 115.835 46.7716 116.22 cv
47.3481 115.403 li
cp
44.8384 113.72 mo
44.2665 113.355 43.6953 113.003 43.1251 112.663 cv
42.6121 113.521 li
43.1744 113.857 43.7375 114.204 44.3009 114.563 cv
44.8384 113.72 li
cp
42.2577 112.152 mo
41.6718 111.813 41.0874 111.484 40.5048 111.166 cv
40.0249 112.043 li
40.6007 112.358 41.178 112.682 41.7563 113.017 cv
42.2577 112.152 li
cp
39.6202 110.688 mo
39.0236 110.37 38.4293 110.062 37.8377 109.761 cv
37.3847 110.653 li
37.9711 110.951 38.5597 111.256 39.15 111.571 cv
39.6202 110.688 li
cp
36.9409 109.31 mo
36.3369 109.009 35.7362 108.716 35.1393 108.428 cv
34.705 109.329 li
35.2988 109.615 35.8957 109.907 36.4951 110.205 cv
36.9409 109.31 li
cp
34.2355 107.995 mo
33.6277 107.705 33.0242 107.421 32.4255 107.139 cv
31.9999 108.044 li
32.5979 108.325 33.1999 108.609 33.8054 108.898 cv
34.2355 107.995 li
cp
31.5204 106.714 mo
30.9125 106.428 30.31 106.145 29.7136 105.862 cv
29.2848 106.765 li
29.8834 107.049 30.487 107.333 31.0952 107.619 cv
31.5204 106.714 li
cp
28.8132 105.432 mo
28.2095 105.142 27.6125 104.852 27.0228 104.558 cv
26.5773 105.454 li
27.1722 105.75 27.7735 106.042 28.3804 106.334 cv
28.8132 105.432 li
cp
26.1344 104.111 mo
25.5401 103.808 24.9539 103.5 24.3764 103.187 cv
23.8991 104.065 li
24.4853 104.384 25.0791 104.695 25.68 105.002 cv
26.1344 104.111 li
cp
23.5087 102.706 mo
22.9304 102.38 22.3616 102.046 21.8029 101.702 cv
21.2786 102.554 li
21.8494 102.905 22.4292 103.246 23.0174 103.577 cv
23.5087 102.706 li
cp
20.9651 101.174 mo
20.4109 100.815 19.8674 100.445 19.3352 100.061 cv
18.7501 100.872 li
19.297 101.267 19.8546 101.646 20.422 102.014 cv
20.9652 101.174 li
cp
18.5459 99.4747 mo
18.034 99.0829 17.5334 98.6765 17.0447 98.253 cv
17.0204 98.2319 li
16.3647 98.9869 li
16.3898 99.0087 li
16.8946 99.4461 17.411 99.8654 17.938 100.269 cv
18.5459 99.4747 li
cp
16.2883 97.5747 mo
15.8149 97.1358 15.3468 96.6746 14.8851 96.1921 cv
14.1626 96.8835 li
14.6376 97.3798 15.1198 97.8551 15.6084 98.3081 cv
16.2883 97.5747 li
cp
14.2132 95.4701 mo
13.7781 94.9895 13.349 94.49 12.9269 93.9724 cv
12.152 94.6045 li
12.5847 95.1349 13.0248 95.6475 13.4719 96.1413 cv
14.2132 95.4701 li
cp
12.3119 93.1993 mo
11.9129 92.6852 11.5207 92.1551 11.1359 91.6096 cv
10.3188 92.186 li
10.7121 92.7437 11.1134 93.286 11.5219 93.8124 cv
12.3119 93.1992 li
cp
10.5745 90.7951 mo
10.21 90.2538 9.85269 89.6987 9.50318 89.1304 cv
8.65139 89.6543 li
9.00797 90.2341 9.37271 90.8008 9.74507 91.3537 cv
10.5745 90.7951 li
cp
8.99284 88.2819 mo
8.66129 87.718 8.33735 87.1422 8.02159 86.5551 cv
7.14088 87.0287 li
7.46259 87.6269 7.79275 88.2138 8.13084 88.7888 cv
8.99284 88.2818 li
cp
7.56035 85.6781 mo
7.26065 85.0953 6.96896 84.5021 6.68576 83.8991 cv
5.78062 84.3242 li
6.06885 84.9379 6.36582 85.5418 6.67104 86.1354 cv
7.56035 85.6781 li
cp
6.27219 82.9981 mo
6.00359 82.3992 5.74336 81.7913 5.49193 81.1749 cv
4.566 81.5527 li
4.82172 82.1795 5.08645 82.7979 5.35976 83.4073 cv
6.27219 82.9981 li
cp
5.12512 80.2536 mo
4.88716 79.641 4.65791 79.0205 4.43779 78.3928 cv
3.49413 78.7237 li
3.7179 79.3619 3.95099 79.9927 4.19297 80.6156 cv
5.12512 80.2536 li
cp
4.11724 77.4541 mo
3.90974 76.8298 3.71128 76.1988 3.52227 75.5615 cv
2.56355 75.8459 li
2.75565 76.4935 2.95736 77.1349 3.16828 77.7695 cv
4.11725 77.4541 li
cp
3.24789 74.6082 mo
3.07088 73.974 2.90327 73.334 2.74542 72.6888 cv
1.77406 72.9264 li
1.93447 73.5821 2.10481 74.2325 2.2847 74.877 cv
3.24789 74.6082 li
cp
2.51743 71.7233 mo
2.37117 71.0809 2.23465 70.4336 2.10822 69.7819 cv
1.12653 69.9724 li
1.25501 70.6346 1.39375 71.2924 1.54238 71.9453 cv
2.51744 71.7233 li
cp
1.92716 68.8066 mo
1.81225 68.1586 1.70741 67.5066 1.61295 66.8511 cv
.623175 66.9937 li
.719175 67.66 .825742 68.3226 .942515 68.9812 cv
1.92716 68.8066 li
cp
1.47988 65.8711 mo
1.39659 65.2179 1.3237 64.5615 1.26156 63.9024 cv
.265971 63.9963 li
.32915 64.6664 .403245 65.3336 .487909 65.9976 cv
1.47988 65.8711 li
cp
1.17685 62.9169 mo
1.12587 62.2602 1.08565 61.6011 1.05652 60.9399 cv
.0574937 60.9839 li
.0574942 60.9839 li
.0871172 61.6563 .128016 62.3266 .179847 62.9943 cv
1.17685 62.9169 li
cp
1.0213 59.9507 mo
1.00708 59.4271 .999892 58.9023 .999899 58.3766 cv
.999894 58.2408 1.00038 58.1049 1.00134 57.969 cv
.00136662 57.9619 li
.00136089 57.9619 li
.000376701 58.1002 -.000109673 58.2384 -.000103951 58.3766 cv
-.000102043 58.3766 li
-.000103951 58.9114 .00721169 59.4452 .0216722 59.9779 cv
1.0213 59.9507 li
cp
1.01689 56.9796 mo
1.03295 56.3208 1.06048 55.6609 1.0998 55.0004 cv
.101566 54.941 li
.101563 54.941 li
.0615416 55.6133 .0335302 56.2848 .0171862 56.9552 cv
1.01689 56.9796 li
cp
1.16733 54.0134 mo
1.21814 53.3565 1.28074 52.6992 1.35547 52.0419 cv
.361876 51.929 li
.361873 51.929 li
.285769 52.5983 .22203 53.2675 .170304 53.9362 cv
1.16733 54.0134 li
cp
1.47613 51.0603 mo
1.56242 50.4075 1.66085 49.7548 1.77169 49.1028 cv
.785838 48.9352 li
.785832 48.9352 li
.672898 49.5995 .572646 50.2643 .484748 50.9293 cv
1.47612 51.0603 li
cp
1.94646 48.1298 mo
2.06888 47.4832 2.20371 46.8373 2.35125 46.1927 cv
1.37646 45.9696 li
1.22606 46.6266 1.08866 47.2849 .96391 47.9438 cv
1.94646 48.1298 li
cp
2.58088 45.2318 mo
2.73987 44.5936 2.91152 43.9568 3.09613 43.3219 cv
2.1359 43.0427 li
1.94764 43.6902 1.77262 44.3394 1.61054 44.99 cv
2.58088 45.2318 li
cp
3.38105 42.3765 mo
3.57681 41.7493 3.78544 41.124 4.00725 40.501 cv
3.06518 40.1656 li
2.83892 40.8011 2.62611 41.4389 2.42645 42.0786 cv
3.38104 42.3765 li
cp
4.34855 39.5718 mo
4.5814 38.957 4.82731 38.3446 5.08659 37.7351 cv
4.16639 37.3437 li
3.90182 37.9656 3.65092 38.5904 3.41336 39.2177 cv
4.34855 39.5718 li
cp
5.48319 36.8284 mo
5.75252 36.2291 6.03502 35.6329 6.33099 35.0399 cv
5.43626 34.5933 li
5.13422 35.1984 4.84593 35.8069 4.57108 36.4184 cv
5.48319 36.8284 li
cp
6.78196 34.159 mo
7.08704 33.5777 7.40533 32.9998 7.73711 32.4257 cv
6.87128 31.9254 li
6.53268 32.5113 6.20785 33.1011 5.8965 33.6943 cv
6.78196 34.159 li
cp
8.24095 31.5739 mo
8.58067 31.0127 8.93358 30.4553 9.29994 29.902 cv
8.46615 29.3499 li
8.09231 29.9145 7.73217 30.4834 7.38547 31.0561 cv
8.24095 31.5739 li
cp
9.85463 29.0823 mo
10.2275 28.5431 10.6135 28.008 11.0129 27.4773 cv
10.2138 26.876 li
9.80646 27.4174 9.41265 27.9633 9.03215 28.5135 cv
9.85464 29.0823 li
cp
11.6159 26.6924 mo
12.0202 26.1767 12.4375 25.6655 12.8679 25.159 cv
12.1059 24.5114 li
11.667 25.0279 11.2414 25.5493 10.829 26.0753 cv
11.6159 26.6924 li
cp
13.5163 24.4108 mo
13.9501 23.92 14.3965 23.4338 14.8559 22.9526 cv
14.1326 22.2621 li
13.6644 22.7526 13.2093 23.2482 12.767 23.7485 cv
13.5163 24.4108 li
cp
15.5465 22.2427 mo
16.0075 21.7777 16.4808 21.3175 16.9669 20.8623 cv
16.2834 20.1324 li
15.7883 20.596 15.306 21.0648 14.8363 21.5387 cv
15.5465 22.2427 li
cp
17.6962 20.1918 mo
18.1822 19.753 18.6803 19.3192 19.1907 18.8905 cv
18.5475 18.1248 li
18.0281 18.5611 17.521 19.0027 17.0261 19.4495 cv
17.6962 20.1918 li
cp
0 .8 .95 0 cmyk
f
12.2837 52.7758 mo
12.368 52.1106 12.4597 51.4551 12.5586 50.8091 cv
11.5702 50.6576 li
11.4699 51.3123 11.377 51.9765 11.2917 52.6501 cv
12.2837 52.7758 li
cp
12.7156 49.8286 mo
12.8261 49.1676 12.9443 48.5167 13.0701 47.8759 cv
12.0888 47.6833 li
11.9612 48.3335 11.8413 48.9935 11.7293 49.6638 cv
12.7156 49.8286 li
cp
13.2683 46.9036 mo
13.4069 46.2481 13.5536 45.6035 13.7081 44.9696 cv
12.7365 44.7328 li
12.5796 45.3768 12.4307 46.0313 12.2899 46.6966 cv
13.2683 46.9036 li
cp
13.9505 44.008 mo
14.1193 43.3601 14.2965 42.7236 14.4817 42.0985 cv
13.5229 41.8144 li
13.3345 42.4503 13.1544 43.0973 12.9828 43.7558 cv
13.9505 44.008 li
cp
14.7713 41.1507 mo
14.9723 40.5126 15.1819 39.8866 15.3998 39.2725 cv
14.4573 38.9381 li
14.2354 39.5635 14.0221 40.2008 13.8175 40.8502 cv
14.7713 41.1507 li
cp
15.7395 38.3423 mo
15.9747 37.7165 16.2186 37.1036 16.471 36.5033 cv
15.5491 36.1157 li
15.2917 36.728 15.0431 37.3529 14.8034 37.9905 cv
15.7395 38.3423 li
cp
16.8635 35.5949 mo
17.1346 34.9846 17.4145 34.3878 17.703 33.8043 cv
16.8066 33.3611 li
16.5119 33.9571 16.2262 34.5663 15.9496 35.1891 cv
16.8635 35.5949 li
cp
18.1507 32.9225 mo
18.459 32.3311 18.7763 31.7538 19.1022 31.1904 cv
18.2366 30.6897 li
17.9033 31.2659 17.5789 31.856 17.2639 32.4603 cv
18.1507 32.9225 li
cp
19.6066 30.3407 mo
19.9531 29.7718 20.3086 29.2177 20.6727 28.6781 cv
19.8437 28.1188 li
19.4709 28.6714 19.1071 29.2385 18.7526 29.8205 cv
19.6066 30.3407 li
cp
21.2347 27.866 mo
21.6196 27.3236 22.0135 26.7966 22.4158 26.2844 cv
21.6295 25.6667 li
21.2171 26.1916 20.8136 26.7316 20.4192 27.2871 cv
21.2347 27.866 li
cp
23.0352 25.5158 mo
23.4582 25.0039 23.8899 24.5077 24.3298 24.0268 cv
23.592 23.3518 li
23.1408 23.8451 22.6981 24.3539 22.2643 24.8787 cv
23.0352 25.5158 li
cp
25.0051 23.3071 mo
25.465 22.8294 25.9332 22.3676 26.4092 21.9214 cv
25.7253 21.1919 li
25.2368 21.6497 24.7565 22.1235 24.2847 22.6136 cv
25.0051 23.3071 li
cp
27.1377 21.256 mo
27.6324 20.8157 28.1349 20.3915 28.6447 19.9831 cv
28.0194 19.2027 li
27.4962 19.6219 26.9805 20.0571 26.4728 20.509 cv
27.1377 21.256 li
cp
29.4226 19.3762 mo
29.9494 18.976 30.4834 18.592 31.0239 18.2237 cv
30.4609 17.3973 li
29.9063 17.7751 29.3583 18.1692 28.8177 18.5798 cv
29.4226 19.3762 li
cp
31.8466 17.6786 mo
32.4022 17.3205 32.9643 16.9784 33.5322 16.652 cv
33.0338 15.7851 li
32.4515 16.1198 31.8749 16.4706 31.3049 16.838 cv
31.8466 17.6786 li
cp
34.3942 16.1708 mo
34.9751 15.856 35.5615 15.557 36.1529 15.2734 cv
35.7204 14.3717 li
35.1144 14.6623 34.5133 14.9688 33.9177 15.2916 cv
34.3942 16.1708 li
cp
37.0486 14.8571 mo
37.651 14.586 38.2581 14.3304 38.869 14.0898 cv
38.5026 13.1593 li
37.8771 13.4056 37.2554 13.6674 36.6382 13.9452 cv
37.0486 14.8571 li
cp
39.7927 13.7386 mo
40.413 13.511 41.0368 13.2985 41.6636 13.1006 cv
41.3626 12.147 li
40.7215 12.3494 40.0831 12.5668 39.4482 12.7998 cv
39.7927 13.7386 li
cp
42.6098 12.8137 mo
43.2445 12.6289 43.8817 12.4588 44.5206 12.303 cv
44.2837 11.3315 li
43.6307 11.4907 42.9793 11.6646 42.3303 11.8535 cv
42.6098 12.8137 li
cp
45.4842 12.079 mo
46.1301 11.9362 46.7773 11.8075 47.4251 11.6927 cv
47.2506 10.7081 li
46.5891 10.8253 45.9281 10.9567 45.2682 11.1026 cv
45.4842 12.079 li
cp
48.4014 11.53 mo
49.0556 11.428 49.7099 11.3397 50.3635 11.2647 cv
50.2496 10.2713 li
49.5827 10.3477 48.915 10.4378 48.2473 10.542 cv
48.4014 11.5301 li
cp
51.3483 11.1617 mo
52.0082 11.0993 52.6669 11.0503 53.3236 11.0141 cv
53.2686 10.0156 li
52.599 10.0525 51.9272 10.1025 51.2542 10.1662 cv
51.3483 11.1617 li
cp
54.3131 10.9691 mo
54.9335 10.947 55.5517 10.9361 56.167 10.9361 cv
56.2942 10.9362 li
56.2966 9.93624 li
56.167 9.93608 li
55.5399 9.93608 54.9098 9.94716 54.2774 9.96979 cv
54.3131 10.9692 li
cp
57.2855 10.948 mo
57.95 10.9622 58.6106 10.989 59.2663 11.0277 cv
59.3252 10.0294 li
58.6571 9.98997 57.984 9.96273 57.3068 9.94827 cv
57.2855 10.948 li
cp
60.2555 11.0954 mo
60.9192 11.1471 61.5774 11.211 62.229 11.2865 cv
62.344 10.2931 li
61.6801 10.2162 61.0095 10.1511 60.3332 10.0984 cv
60.2555 11.0954 li
cp
63.2119 11.4097 mo
63.8722 11.4989 64.5252 11.5999 65.1696 11.7121 cv
65.3411 10.7269 li
64.6842 10.6125 64.0187 10.5096 63.3457 10.4187 cv
63.2119 11.4097 li
cp
66.1436 11.8914 mo
66.799 12.0187 67.4447 12.1575 68.0796 12.3072 cv
68.309 11.3339 li
67.6612 11.1811 67.0025 11.0395 66.3342 10.9097 cv
66.1436 11.8914 li
cp
69.0406 12.5442 mo
69.6885 12.711 70.3241 12.8892 70.946 13.0779 cv
71.2363 12.121 li
70.6007 11.9281 69.9515 11.7461 69.29 11.5758 cv
69.0406 12.5442 li
cp
71.889 13.3755 mo
72.5264 13.5845 73.1479 13.8047 73.7521 14.035 cv
74.1083 13.1006 li
73.4891 12.8645 72.8527 12.6391 72.2007 12.4253 cv
71.889 13.3755 li
cp
74.6683 14.3978 mo
75.2874 14.6546 75.8705 14.9348 76.42 15.2368 cv
76.9016 14.3604 li
76.3192 14.0403 75.703 13.7444 75.0515 13.4742 cv
74.6683 14.3978 li
cp
77.2549 15.7282 mo
77.8149 16.0808 78.3365 16.4583 78.8229 16.8588 cv
79.4586 16.0868 li
78.9393 15.6592 78.3831 15.2569 77.7878 14.882 cv
77.2549 15.7282 li
cp
79.5478 17.4968 mo
80.0232 17.9438 80.461 18.4156 80.8644 18.9103 cv
81.6394 18.2783 li
81.2088 17.7503 80.7408 17.246 80.2329 16.7683 cv
79.5478 17.4968 li
cp
81.4517 19.6798 mo
81.8265 20.205 82.1676 20.7529 82.478 21.3216 cv
83.3558 20.8426 li
83.0272 20.2405 82.6649 19.6582 82.2656 19.0988 cv
81.4517 19.6798 li
cp
82.9186 22.1856 mo
83.1954 22.767 83.4435 23.3678 83.6656 23.9856 cv
84.6067 23.6473 li
84.3741 23.0005 84.1135 22.3692 83.8215 21.7558 cv
82.9186 22.1856 li
cp
83.9759 24.9129 mo
84.1676 25.5298 84.3359 26.1619 84.4834 26.8071 cv
85.4583 26.5843 li
85.3056 25.9163 85.1307 25.2595 84.9308 24.6161 cv
83.9759 24.9129 li
cp
84.6863 27.7693 mo
84.81 28.4072 84.9151 29.0564 85.0041 29.7148 cv
85.9951 29.5809 li
85.9038 28.9053 85.7957 28.2374 85.668 27.579 cv
84.6863 27.7693 li
cp
85.1241 30.6954 mo
85.1958 31.3454 85.2531 32.0033 85.2984 32.6671 cv
86.296 32.5991 li
86.25 31.9228 86.1914 31.2512 86.1181 30.5858 cv
85.1241 30.6954 li
cp
85.3569 33.6568 mo
85.3901 34.314 85.4126 34.976 85.4267 35.641 cv
86.4264 35.6199 li
86.4122 34.9463 86.3894 34.2746 86.3556 33.6064 cv
85.3569 33.6568 li
cp
85.4415 36.6343 mo
85.4442 36.9247 85.4454 37.2156 85.4454 37.5067 cv
85.4454 37.8791 85.4434 38.252 85.4397 38.6249 cv
86.4397 38.6348 li
86.4434 38.2589 86.4454 37.8828 86.4454 37.5067 cv
86.4454 37.2128 86.4442 36.9189 86.4415 36.6252 cv
85.4415 36.6343 li
cp
85.4262 39.6214 mo
85.4149 40.2875 85.3993 40.9531 85.3816 41.6165 cv
86.3812 41.6431 li
86.399 40.9775 86.4146 40.3087 86.426 39.6384 cv
85.4262 39.6214 li
cp
85.3536 42.6152 mo
85.334 43.2855 85.3133 43.9526 85.2938 44.6148 cv
86.2934 44.6443 li
86.3129 43.9831 86.3335 43.3158 86.3531 42.6444 cv
85.3536 42.6152 li
cp
85.2653 45.6163 mo
85.247 46.2915 85.231 46.9606 85.2199 47.6217 cv
86.2197 47.6386 li
86.2308 46.9822 86.2467 46.3165 86.2649 45.6434 cv
85.2653 45.6163 li
cp
85.2069 48.6258 mo
85.2045 48.9036 85.2032 49.1797 85.2032 49.454 cv
85.2032 49.8525 85.206 50.2473 85.212 50.6379 cv
86.2119 50.6225 li
86.2059 50.2376 86.2032 49.848 86.2032 49.454 cv
86.2032 49.1828 86.2045 48.9095 86.2069 48.6344 cv
85.2069 48.6258 li
cp
85.2355 51.6459 mo
85.2574 52.3344 85.2916 53.0083 85.3416 53.6651 cv
86.3387 53.5892 li
86.29 52.9496 86.2565 52.2902 86.235 51.6141 cv
85.2355 51.6459 li
cp
85.4329 54.6756 mo
85.5063 55.371 85.6006 56.0447 85.7206 56.6936 cv
86.7039 56.5117 li
86.5894 55.8924 86.4984 55.2441 86.4274 54.5707 cv
85.4329 54.6756 li
cp
85.9322 57.6972 mo
86.0977 58.3899 86.2983 59.05 86.5416 59.6726 cv
87.473 59.3086 li
87.2491 58.7357 87.0612 58.1195 86.9049 57.4649 cv
85.9323 57.6972 li
cp
86.9508 60.6187 mo
87.2467 61.2531 87.5684 61.8543 87.9126 62.425 cv
88.7689 61.9085 li
88.4428 61.3678 88.138 60.7982 87.8571 60.196 cv
86.9508 60.6187 li
cp
88.4655 63.288 mo
88.8559 63.8628 89.2702 64.4048 89.7045 64.9178 cv
90.4677 64.2717 li
90.0553 63.7845 89.6626 63.2706 89.2926 62.7261 cv
88.4655 63.288 li
cp
90.3855 65.6821 mo
90.8559 66.1842 91.3456 66.6571 91.8505 67.1054 cv
92.5144 66.3576 li
92.0305 65.928 91.5631 65.4764 91.1153 64.9985 cv
90.3855 65.6821 li
cp
92.6292 67.7683 mo
93.1572 68.1999 93.6989 68.6083 94.25 68.9984 cv
94.8277 68.1822 li
94.2931 67.8038 93.77 67.4092 93.262 66.994 cv
92.6292 67.7683 li
cp
95.0873 69.573 mo
95.6508 69.9485 96.2218 70.3077 96.796 70.6556 cv
97.3141 69.8003 li
96.7496 69.4583 96.1909 69.1067 95.6418 68.7408 cv
95.0873 69.573 li
cp
97.664 71.1722 mo
98.2458 71.5129 98.8288 71.8444 99.4089 72.1718 cv
99.9004 71.3009 li
99.3222 70.9747 98.7439 70.6457 98.1694 70.3093 cv
97.664 71.1722 li
cp
100.281 72.6629 mo
100.866 72.992 101.445 73.3191 102.015 73.6493 cv
102.516 72.7841 li
101.94 72.4501 101.357 72.121 100.772 71.7915 cv
100.281 72.6629 li
cp
102.871 74.153 mo
103.443 74.4955 104.003 74.8438 104.547 75.2031 cv
105.098 74.369 li
104.539 73.9994 103.966 73.6432 103.384 73.2949 cv
102.871 74.153 li
cp
105.359 75.7583 mo
105.898 76.1397 106.416 76.5353 106.91 76.9505 cv
107.553 76.1852 li
107.035 75.7493 106.495 75.3371 105.937 74.9421 cv
105.359 75.7583 li
cp
107.639 77.5965 mo
108.113 78.0385 108.558 78.5033 108.971 78.9971 cv
109.738 78.3553 li
109.296 77.8272 108.822 77.3328 108.322 76.8657 cv
107.639 77.5965 li
cp
109.563 79.756 mo
109.934 80.2667 110.272 80.8079 110.574 81.3858 cv
111.46 80.923 li
111.135 80.3003 110.771 79.7172 110.373 79.1687 cv
109.563 79.756 li
cp
110.986 82.2522 mo
111.232 82.8203 111.444 83.4226 111.621 84.0644 cv
112.585 83.7995 li
112.397 83.1137 112.168 82.467 111.904 81.8558 cv
110.986 82.2522 li
cp
111.846 85.0025 mo
111.971 85.6063 112.066 86.2431 112.129 86.9166 cv
113.124 86.8247 li
113.059 86.1158 112.958 85.4416 112.825 84.7995 cv
111.846 85.0025 li
cp
112.194 87.8885 mo
112.207 88.1978 112.214 88.5142 112.214 88.8383 cv
112.214 89.1662 112.207 89.5018 112.193 89.8455 cv
113.192 89.8867 li
113.207 89.5297 113.214 89.1804 113.214 88.8383 cv
113.214 88.5003 113.207 88.1694 113.193 87.8454 cv
112.194 87.8885 li
cp
112.135 90.8255 mo
112.086 91.4522 112.015 92.1039 111.919 92.7822 cv
112.91 92.9214 li
113.008 92.2238 113.081 91.5514 113.132 90.9028 cv
112.135 90.8255 li
cp
111.769 93.7571 mo
111.664 94.3822 111.539 95.0287 111.394 95.6976 cv
112.371 95.9094 li
112.519 95.226 112.647 94.5642 112.755 93.9229 cv
111.769 93.7571 li
cp
111.176 96.6668 mo
111.024 97.3239 110.87 97.9692 110.712 98.6028 cv
111.683 98.8443 li
111.842 98.2049 111.998 97.554 112.15 96.8913 cv
111.176 96.6668 li
cp
110.467 99.5673 mo
110.298 100.22 110.126 100.861 109.95 101.488 cv
110.913 101.758 li
111.091 101.124 111.265 100.477 111.435 99.8179 cv
110.467 99.5673 li
cp
109.677 102.445 mo
109.488 103.092 109.295 103.726 109.099 104.347 cv
110.052 104.648 li
110.251 104.021 110.446 103.38 110.637 102.725 cv
109.677 102.445 li
cp
108.793 105.292 mo
108.581 105.933 108.366 106.559 108.146 107.17 cv
109.087 107.508 li
109.31 106.889 109.528 106.255 109.743 105.605 cv
108.793 105.292 li
cp
107.804 108.101 mo
107.566 108.734 107.324 109.349 107.078 109.948 cv
108.003 110.328 li
108.253 109.72 108.499 109.095 108.74 108.453 cv
107.804 108.101 li
cp
106.694 110.861 mo
106.426 111.482 106.154 112.083 105.878 112.666 cv
106.781 113.095 li
107.063 112.501 107.34 111.888 107.612 111.257 cv
106.694 110.861 li
cp
105.444 113.556 mo
105.143 114.16 104.836 114.743 104.524 115.306 cv
105.398 115.791 li
105.718 115.215 106.031 114.619 106.339 114.003 cv
105.444 113.556 li
cp
104.035 116.164 mo
103.694 116.746 103.347 117.304 102.994 117.839 cv
103.829 118.389 li
104.192 117.839 104.548 117.266 104.898 116.669 cv
104.035 116.164 li
cp
102.441 118.654 mo
102.054 119.205 101.661 119.73 101.263 120.228 cv
102.044 120.853 li
102.456 120.337 102.861 119.796 103.26 119.228 cv
102.441 118.654 li
cp
100.636 120.984 mo
100.199 121.493 99.7551 121.972 99.3047 122.421 cv
100.011 123.129 li
100.48 122.661 100.941 122.163 101.395 121.636 cv
100.636 120.984 li
cp
98.5981 123.097 mo
98.1067 123.548 97.6081 123.966 97.1025 124.351 cv
97.7086 125.146 li
98.239 124.742 98.761 124.305 99.2741 123.834 cv
98.5981 123.097 li
cp
96.3133 124.922 mo
95.7684 125.297 95.2159 125.635 94.656 125.94 cv
95.1334 126.818 li
95.7244 126.497 96.3066 126.14 96.8796 125.746 cv
96.3133 124.922 li
cp
93.7901 126.38 mo
93.1989 126.661 92.5999 126.905 91.9932 127.113 cv
92.3186 128.059 li
92.9605 127.838 93.5942 127.58 94.2189 127.283 cv
93.7901 126.38 li
cp
91.0651 127.404 mo
90.4412 127.58 89.8094 127.721 89.17 127.827 cv
89.3339 128.813 li
90.009 128.701 90.6769 128.553 91.3368 128.366 cv
91.0651 127.404 li
cp
88.2093 127.96 mo
87.5687 128.032 86.9208 128.071 86.2658 128.078 cv
86.2763 129.078 li
86.9638 129.07 87.6455 129.03 88.3206 128.954 cv
88.2093 127.96 li
cp
85.2899 128.065 mo
84.6468 128.041 83.9971 127.988 83.3413 127.906 cv
83.2176 128.898 li
83.901 128.983 84.5797 129.039 85.2532 129.064 cv
85.2899 128.065 li
cp
82.3719 127.765 mo
81.7362 127.66 81.095 127.529 80.4489 127.373 cv
80.2141 128.345 li
80.8827 128.506 81.5477 128.642 82.2085 128.752 cv
82.3719 127.765 li
cp
79.4972 127.126 mo
78.8744 126.953 78.2474 126.758 77.6163 126.542 cv
77.2919 127.488 li
77.941 127.711 78.5872 127.911 79.2303 128.089 cv
79.4971 127.126 li
cp
76.688 126.209 mo
76.0807 125.982 75.4701 125.736 74.8563 125.471 cv
74.46 126.389 li
75.0883 126.66 75.7143 126.913 76.3378 127.146 cv
76.688 126.209 li
cp
73.9532 125.069 mo
73.3621 124.798 72.7683 124.51 72.1722 124.206 cv
71.7179 125.096 li
72.3258 125.406 72.9319 125.7 73.5362 125.978 cv
73.9532 125.069 li
cp
71.2941 123.747 mo
70.7187 123.44 70.1413 123.118 69.5621 122.782 cv
69.0606 123.648 li
69.6494 123.989 70.2369 124.316 70.823 124.629 cv
71.2941 123.747 li
cp
68.7079 122.278 mo
68.1473 121.941 67.5853 121.591 67.022 121.23 cv
66.4816 122.071 li
67.0529 122.438 67.6233 122.793 68.1926 123.135 cv
68.7079 122.278 li
cp
66.19 120.687 mo
65.6433 120.325 65.0956 119.953 64.547 119.569 cv
63.9741 120.389 li
64.5294 120.777 65.0841 121.155 65.6382 121.521 cv
66.19 120.687 li
cp
63.7356 118.995 mo
63.2016 118.612 62.667 118.22 62.1319 117.818 cv
61.5316 118.618 li
62.0723 119.024 62.6129 119.42 63.153 119.808 cv
63.7356 118.995 li
cp
61.3394 117.217 mo
60.8172 116.816 60.2946 116.407 59.7719 115.99 cv
59.1481 116.771 li
59.6757 117.192 60.2033 117.605 60.7308 118.01 cv
61.3394 117.217 li
cp
58.9967 115.365 mo
58.4853 114.949 57.9739 114.526 57.4625 114.095 cv
56.8184 114.86 li
57.334 115.294 57.8498 115.721 58.3658 116.141 cv
58.9967 115.365 li
cp
56.7176 113.452 mo
56.2242 113.01 55.7539 112.557 55.3047 112.092 cv
54.5856 112.787 li
55.0512 113.269 55.539 113.739 56.0508 114.197 cv
56.7176 113.452 li
cp
54.6355 111.374 mo
54.1942 110.884 53.7744 110.382 53.3742 109.87 cv
52.5863 110.486 li
53.0003 111.015 53.4348 111.535 53.8921 112.043 cv
54.6355 111.374 li
cp
52.7818 109.085 mo
52.3935 108.553 52.0244 108.011 51.6726 107.46 cv
50.8298 107.999 li
51.1923 108.566 51.5729 109.125 51.974 109.675 cv
52.7818 109.085 li
cp
51.1532 106.621 mo
50.8146 106.055 50.4925 105.482 50.1847 104.901 cv
49.3011 105.369 li
49.6164 105.964 49.9471 106.553 50.2953 107.135 cv
51.1532 106.621 li
cp
49.7322 104.021 mo
49.4371 103.431 49.1554 102.834 48.8851 102.232 cv
47.9729 102.642 li
48.2483 103.255 48.5359 103.865 48.8377 104.469 cv
49.7322 104.021 li
cp
48.4871 101.324 mo
48.2269 100.716 47.977 100.103 47.7353 99.4864 cv
46.8044 99.8516 li
47.0493 100.476 47.303 101.098 47.5677 101.717 cv
48.4871 101.324 li
cp
47.3778 98.5579 mo
47.1428 97.9366 46.915 97.3128 46.6921 96.6878 cv
45.7502 97.0238 li
45.9748 97.6535 46.2048 98.2832 46.4424 98.9116 cv
47.3778 98.5579 li
cp
46.3598 95.746 mo
46.1398 95.1161 45.9237 94.4859 45.7092 93.8565 cv
44.7627 94.1792 li
44.9776 94.8096 45.1945 95.4423 45.4157 96.0757 cv
46.3598 95.746 li
cp
45.3862 92.9073 mo
45.1707 92.2733 44.9556 91.6411 44.7386 91.0121 cv
43.7933 91.3382 li
44.0093 91.9645 44.2239 92.5953 44.4394 93.2292 cv
45.3862 92.9073 li
cp
44.4092 90.0648 mo
44.1864 89.4302 43.9605 88.7995 43.7288 88.1745 cv
42.7911 88.522 li
43.0203 89.1402 43.2443 89.7654 43.4656 90.396 cv
44.4092 90.0648 li
cp
43.3736 87.2331 mo
43.1311 86.6024 42.8814 85.9784 42.6217 85.3625 cv
41.7003 85.751 li
41.9551 86.3555 42.201 86.9697 42.4402 87.592 cv
43.3736 87.2331 li
cp
42.2204 84.4358 mo
41.9445 83.8161 41.6568 83.2058 41.3545 82.6067 cv
40.4618 83.0572 li
40.7559 83.6402 41.0368 84.2359 41.3069 84.8425 cv
42.2204 84.4358 li
cp
40.8851 81.7079 mo
40.5615 81.1098 40.2212 80.5242 39.8611 79.953 cv
39.0152 80.4863 li
39.3624 81.037 39.6916 81.6034 40.0056 82.1838 cv
40.8851 81.7079 li
cp
39.3014 79.1009 mo
39.1725 78.9126 39.0411 78.7261 38.9072 78.5414 cv
38.6384 78.1707 38.3592 77.8132 38.0707 77.468 cv
37.3034 78.1093 li
37.5776 78.4374 37.8426 78.7768 38.0977 79.1285 cv
38.2262 79.3057 38.3524 79.4848 38.4763 79.6659 cv
39.3014 79.1009 li
cp
37.3948 76.6993 mo
36.929 76.1951 36.4428 75.7184 35.94 75.2655 cv
35.2707 76.0086 li
35.7524 76.4424 36.2166 76.8977 36.6604 77.378 cv
37.3948 76.6993 li
cp
35.1669 74.598 mo
34.6428 74.1637 34.1035 73.7519 33.5528 73.3587 cv
32.9717 74.1725 li
33.505 74.5533 34.0251 74.9506 34.5289 75.368 cv
35.1669 74.598 li
cp
32.7177 72.7818 mo
32.1558 72.4058 31.5842 72.0464 31.0063 71.6999 cv
30.492 72.5575 li
31.0578 72.8968 31.6155 73.2474 32.1616 73.6129 cv
32.7177 72.7818 li
cp
30.1348 71.1889 mo
29.5506 70.8536 28.9619 70.5293 28.3723 70.212 cv
27.8984 71.0926 li
28.4822 71.4067 29.0628 71.7267 29.637 72.0562 cv
30.1348 71.1889 li
cp
27.4836 69.7388 mo
26.8897 69.4255 26.2965 69.1174 25.7077 68.8108 cv
25.2458 69.6977 li
25.8352 70.0047 26.4268 70.3119 27.017 70.6233 cv
27.4836 69.7388 li
cp
24.8222 68.3483 mo
24.2291 68.0371 23.6423 67.7254 23.0655 67.4093 cv
22.5849 68.2863 li
23.1694 68.6066 23.7615 68.9211 24.3576 69.2338 cv
24.8222 68.3483 li
cp
22.1987 66.9259 mo
21.6187 66.5963 21.0513 66.2599 20.5004 65.9129 cv
19.9673 66.7589 li
20.5337 67.1158 21.1141 67.4597 21.7045 67.7953 cv
22.1987 66.9259 li
cp
19.6752 65.3758 mo
19.1263 65.0062 18.597 64.623 18.0915 64.2219 cv
17.4699 65.0053 li
17.9988 65.4249 18.5492 65.8232 19.1166 66.2053 cv
19.6752 65.3758 li
cp
17.3422 63.5982 mo
16.8515 63.169 16.3877 62.7188 15.9547 62.2428 cv
15.215 62.9158 li
15.676 63.4225 16.1673 63.8991 16.6837 64.3508 cv
17.3422 63.5982 li
cp
15.3283 61.5084 mo
14.9311 61.0105 14.5659 60.4849 14.2362 59.9261 cv
13.375 60.4343 li
13.7294 61.035 14.1217 61.5995 14.5466 62.132 cv
15.3283 61.5084 li
cp
13.7784 59.0816 mo
13.5012 58.5229 13.2573 57.9323 13.05 57.3048 cv
12.1004 57.6185 li
12.3224 58.2905 12.5845 58.9252 12.8826 59.5261 cv
13.7784 59.0816 li
cp
12.7785 56.3801 mo
12.6238 55.7811 12.5005 55.1501 12.4113 54.4836 cv
11.4201 54.6161 li
11.5143 55.3206 11.6452 55.9911 11.8103 56.6301 cv
12.7785 56.3801 li
cp
12.3084 53.5167 mo
12.291 53.2993 12.277 53.0784 12.2665 52.8537 cv
11.2676 52.9002 li
11.2786 53.1358 11.2933 53.3679 11.3116 53.5966 cv
12.3084 53.5167 li
cp
f
38.1254 26.8893 mo
38.3659 26.2168 38.6417 25.6582 38.9432 25.2032 cv
38.1095 24.6509 li
37.7553 25.1858 37.4467 25.8175 37.1838 26.5526 cv
38.1254 26.8893 li
cp
39.5075 24.4962 mo
39.9576 24.0354 40.4424 23.7467 40.9738 23.5872 cv
40.6877 22.629 li
39.9919 22.8359 39.3477 23.2258 38.7911 23.7985 cv
39.5075 24.4962 li
cp
41.8358 23.446 mo
42.0099 23.4423 li
42.5126 23.4422 43.0559 23.5331 43.6318 23.7112 cv
43.9271 22.7558 li
43.2741 22.5541 42.6329 22.4424 42.0099 22.4423 cv
41.7931 22.4469 li
41.8358 23.446 li
cp
44.5166 24.0413 mo
45.0639 24.2785 45.6325 24.5831 46.2144 24.9466 cv
46.7441 24.0985 li
46.127 23.713 45.5161 23.3847 44.9143 23.1238 cv
44.5166 24.0413 li
cp
47.0261 25.4852 mo
47.5384 25.8443 48.0582 26.2442 48.5814 26.6786 cv
49.2202 25.9092 li
48.6786 25.4595 48.1377 25.0432 47.6002 24.6663 cv
47.0261 25.4852 li
cp
49.3285 27.3202 mo
49.8085 27.7457 50.2897 28.1976 50.7691 28.6712 cv
51.4718 27.9597 li
50.9807 27.4746 50.4866 27.0105 49.9919 26.5719 cv
49.3285 27.3202 li
cp
51.4649 29.3747 mo
51.9177 29.8431 52.3676 30.3288 52.8123 30.828 cv
53.559 30.1628 li
53.1058 29.6541 52.6467 29.1584 52.1838 28.6797 cv
51.4649 29.3747 li
cp
53.4652 31.5747 mo
53.8942 32.0744 54.317 32.585 54.7316 33.1028 cv
55.5122 32.4778 li
55.0908 31.9514 54.6607 31.4321 54.224 30.9233 cv
53.4652 31.5747 li
cp
55.3469 33.8843 mo
55.7541 34.4102 56.1518 34.9414 56.5379 35.4742 cv
57.3476 34.8873 li
56.9554 34.3461 56.5514 33.8065 56.1376 33.2721 cv
55.3469 33.8843 li
cp
57.1144 36.283 mo
57.4999 36.833 57.8718 37.3827 58.2278 37.9276 cv
59.065 37.3808 li
58.703 36.8265 58.325 36.268 57.9333 35.709 cv
57.1144 36.283 li
cp
58.7633 38.7633 mo
59.1252 39.3389 59.4674 39.9068 59.7871 40.4617 cv
60.6536 39.9625 li
60.3271 39.3958 59.9783 38.8171 59.6099 38.2311 cv
58.7633 38.7633 li
cp
60.272 41.325 mo
60.6044 41.9331 60.9063 42.5213 61.1734 43.0817 cv
62.0761 42.6515 li
61.8001 42.0722 61.4898 41.468 61.1494 40.8453 cv
60.272 41.325 li
cp
61.58 43.9758 mo
61.6517 44.1437 li
61.8895 44.7072 62.1252 45.2642 62.359 45.8147 cv
63.2794 45.4237 li
63.046 44.8741 62.8106 44.3177 62.5729 43.7548 cv
62.4981 43.5795 li
61.58 43.9758 li
cp
62.751 46.7355 mo
63.0165 47.3575 63.2796 47.9709 63.5408 48.5754 cv
64.4588 48.1787 li
64.1983 47.5758 63.9357 46.9639 63.6708 46.343 cv
62.751 46.7355 li
cp
63.9394 49.4941 mo
64.2099 50.1152 64.4786 50.7266 64.7458 51.3282 cv
65.6597 50.9222 li
65.3935 50.3231 65.1259 49.7139 64.8562 49.0948 cv
63.9394 49.4941 li
cp
65.1547 52.2432 mo
65.433 52.8623 65.7101 53.4706 65.9864 54.0679 cv
66.894 53.6481 li
66.6193 53.0543 66.3438 52.4493 66.0668 51.8332 cv
65.1547 52.2432 li
cp
66.4104 54.977 mo
66.7 55.5927 66.989 56.1961 67.2782 56.7872 cv
68.1765 56.3478 li
67.8898 55.7617 67.6029 55.1629 67.3153 54.5514 cv
66.4104 54.977 li
cp
67.7235 57.6875 mo
68.0288 58.2977 68.3345 58.8939 68.6414 59.4761 cv
69.526 59.0098 li
69.2227 58.4344 68.9202 57.8445 68.6178 57.2401 cv
67.7235 57.6875 li
cp
69.116 60.3632 mo
69.4426 60.9647 69.771 61.5502 70.102 62.1194 cv
70.9665 61.6168 li
70.6408 61.0566 70.3172 60.4796 69.9947 59.8859 cv
69.116 60.3632 li
cp
70.6161 62.9868 mo
70.9715 63.5747 71.3302 64.1441 71.6936 64.6945 cv
72.5282 64.1436 li
72.1727 63.6052 71.821 63.047 71.4719 62.4695 cv
70.6161 62.9868 li
cp
72.2602 65.5321 mo
72.6533 66.0986 73.0521 66.6433 73.458 67.1659 cv
74.2477 66.5524 li
73.8537 66.0452 73.4654 65.5149 73.0818 64.962 cv
72.2602 65.5321 li
cp
74.093 67.9579 mo
74.534 68.4905 74.9839 68.9976 75.4443 69.4785 cv
76.1667 68.787 li
75.7241 68.3247 75.29 67.8355 74.8632 67.3201 cv
74.093 67.9579 li
cp
76.1642 70.2007 mo
76.6627 70.6805 77.1739 71.1305 77.6993 71.5501 cv
78.3233 70.7686 li
77.8232 70.3694 77.3353 69.9398 76.8576 69.4802 cv
76.1642 70.2007 li
cp
78.5158 72.1688 mo
79.0753 72.5706 79.6512 72.939 80.245 73.2732 cv
80.7354 72.4017 li
80.1746 72.0861 79.6299 71.7376 79.099 71.3565 cv
78.5158 72.1688 li
cp
81.1541 73.7507 mo
81.7667 74.0503 82.3982 74.3149 83.0498 74.5437 cv
83.3811 73.6002 li
82.7663 73.3843 82.1712 73.1349 81.5933 72.8524 cv
81.1541 73.7507 li
cp
83.9869 74.8801 mo
84.5067 75.0722 85.1355 75.3127 85.8448 75.5976 cv
86.2176 74.6697 li
85.4992 74.3811 84.8619 74.1374 84.3335 73.9421 cv
83.9869 74.8801 li
cp
86.7669 75.9749 mo
87.3421 76.2144 87.9556 76.4777 88.5955 76.7632 cv
89.0029 75.85 li
88.3548 75.5608 87.7337 75.2942 87.1514 75.0517 cv
86.7669 75.9749 li
cp
89.502 77.1746 mo
90.0865 77.4445 90.6874 77.7312 91.2967 78.0333 cv
91.741 77.1374 li
91.1227 76.8308 90.5135 76.5403 89.9212 76.2668 cv
89.502 77.1746 li
cp
92.184 78.4816 mo
92.766 78.7813 93.3519 79.0943 93.935 79.4197 cv
94.4223 78.5465 li
93.8287 78.2152 93.2329 77.8969 92.6418 77.5926 cv
92.184 78.4816 li
cp
94.796 79.9109 mo
95.3678 80.2443 95.9334 80.5893 96.4862 80.9449 cv
97.0271 80.1038 li
96.4609 79.7396 95.8829 79.3871 95.2998 79.047 cv
94.796 79.9109 li
cp
97.3109 81.49 mo
97.8629 81.8652 98.3978 82.2509 98.9086 82.6458 cv
99.5202 81.8546 li
98.9915 81.4458 98.4401 81.0485 97.8731 80.663 cv
97.3109 81.49 li
cp
99.6748 83.2607 mo
100.19 83.6909 100.674 84.1307 101.118 84.578 cv
101.828 83.8738 li
101.359 83.4011 100.852 82.9406 100.315 82.4928 cv
99.6748 83.2607 li
cp
101.781 85.2865 mo
102.223 85.7905 102.611 86.3021 102.933 86.818 cv
103.781 86.2885 li
103.426 85.719 103.005 85.1652 102.532 84.6266 cv
101.781 85.2865 li
cp
103.389 87.6433 mo
103.67 88.2261 103.861 88.8112 103.955 89.3978 cv
104.942 89.241 li
104.832 88.5458 104.607 87.8674 104.29 87.2096 cv
103.389 87.6433 li
cp
104.019 90.3046 mo
104.008 90.8894 103.895 91.4801 103.662 92.0848 cv
104.596 92.4447 li
104.869 91.7359 105.006 91.0246 105.019 90.3231 cv
104.019 90.3046 li
cp
103.265 92.9211 mo
103.176 93.0784 103.079 93.2366 102.972 93.3957 cv
102.707 93.7918 102.44 94.1594 102.171 94.4995 cv
102.955 95.1198 li
103.242 94.7575 103.524 94.3686 103.803 93.952 cv
103.923 93.7727 104.034 93.5931 104.136 93.4132 cv
103.265 92.9211 li
cp
101.547 95.2365 mo
101.085 95.7452 100.619 96.1769 100.151 96.5381 cv
100.762 97.3298 li
101.281 96.9293 101.79 96.4568 102.287 95.9089 cv
101.547 95.2365 li
cp
99.3739 97.0732 mo
98.8096 97.4159 98.2431 97.6632 97.673 97.827 cv
97.949 98.7881 li
98.6074 98.5991 99.2572 98.3142 99.8931 97.9278 cv
99.3739 97.0732 li
cp
96.7664 98.0177 mo
96.474 98.0574 96.1802 98.0768 95.8845 98.0768 cv
95.5626 98.0768 95.2386 98.0538 94.9122 98.0089 cv
94.7759 98.9996 li
95.1452 99.0504 95.515 99.0768 95.8845 99.0768 cv
96.2239 99.0768 96.563 99.0545 96.901 99.0087 cv
96.7664 98.0177 li
cp
93.9908 97.8262 mo
93.4007 97.6744 92.8038 97.4554 92.2025 97.1757 cv
91.7807 98.0824 li
92.4304 98.3846 93.0844 98.6255 93.7415 98.7947 cv
93.9908 97.8262 li
cp
91.3441 96.7374 mo
90.7988 96.4348 90.2513 96.0856 89.7037 95.6958 cv
89.1237 96.5104 li
89.698 96.9193 90.2766 97.2886 90.8588 97.6117 cv
91.3441 96.7374 li
cp
88.9199 95.1104 mo
88.4178 94.7184 87.9166 94.2945 87.4176 93.8436 cv
86.7471 94.5855 li
87.2619 95.0507 87.7812 95.49 88.3044 95.8986 cv
88.9199 95.1105 li
cp
86.6961 93.1715 mo
86.2292 92.7238 85.7649 92.2543 85.3044 91.767 cv
84.5776 92.4539 li
85.0483 92.952 85.524 93.4331 86.0041 93.8933 cv
86.6961 93.1715 li
cp
84.6317 91.04 mo
84.1923 90.5552 83.7569 90.0558 83.3263 89.5454 cv
82.562 90.1901 li
82.9995 90.7088 83.4427 91.2171 83.8908 91.7116 cv
84.6317 91.04 li
cp
82.6918 88.7812 mo
82.274 88.2702 81.8614 87.7503 81.4547 87.2249 cv
80.6639 87.8371 li
81.0756 88.3689 81.4937 88.8957 81.9176 89.4141 cv
82.6918 88.7812 li
cp
80.8491 86.433 mo
80.4475 85.9017 80.0524 85.3666 79.6644 84.831 cv
78.8545 85.4177 li
79.2461 85.9582 79.6453 86.4987 80.0513 87.036 cv
80.8491 86.433 li
cp
79.0832 84.0212 mo
78.6938 83.4737 78.3122 82.9275 77.9395 82.3863 cv
77.116 82.9536 li
77.4912 83.4984 77.8756 84.0487 78.2683 84.6008 cv
79.0832 84.0213 li
cp
77.376 81.5626 mo
76.9943 81.0008 76.6227 80.4466 76.2621 79.9041 cv
75.4293 80.4577 li
75.7914 81.0024 76.1649 81.5595 76.5489 82.1246 cv
77.376 81.5626 li
cp
75.7104 79.0707 mo
75.3306 78.4946 74.9644 77.935 74.6131 77.3974 cv
73.776 77.9444 li
74.1275 78.4824 74.4945 79.0432 74.8756 79.6212 cv
75.7104 79.0707 li
cp
74.0654 76.5588 mo
73.6765 75.9638 73.3085 75.4021 72.9629 74.8818 cv
72.1299 75.4351 li
72.473 75.9516 72.8398 76.5115 73.2283 77.1059 cv
74.0654 76.5588 li
cp
72.4018 74.0459 mo
72.0424 73.5194 71.6505 72.9696 71.2294 72.3983 cv
70.4244 72.9916 li
70.8395 73.5547 71.2245 74.095 71.5759 74.6098 cv
72.4018 74.0459 li
cp
70.6259 71.591 mo
70.2353 71.0753 69.8237 70.544 69.3933 69.9986 cv
68.6083 70.618 li
69.0351 71.159 69.4427 71.6851 69.8288 72.1948 cv
70.6259 71.591 li
cp
68.7676 69.2121 mo
68.3595 68.7029 67.9366 68.1825 67.5008 67.6521 cv
66.7282 68.287 li
67.1618 68.8146 67.582 69.3318 67.9874 69.8375 cv
68.7676 69.2121 li
cp
66.8618 66.8784 mo
66.4427 66.3732 66.0129 65.8598 65.5739 65.339 cv
64.8093 65.9835 li
65.2468 66.5026 65.675 67.014 66.0923 67.5169 cv
66.8618 66.8784 li
cp
64.9267 64.5735 mo
64.5003 64.0708 64.0662 63.5618 63.6257 63.0474 cv
62.8661 63.6978 li
63.3058 64.2112 63.7388 64.719 64.164 65.2203 cv
64.9267 64.5735 li
cp
62.9733 62.2871 mo
62.5422 61.7855 62.1056 61.2793 61.6646 60.7691 cv
60.9081 61.423 li
61.3485 61.9326 61.7845 62.4382 62.215 62.9389 cv
62.9733 62.2871 li
cp
61.0095 60.0118 mo
60.5754 59.5104 60.1376 59.0057 59.6973 58.4982 cv
58.942 59.1535 li
59.3822 59.6609 59.8197 60.1654 60.2535 60.6664 cv
61.0095 60.0118 li
cp
59.0413 57.7423 mo
58.6055 57.2401 58.1677 56.7358 57.729 56.2298 cv
56.9734 56.8849 li
57.4124 57.3911 57.8503 57.8956 58.2861 58.3977 cv
59.0413 57.7423 li
cp
57.0748 55.475 mo
56.6385 54.9713 56.2018 54.4665 55.7656 53.961 cv
55.0086 54.6143 li
55.4453 55.1204 55.8824 55.6257 56.3189 56.1297 cv
57.0748 55.475 li
cp
55.1108 53.2013 mo
54.6751 52.6952 54.2404 52.1888 53.8076 51.6828 cv
53.0476 52.3327 li
53.4812 52.8397 53.9166 53.3469 54.3529 53.8537 cv
55.1108 53.2013 li
cp
53.1584 50.9223 mo
52.7244 50.4128 52.2928 49.904 51.8648 49.3966 cv
51.1005 50.0415 li
51.5297 50.5502 51.9622 51.0602 52.3972 51.5708 cv
53.1584 50.9223 li
cp
51.2213 48.6319 mo
50.7901 48.1179 50.363 47.6057 49.9411 47.096 cv
49.1708 47.7337 li
49.5942 48.2452 50.0227 48.759 50.4552 49.2746 cv
51.2213 48.6319 li
cp
49.3055 46.3253 mo
48.8785 45.8055 48.4574 45.2888 48.0436 44.7758 cv
47.2653 45.4037 li
47.6812 45.9192 48.1041 46.4382 48.5328 46.9601 cv
49.3055 46.3254 li
cp
47.4186 43.9972 mo
46.9975 43.4699 46.5848 42.9471 46.1815 42.4296 cv
45.3927 43.0443 li
45.7986 43.5651 46.2138 44.091 46.6372 44.6212 cv
47.4186 43.9972 li
cp
45.571 41.6408 mo
45.1583 41.1035 44.7568 40.5728 44.368 40.0494 cv
43.5653 40.6457 li
43.9576 41.1738 44.3623 41.7089 44.778 42.25 cv
45.571 41.6408 li
cp
43.7777 39.2469 mo
43.3769 38.6964 42.9914 38.1551 42.6232 37.6241 cv
41.8014 38.194 li
42.1745 38.7319 42.5644 39.2795 42.9693 39.8356 cv
43.7777 39.2469 li
cp
42.0622 36.8035 mo
41.6792 36.2345 41.318 35.6788 40.9808 35.1381 cv
40.1323 35.6672 li
40.4764 36.219 40.8439 36.7843 41.2327 37.3618 cv
42.0622 36.8035 li
cp
40.4661 34.2925 mo
40.1123 33.6961 39.7914 33.1205 39.5068 32.5685 cv
38.618 33.0268 li
38.9132 33.5992 39.2436 34.1917 39.6061 34.8027 cv
40.4661 34.2925 li
cp
39.0748 31.6887 mo
38.7775 31.049 38.5369 30.447 38.3585 29.8895 cv
37.4061 30.1944 li
37.6003 30.801 37.8566 31.4401 38.168 32.1102 cv
39.0749 31.6887 li
cp
38.1133 28.9758 mo
38.0256 28.5593 37.982 28.1769 37.9821 27.8334 cv
37.9821 27.6019 38.0017 27.3881 38.04 27.1921 cv
37.0584 27.0008 li
37.0064 27.2675 36.9821 27.5455 36.9821 27.8334 cv
36.9822 28.2609 37.0356 28.7104 37.1348 29.1818 cv
38.1134 28.9758 li
cp
f
34.7929 30.4948 mo
34.4824 29.9202 34.2968 29.3454 34.2187 28.7778 cv
33.228 28.9139 li
33.3227 29.6041 33.5488 30.2966 33.9133 30.9704 cv
34.7929 30.4948 li
cp
34.1841 27.8779 mo
34.2199 27.2814 34.3713 26.6948 34.6291 26.1297 cv
33.7194 25.7145 li
33.4141 26.383 33.2294 27.0917 33.1859 27.8181 cv
34.1841 27.8779 li
cp
35.0773 25.3272 mo
35.4062 24.8329 35.821 24.3643 36.3126 23.9359 cv
35.6556 23.182 li
35.1019 23.6646 34.627 24.1989 34.2448 24.7733 cv
35.0773 25.3272 li
cp
37.0579 23.3584 mo
37.5581 23.0135 38.1153 22.7061 38.7216 22.4464 cv
38.3277 21.5272 li
37.6629 21.8121 37.0476 22.1509 36.4902 22.5351 cv
37.0579 23.3584 li
cp
39.6155 22.1102 mo
40.202 21.9188 40.8253 21.7697 41.4797 21.67 cv
41.3291 20.6814 li
40.6215 20.7892 39.9448 20.9508 39.3051 21.1596 cv
39.6155 22.1102 li
cp
42.4349 21.5619 mo
42.7556 21.5379 43.0825 21.5256 43.4151 21.5256 cv
43.7256 21.5256 44.041 21.5364 44.361 21.5585 cv
44.43 20.5609 li
44.0872 20.5372 43.7487 20.5256 43.4151 20.5256 cv
43.0578 20.5256 42.706 20.5389 42.3604 20.5647 cv
42.4349 21.5619 li
cp
45.3215 21.6579 mo
45.9402 21.743 46.573 21.8705 47.2168 22.0444 cv
47.4776 21.079 li
46.7933 20.8941 46.1188 20.7581 45.4577 20.6672 cv
45.3215 21.6579 li
cp
48.1449 22.3252 mo
48.7391 22.5244 49.3412 22.7636 49.9488 23.0457 cv
50.37 22.1388 li
49.7293 21.8412 49.0927 21.5882 48.4627 21.3771 cv
48.1449 22.3252 li
cp
50.8207 23.4787 mo
51.3769 23.7729 51.9366 24.1038 52.498 24.4737 cv
53.0483 23.6387 li
52.4606 23.2515 51.8733 22.9042 51.2883 22.5947 cv
50.8207 23.4787 li
cp
53.3018 25.0296 mo
53.8135 25.4004 54.3259 25.8043 54.8376 26.2433 cv
55.4887 25.4843 li
54.9567 25.028 54.4229 24.607 53.8885 24.2198 cv
53.3018 25.0296 li
cp
55.5695 26.8958 mo
56.0353 27.327 56.5 27.788 56.9623 28.2801 cv
57.6911 27.5953 li
57.2132 27.0867 56.7321 26.6093 56.2488 26.1619 cv
55.5695 26.8958 li
cp
57.624 29.0076 mo
58.0455 29.486 58.4645 29.9911 58.8804 30.5238 cv
59.6686 29.9084 li
59.2409 29.3606 58.8093 28.8403 58.3744 28.3466 cv
57.624 29.0076 li
cp
59.4762 31.3092 mo
59.8562 31.8244 60.2331 32.3635 60.6062 32.9272 cv
61.44 32.3752 li
61.0578 31.7978 60.6713 31.2449 60.281 30.7157 cv
59.4762 31.3092 li
cp
61.1416 33.7573 mo
61.4836 34.3013 61.8221 34.8667 62.1565 35.4541 cv
63.0255 34.9593 li
62.6841 34.3596 62.3382 33.7817 61.9883 33.2251 cv
61.1416 33.7573 li
cp
62.6372 36.319 mo
62.9447 36.8855 63.2484 37.4714 63.5481 38.0771 cv
64.4444 37.6338 li
64.1393 37.017 63.8298 36.4199 63.5161 35.842 cv
62.6372 36.319 li
cp
63.9794 38.9692 mo
64.2558 39.5536 64.5283 40.1556 64.7966 40.7755 cv
65.7143 40.3782 li
65.4417 39.7484 65.1646 39.1364 64.8835 38.5417 cv
63.9794 38.9692 li
cp
65.1836 41.6889 mo
65.3905 42.1882 65.5948 42.6985 65.7963 43.2202 cv
65.8371 43.3259 65.8778 43.4311 65.9183 43.5359 cv
66.851 43.1752 li
66.8105 43.0706 66.7699 42.9655 66.7291 42.8599 cv
66.5248 42.3308 66.3175 41.8129 66.1073 41.306 cv
65.1836 41.6889 li
cp
66.2797 44.4685 mo
66.5282 45.108 66.7709 45.7286 67.0092 46.3318 cv
67.9393 45.9643 li
67.7018 45.3634 67.4598 44.7445 67.2118 44.1063 cv
66.2797 44.4685 li
cp
67.3791 47.2624 mo
67.6344 47.9005 67.8854 48.5188 68.1339 49.1188 cv
69.0578 48.7363 li
68.8111 48.1406 68.5617 47.5261 68.3076 46.8909 cv
67.3791 47.2624 li
cp
68.5213 50.0442 mo
68.7897 50.6777 69.0563 51.2908 69.3235 51.8855 cv
70.2357 51.4758 li
69.9719 50.8885 69.7081 50.282 69.4421 49.6541 cv
68.5213 50.0442 li
cp
69.7417 52.8002 mo
70.0319 53.4234 70.3242 54.0265 70.6216 54.6123 cv
71.5133 54.1597 li
71.2215 53.585 70.9342 52.9921 70.6482 52.3781 cv
69.7417 52.8002 li
cp
71.0873 55.5074 mo
71.4094 56.1111 71.7391 56.6969 72.0798 57.2679 cv
72.9385 56.7556 li
72.6066 56.1992 72.2848 55.6274 71.9695 55.0366 cv
71.0873 55.5074 li
cp
72.6097 58.1301 mo
72.9725 58.7026 73.3488 59.2614 73.7424 59.8096 cv
74.5547 59.2264 li
74.1727 58.6943 73.8073 58.1518 73.4544 57.5949 cv
72.6097 58.13 li
cp
74.3458 60.6239 mo
74.7522 61.1555 75.1773 61.6785 75.6245 62.1962 cv
76.3812 61.5425 li
75.9469 61.0397 75.5345 60.5323 75.1402 60.0165 cv
74.3458 60.6239 li
cp
76.2975 62.9531 mo
76.7435 63.4405 77.211 63.9247 77.703 64.4084 cv
78.4041 63.6954 li
77.9241 63.2234 77.4689 62.752 77.0352 62.278 cv
76.2975 62.9531 li
cp
78.4321 65.1082 mo
78.9096 65.556 79.4094 66.0046 79.9338 66.4565 cv
80.5866 65.6989 li
80.0721 65.2556 79.5828 64.8163 79.1161 64.3787 cv
78.4321 65.1082 li
cp
80.7034 67.1074 mo
81.2044 67.5234 81.7268 67.9431 82.2727 68.3684 cv
82.8872 67.5795 li
82.349 67.1602 81.8347 66.747 81.3423 66.3381 cv
80.7034 67.1074 li
cp
83.0703 68.9811 mo
83.5882 69.3735 84.1261 69.7712 84.6858 70.1756 cv
85.2715 69.3651 li
84.7175 68.9648 84.1856 68.5716 83.6743 68.1841 cv
83.0703 68.9811 li
cp
85.5025 70.7597 mo
86.0328 71.1353 86.5817 71.5169 87.1503 71.9058 cv
87.7148 71.0803 li
87.1503 70.6943 86.6059 70.3158 86.0804 69.9436 cv
85.5025 70.7597 li
cp
87.987 72.4699 mo
88.549 72.843 89.1132 73.2064 89.6769 73.5621 cv
90.2105 72.7164 li
89.6521 72.364 89.0945 72.0048 88.5401 71.6368 cv
87.9871 72.4699 li
cp
90.5287 74.0944 mo
91.102 74.4494 91.6733 74.7974 92.2399 75.1405 cv
92.7579 74.2851 li
92.1928 73.943 91.6244 73.5967 91.0553 73.2442 cv
90.5287 74.0944 li
cp
93.0967 75.6583 mo
93.674 76.0067 94.2448 76.3511 94.8059 76.6934 cv
95.3267 75.8398 li
94.7627 75.4957 94.1906 75.1505 93.6134 74.8021 cv
93.0967 75.6583 li
cp
95.6553 77.2154 mo
96.2286 77.5705 96.7896 77.9247 97.3349 78.2804 cv
97.8812 77.4428 li
97.3275 77.0816 96.7599 76.7233 96.1819 76.3653 cv
95.6553 77.2154 li
cp
98.1609 78.8289 mo
98.7186 79.2067 99.2567 79.5874 99.7711 79.9737 cv
100.372 79.1741 li
99.8417 78.7761 99.2904 78.3862 98.7217 78.001 cv
98.1609 78.8289 li
cp
100.548 80.5768 mo
101.07 80.9965 101.563 81.4241 102.022 81.8627 cv
102.713 81.14 li
102.23 80.6785 101.716 80.2323 101.174 79.7972 cv
100.548 80.5768 li
cp
102.706 82.553 mo
103.156 83.0343 103.565 83.53 103.928 84.0439 cv
104.745 83.4676 li
104.353 82.9116 103.914 82.3805 103.436 81.8695 cv
102.706 82.553 li
cp
104.447 84.8475 mo
104.769 85.397 105.04 85.9682 105.255 86.5671 cv
106.196 86.2302 li
105.96 85.5693 105.661 84.9407 105.309 84.341 cv
104.447 84.8475 li
cp
105.53 87.4743 mo
105.679 88.0698 105.775 88.6936 105.812 89.3518 cv
106.81 89.2958 li
106.77 88.5762 106.665 87.8888 106.5 87.2315 cv
105.53 87.4743 li
cp
105.824 90.3086 mo
105.806 90.917 105.741 91.554 105.623 92.2232 cv
106.607 92.397 li
106.733 91.6833 106.804 90.9976 106.824 90.3377 cv
105.824 90.3086 li
cp
105.425 93.1722 mo
105.281 93.7702 105.098 94.3927 104.872 95.0412 cv
105.816 95.3702 li
106.053 94.6926 106.245 94.0382 106.397 93.4052 cv
105.425 93.1722 li
cp
104.531 95.9589 mo
104.301 96.5389 104.04 97.1387 103.743 97.7594 cv
104.646 98.19 li
104.951 97.5501 105.222 96.9294 105.461 96.3265 cv
104.531 95.9589 li
cp
103.306 98.6426 mo
103.194 98.8587 li
102.922 99.3813 102.657 99.9073 102.398 100.435 cv
103.296 100.876 li
103.552 100.354 103.813 99.8353 104.081 99.321 cv
104.196 99.0989 li
103.306 98.6426 li
cp
101.959 101.341 mo
101.67 101.947 101.386 102.553 101.107 103.159 cv
102.014 103.578 li
102.293 102.975 102.574 102.372 102.861 101.772 cv
101.959 101.341 li
cp
100.687 104.071 mo
100.408 104.68 100.131 105.287 99.8533 105.889 cv
100.761 106.307 li
101.04 105.704 101.317 105.096 101.596 104.488 cv
100.687 104.071 li
cp
99.4335 106.794 mo
99.1502 107.401 98.8652 108.001 98.5759 108.591 cv
99.4739 109.031 li
99.7668 108.433 100.054 107.828 100.34 107.217 cv
99.4335 106.794 li
cp
98.1329 109.48 mo
97.8305 110.076 97.5221 110.66 97.2047 111.23 cv
98.0785 111.717 li
98.4031 111.133 98.7174 110.538 99.0246 109.933 cv
98.1329 109.48 li
cp
96.714 112.087 mo
96.3761 112.66 96.0272 113.216 95.6641 113.752 cv
96.492 114.313 li
96.8683 113.757 97.2282 113.184 97.5753 112.595 cv
96.714 112.087 li
cp
95.0991 114.553 mo
94.7089 115.084 94.302 115.592 93.8749 116.074 cv
94.6235 116.738 li
95.0727 116.23 95.4986 115.698 95.9049 115.145 cv
95.0991 114.553 li
cp
93.21 116.787 mo
92.7547 117.249 92.2768 117.682 91.7725 118.084 cv
92.3959 118.866 li
92.9335 118.438 93.441 117.977 93.9222 117.489 cv
93.21 116.787 li
cp
90.9984 118.662 mo
90.4766 119.025 89.9273 119.357 89.3463 119.654 cv
89.8019 120.544 li
90.4239 120.226 91.0122 119.871 91.5698 119.482 cv
90.9984 118.662 li
cp
88.4738 120.064 mo
87.8984 120.311 87.2933 120.526 86.6545 120.707 cv
86.9273 121.67 li
87.6068 121.477 88.253 121.247 88.8682 120.983 cv
88.4738 120.064 li
cp
85.7157 120.943 mo
85.107 121.077 84.4694 121.182 83.8001 121.254 cv
83.9083 122.249 li
84.6119 122.172 85.2853 122.062 85.9304 121.92 cv
85.7157 120.943 li
cp
82.829 121.336 mo
82.3857 121.363 81.9293 121.377 81.4591 121.377 cv
81.4322 121.377 li
81.4342 121.377 li
81.2464 121.377 81.0618 121.373 80.8803 121.367 cv
80.8438 122.366 li
81.0373 122.373 81.2337 122.377 81.433 122.377 cv
81.4349 122.377 li
81.4349 122.377 li
81.4591 122.377 li
81.9488 122.377 82.4254 122.363 82.8896 122.334 cv
82.829 121.336 li
cp
79.9201 121.299 mo
79.2503 121.229 78.6265 121.112 78.0443 120.953 cv
77.7805 121.917 li
78.4178 122.092 79.0954 122.218 79.8156 122.294 cv
79.9201 121.299 li
cp
77.1418 120.661 mo
76.5316 120.43 75.9714 120.149 75.4541 119.821 cv
74.9185 120.665 li
75.4931 121.03 76.1157 121.342 76.7888 121.596 cv
77.1418 120.661 li
cp
74.6847 119.274 mo
74.1897 118.883 73.7381 118.442 73.3239 117.958 cv
72.5637 118.607 li
73.0168 119.138 73.5152 119.624 74.0641 120.058 cv
74.6847 119.274 li
cp
72.7354 117.205 mo
72.3696 116.695 72.0368 116.145 71.7329 115.562 cv
70.846 116.024 li
71.1692 116.644 71.5261 117.235 71.9227 117.788 cv
72.7354 117.205 li
cp
71.3102 114.688 mo
71.0495 114.108 70.8129 113.5 70.5967 112.87 cv
69.6507 113.194 li
69.8756 113.85 70.1231 114.486 70.3981 115.098 cv
71.3102 114.688 li
cp
70.2957 111.935 mo
70.1088 111.317 69.9388 110.68 69.7824 110.03 cv
68.8101 110.264 li
68.9704 110.93 69.1453 111.585 69.3385 112.224 cv
70.2957 111.935 li
cp
69.5621 109.065 mo
69.4235 108.426 69.2959 107.776 69.1766 107.118 cv
68.1926 107.297 li
68.3137 107.963 68.4433 108.625 68.5849 109.277 cv
69.5621 109.065 li
cp
69.0052 106.138 mo
68.8952 105.486 68.7915 104.829 68.6914 104.17 cv
67.7027 104.32 li
67.8035 104.983 67.9079 105.645 68.0192 106.304 cv
69.0052 106.138 li
cp
68.5434 103.18 mo
68.4457 102.518 68.3501 101.857 68.2535 101.199 cv
67.2641 101.344 li
67.3605 102.001 67.4562 102.662 67.5541 103.326 cv
68.5434 103.18 li
cp
68.1063 100.207 mo
68.0056 99.538 67.9024 98.8747 67.7933 98.2207 cv
66.8069 98.3853 li
66.9148 99.032 67.0173 99.6901 67.1174 100.356 cv
68.1063 100.207 li
cp
67.6214 97.2281 mo
67.4998 96.5536 67.37 95.8914 67.228 95.2455 cv
66.2513 95.4602 li
66.39 96.0909 66.5175 96.7408 66.6372 97.4054 cv
67.6214 97.2281 li
cp
66.9975 94.258 mo
66.8298 93.5815 66.6455 92.9265 66.4394 92.2981 cv
65.4892 92.6097 li
65.6862 93.2103 65.8641 93.8419 66.0269 94.4986 cv
66.9975 94.258 li
cp
66.1097 91.3423 mo
65.886 90.7082 65.6577 90.0789 65.4249 89.4544 cv
64.4879 89.8037 li
64.7186 90.4228 64.9449 91.0464 65.1667 91.675 cv
66.1097 91.3424 li
cp
65.0701 88.515 mo
64.8299 87.8873 64.5853 87.2644 64.3365 86.6459 cv
63.4088 87.019 li
63.6554 87.6324 63.898 88.2501 64.1361 88.8724 cv
65.0701 88.515 li
cp
63.958 85.7159 mo
63.7023 85.0949 63.4424 84.4783 63.1786 83.8659 cv
62.2602 84.2615 li
62.5219 84.869 62.7797 85.4807 63.0334 86.0967 cv
63.958 85.716 li
cp
62.778 82.9456 mo
62.5077 82.3311 62.2336 81.7209 61.956 81.1146 cv
61.0468 81.5309 li
61.3224 82.1328 61.5944 82.7384 61.8627 83.3482 cv
62.778 82.9455 li
cp
61.5349 80.2037 mo
61.2512 79.5957 60.9641 78.9917 60.6738 78.3913 cv
59.7735 78.8266 li
60.0619 79.423 60.347 80.0228 60.6287 80.6265 cv
61.5349 80.2037 li
cp
60.2342 77.4896 mo
59.9384 76.8879 59.6396 76.2899 59.338 75.6951 cv
58.4461 76.1473 li
58.7459 76.7386 59.0429 77.333 59.3368 77.9308 cv
60.2342 77.4896 li
cp
58.8801 74.7988 mo
58.5728 74.2016 58.2629 73.6076 57.9505 73.0166 cv
57.0664 73.4839 li
57.3771 74.0718 57.6854 74.6625 57.9909 75.2563 cv
58.8801 74.7988 li
cp
57.4783 72.1288 mo
57.1618 71.5372 56.843 70.9485 56.5222 70.3624 cv
55.6449 70.8425 li
55.9643 71.426 56.2816 72.0119 56.5966 72.6006 cv
57.4783 72.1288 li
cp
56.0379 69.482 mo
55.7135 68.8955 55.3874 68.3114 55.0596 67.7294 cv
54.1883 68.2201 li
54.5148 68.7999 54.8397 69.3818 55.1627 69.9659 cv
56.0379 69.482 li
cp
54.5655 66.8555 mo
54.2349 66.2732 53.9029 65.6929 53.5698 65.1143 cv
52.7031 65.6133 li
53.0353 66.1903 53.3663 66.7688 53.6958 67.3492 cv
54.5655 66.8555 li
cp
53.0681 64.2457 mo
52.7327 63.6668 52.3965 63.0895 52.0595 62.5135 cv
51.1964 63.0185 li
51.5327 63.5933 51.8682 64.1694 52.2028 64.7469 cv
53.0681 64.2457 li
cp
51.5527 61.6488 mo
51.2142 61.0724 50.8752 60.4973 50.5361 59.923 cv
49.675 60.4315 li
50.0139 61.0052 50.3524 61.5797 50.6904 62.1552 cv
51.5527 61.6488 li
cp
50.0265 59.0608 mo
49.6864 58.486 49.3464 57.9121 49.0066 57.3385 cv
48.1463 57.8482 li
48.486 58.4217 48.826 58.9956 49.1658 59.57 cv
50.0265 59.0608 li
cp
48.4966 56.4775 mo
48.1567 55.9034 47.8172 55.3297 47.4784 54.7559 cv
46.6173 55.2643 li
46.9564 55.8386 47.2961 56.4127 47.6362 56.9871 cv
48.4966 56.4775 li
cp
46.9705 53.8946 mo
46.6323 53.3203 46.295 52.7458 45.9589 52.1709 cv
45.0956 52.6755 li
45.4323 53.2516 45.7702 53.827 46.1088 54.4021 cv
46.9705 53.8946 li
cp
45.4556 51.3079 mo
45.1207 50.7323 44.7872 50.1562 44.4554 49.5791 cv
43.5885 50.0776 li
43.9212 50.6563 44.2556 51.2339 44.5912 51.8108 cv
45.4556 51.3079 li
cp
43.9592 48.7131 mo
43.6293 48.1354 43.3014 47.5567 42.9756 46.9767 cv
42.1037 47.4664 li
42.4307 48.0487 42.7599 48.6294 43.0908 49.2089 cv
43.9592 48.7131 li
cp
42.4889 46.1063 mo
42.1658 45.5257 41.845 44.9436 41.5268 44.3598 cv
40.6487 44.8383 li
40.9684 45.4249 41.2906 46.0095 41.6151 46.5926 cv
42.4889 46.1063 li
cp
41.0522 43.4839 mo
40.7375 42.8995 40.4256 42.3133 40.1167 41.7248 cv
39.2312 42.1896 li
39.5419 42.7814 39.8555 43.3707 40.1718 43.9581 cv
41.0522 43.4839 li
cp
39.6567 40.8424 mo
39.352 40.2536 39.0505 39.6626 38.7525 39.069 cv
37.8588 39.5176 li
38.1587 40.1151 38.462 40.7098 38.7686 41.302 cv
39.6567 40.8424 li
cp
38.3096 38.1791 mo
38.0165 37.5854 37.7271 36.9891 37.4417 36.3897 cv
36.5388 36.8197 li
36.8264 37.4235 37.1178 38.0241 37.4129 38.6217 cv
38.3096 38.1791 li
cp
37.0181 35.4917 mo
36.7383 34.8927 36.4625 34.2907 36.1911 33.6852 cv
35.2786 34.0942 li
35.5522 34.7046 35.8301 35.3114 36.1121 35.915 cv
37.0181 35.4917 li
cp
35.7886 32.7773 mo
35.5227 32.171 35.2614 31.5612 35.0047 30.9476 cv
34.0822 31.3335 li
34.3411 31.9525 34.6047 32.5675 34.8728 33.1789 cv
35.7886 32.7773 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/BSIKJD+TimesNewRomanPSMT*1 uf
/BSIKJD+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 14.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Forcey,Stefan A) ()
%%Title: (subs_p8f5a.eps)
%%CreationDate: 9/28/2016 5:38 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa7UOWaLk!<5E7&MO8-M\1DmlR`mnbfZC)%]'rjXkfC(=>VG3eBK"se]U=KhI$<LG5$g6XNY-rO%--kM-Xg5@H$1#h.HYE
%?YjXF^OQ4ErHI#NJ,e&QMseH-GMsqEIu[<sr8JOmmEP*<50bgm*)[,gje\"j_WBfhb]mJ)QUC6GDnNZ0p%dFgqbP!(E;Sq_j2^!C
%gY35\Is&$nn`BY+hn8jsIX-5/0/mh,hYuVGqtB-PIr"M`^4$"fY5RM-]:4kr^%ok?Dr86Us1>Iao1aSVf:RQfiU*,(f13""r&T:R
%rT<Llp$INY00`a$_rX/1d=&Y*r9!D4hgU%Ka.!US]'q-^gj_u1r52%g*qU0H(AP)j^O#eQp!)ruUGoB+r=4;V8AF5(l-%[;T0C*\
%5W;1!ipJc*nk\Xg"'F8Ar9Nfi^3fJAdta9^hV>jF?bb+2I^o@8h9-?/"peH^QgqpQr7=^FL,<1*\a5fTG<``gq<<X2_%-i*.1uT^
%J*Ws#g,rU-1<5;cds.#5rSc'Zl-%Wq](treS%nmdikO<^I!tTP#&a%ke(8O;09!dc_D(Joo$d%l^V0I4L\G_+g`=3<O5+Yk?f/Lr
%(nnHgq\"ZqTJkANjbdt_Ie`?n'<JFm\"@Y.IW[Bu;dacT]_q<^K8_9DjJsA?hLBVD5H(nsK`@#JmU@/E[8&G]N"b.\"[L`^3U4A2
%(3(H$`JpY_Mr2>rIeD[EGAl@<8irBSrPoFe?ItUin.>SS?Joj=ra5<tdSG,R:S2O]CWBksm=%tg%E%:G^;d)=hnS%(^;DD8eb"bO
%/<0D.DVj6!-bn4coGaIur56u2s8)AE0@0[EkM&ck*s(EVRu<H$J+qp`T5Q>O2a-&Jrc!3=qOtIZO"W`S4T?'gd$sb<IJlZj_>\fQ
%_oF_*puehfIeV[C#Peo.rqt<9&$S7so_.G)TDrm%iR@P1T0L&;s8)QCY?l[fIK04,fKb,emEM7e4o]7-$R@KF"9:X^)i""^:\I>j
%<57ouJ,B`%:X<t9^OH"Kqr]p,kWb\IDr*U3:%J,bG6K,d3.!(2I!bJ_p$JZdYg)$0N3PMFQe-.n5/8+e]QjGG#M?!l@g^OhIK&`p
%k5D>&iCeLr`t,ZZG4Y]o04C!(BmQr65C[hQ_iKE@_s9PC]R08Lc$Qr`]B:mIDdL,)qu6<<oC%2,iVT,=cTfbdL)XJaJ+rLKFpj$>
%-L(=:Da/`)4$S4Brol)F+$[Z9]t++2r6tB^DJngqb?(<#h)p2])&B9&:9`?R@/^HOOHqhDhnB4e\*rW'd%PY:5JI!lQ?kA^puDDM
%r:0sFK7A@Mo'N(E)$9_\0c'M26gFbLD>8sWAi;S1^)MFr%DKXLc2RN6]'t)C[m/d!c%'B_gqL8pIa(smRNM(ck*fZ32>^2,5Q<;u
%&C>gD2giS'I+@$A(&-rC]C4S=\"DOTnFjoc?[[<[CZ5m$6@[p_s3TR!#J9;/pr@<e^\n/5jT`g*HWY#)T>0Fl^XW"'g"cOh+8sWL
%]VOM2H1Us!%`]%9I`'fVlHOkE`pS2k=2!RnhDC:<A(TMOE4k?=hX]d;g8E]fL0M4,mX+opcYjB1KCP@JrQJ(6h"Bj:h=Dlkr.tX<
%7g2,*o$*at@JoTOIe+.2^ooA>$O]On!YLn"qcC8JmsfKMm=MOEES>nj^:`n0nkLORhu%t"kt+.toJm`FI/&*\c&Y*E#`Y]VHjdXa
%*DFF"g0MJlJUX*&rS?5SnDc`^\Gc?CYM]BEp?@cjfY"rsj37bSg^c=[r9H!hrdhf#J,b3%]mTY<LL8nXs4,Ad5YS*^(qP4skF8ri
%5;\0*!__k=J%kjM_^WYmE-VER_Zg!H\6llLMZ(/Rn:h[)Kq3hhRh)`b@JIS5j8Zi=oa,LP!;uNU[m5pLcFEglH1UJ`GBWK;Vscn]
%"$6A-qSurUI:M1aSbr9(GCR8RqrZp#6eF`lmurJ:g$+:d?bPW?Ie`j2qhoB1Dr2IF\NkVDF84]-ht'q@&A*2S!V#,V0CmplO;3<6
%r:'ZS=)7S4I^]P&\G)e!oSQ+dm>:d;p9<X!IiZkOJc=,fpE3mOI/WlcVjf_f\*nc2"mb16mpH'E@(c'A\[(4S82XVgq!?[RP3LH7
%p3h;05CPjep\rXF?rh/p!#ahVpAfI6(@]WM+QnK;m;%kD5pZF_nF'uA6JDrNd.YBME'4[UIN11/#&&!Md.0.^/)pifG2,Bq)Y_U]
%h#M;6q!ft!IGt<APK@BLP:P!<D@:=EY+Y1<[Cc-b#LqUUque*iHMZ^;;K(c*^3c#)GC14_j7IYirT&mopoWHL.qj9Z*<t`/$U04T
%6OGhI!G(r/$/;Zl=(*2Rit+^Gmph/.VO6BX9AII&gr6>(O4S)r(Nmi8Dh_\N_8+YAquGr935?h-*[YP(7W(R<\"f)?e&W!=7LfRN
%ULUbsEn$TKiYUKi5:h03pT*acf=0GGHKlOD&!1Q;$h^^h+n]iFos+4RB;qM3&4L9HqH;s+j-dfqj4V?GgX5r8%*BR\/E/e_9Yt&O
%4OSUDgW5?ESAMAM]].0+h"'gkr:174SPOT]3O!\llB1a,cg'+XZ\"c4RB<34*Pk>L6ntO&dfceK:"lIM\k7<_f.^L'N+AR>;:*jX
%F.SseaX(kuD=]AejaFjt$,t#+0PFmPJ0mXQVD<"cmBi@cVEM<P1;Ms2Gcag3Ki?*).]$qgXIc_MG#e7t)OA>JP6J-"K,?NR*].`V
%#!^keDKE5=Dm!O%N&[4Z2.7GHjLR:tpY[uEha?7Ph>uN,I>@M*i'"\2kki]>Qi8Z7hY5h%rUbs=SGKongUs)cA\6W5\%D%XG/(_F
%bqSQ*/@PTmQ(W13%*W=mh<fAe]D_.9#iGsrfO'?5Ga5F>c!=%Fj_AkE^"Qat?1"hu@3^c9]KIgX#ZI+!kf\F]hsP^cX8RKsNLL?u
%)_O^WBY6.`m:t&BZZ\KM[%i.bo7(V,[EU;Wr"EZOQ82j,>t_MiB5O*F12B/<r+=NgZaQ@2X4l_.Ncl5JXgFY+.qs?EfA+dsD3X1Y
%dHekgjqafX-VKr)'knV$>A605=4dKtli`l!>(+'_GQmXVjAj:eOB3X07:(td*dL3FRcIHTlgj9R=e!&bH%"*JKn_+Bf-mh#>,SZ(
%H*-XPjn6bH(?cpE>4!sP=chdBl(T,n%G^[/deIl0D't<L&?p'R5IVhRP*VpjBf^B&R[9o+J=$mU*;>(_nUoWr5.j(1_ufP&BCu!:
%<BEIp.RaI)"uNGda!bk3%$s>3J&WVnbB+?:946ccoHd8-_lM1Dq!CWhDa-!X2\HP&cEh<bE/CBt_gB8^K_a%d\0g7d-/j8<Y9#=e
%F?'>TY'<aQR'?jVf/PUnU7F0=HJpgl%E:I^6u:VY.RL0MHpBI$](pRQlI+:Vhg`<7KT^<cJ5K&k)<2oNnPY'o]e)6MFLpg\iO)"o
%FXJZc&d0s*>EM=0fhTW?[4KBK2?Y0rfn>,)j@@9$/6``3BW:!#`T?B@6F/ohM3;FR\e?Z&'eQl2S8fubl&Nul@.Q6-Ci6")VbK,.
%Oj16[-FDNA\Y5Z\nD(USg20hK<YZBL>You;70XKP<9Rc,JOB_T*`.5l!?r(65p6<K#S\O`#XWM4"c=h)?IpG4Ti_=@8Al]"*%XVo
%Nb%M5=Ehf[>@q]1f2un5<eZ5WgOthofql!q]o'uW1(UZG7hK4$#gg4ZH*)+>klFXBM1D(,rGjF>2V.4PBl.Xtl5D@jYj^:ghe6h\
%Ni/@QZ**n=7.]/U)P[uE:GkBS1*(NU!nV;7,VO@HB93SFgXDIuKAQmCD@cJXiU-bl116&kgVZt00YlW8@5<![4WBco$2Thc=b&[s
%kj8BKhQOTgWY0TD!ZjpmlrA"%df;BWC5p$>X/_Ph`6ee9g\TC,<u&#A,nm9`/!*f"ieL6,@..^[_\&2qLH-=F!-Dlb4+.>qIKQ'Z
%!Xb$>&d3H4"55F/L"c^3f[4<a!;2_0MBj$\@)!9oc>IKtQCm]mjpj>cW*8et(65iU2O[D;Y745k4N@]jck+k1&_dRJ5e8#?^2uf\
%_Upl4r^]-r+d2K9/N'>[r'B%pS:edgjBP5!QqF'/!f[DgMPk6)+Q.h;K1)/]=VQCK^(LJ0%rrlTB1UftF#)95p4@'!Fp,)n@7\J0
%J4[SU,/`-%<<hXMa=Nt=AAnPg]3!Nd48@3g]<L)/=^,6ALXtR\p$>H<U!<>AS24j%3TF6m2J[HlU2UO03LF`U]fLYp2LedPBQQ$9
%]#k3mg]ThhOFI>Y)@,!@Ye()ciX.N7/TBYMS]N#?6m15*.,)0M[b%0Y>_+60"\r?rUD`-d\-3KH<,:8!^p*RK\p(s02m@r_fSg+R
%I/pk@J7]96$CI+`M\eIH8MQ1BJNRosUq6^X4aU/=JA`Y2h9`Cb94h'N,8"N`6lJ9LkG044);c#t8((_"b\&-q;.k*H)-k0YKkEVN
%H%.FX+1mDACPU?D-bWro/,XK,TZ7idKRA$j#2r.?1Zf9&FXZ9sf02:m9+^i$7Gt=!);j@Srr=dg4rXERVruS'nW!t\)glTukaK\J
%[gZcsD:7Xj`TX"2fsdp+\?"k:`6M&TjG]'j1<fWCkd!#;QKsm@D_=60E^1B)/Nj(F]#LI/FS_j<b:FIYg5ht(aq)\i>5iX+]=`C[
%re=[T%)KE@KA-&cj2CW`rqbo+GJ+/g]E#XfT^Y?)<1n5?+B-2nR3"7sB#nL^#\67=@5hM"mB<[qG"Qe*pcK,8!KuK)kWF96$J?Tr
%\g=dG&Nbuj7Zi637"hb"oHM[Oj(Kc;)i-A36r`nK9"4PY^-IWZ&MCdcZiI(E7CZaQ!eg:lUbrK^AWjV@Ek3DlRY?]H,,%[qpHh!1
%E+U8^Slcu=Ygiok7P35@X:'D8]YK:U=Q&OXlPB78F>5s3nAb]]`WAA;WSVPdS?]lE^AZM.juaI[j3;f:Da&Td0U,Qk4N/7P\od=(
%@hjJ's2)6Nkl6oLV<QEp&2(9'S8rVO1iqif+scj5?)BTm&5i!9JR8re@KOro]5eb]iEOm*:u[p'GO2=cVr\HXhnOP_oD7H.!F:XD
%.k=GTV/<.AdgD:q#@,(rSQ:Fjbgi(2F4Z?#5qbEBiVr>#1s_@]WLsq`_G9Z^`a]iA.-#H\(7<?$Uh0bU\Vk*4$=fUqZI/JM-GBT=
%41ff/EgOb)Xe9pa?2C&l<ZL!ONd=(`c1U*C:qGFFjj\Y<)8;&G`Wli3H?oB:[!)r7BUs2B(U(Jk>$lUV#P>`9IE\O8Fb8n)0ch!b
%cTl!o-mF$8=1d>-HYZa1d$luCSbM[f">ZRqjcDeoahQ46jGsCXfpOeaj<\1i6qU:\5'W:_Qe>(HhV>71F)RABT&/"E^>VF1TQ4E@
%'jO"$(XQ90jnbUZ,5)Q%*\fiLK@Ou7AY7ek!QG;%g@f47*,Gd4Q:79D>+W.O[9/np]\;)DLGfu[Zo2S".A!"igZdgk5,&#ALVaHJ
%Jm^sO4uYCdYp#.F(-$\n]fGF`iij+.?30)B&IP0G>a&d(-gfiL;"J<eH:">#L5ER"M)9rXSg$sV")8;j)8WIMJ%24jD+0@2A7Wmu
%<Y7ci@"!VaMJKIin&uh9WFk\m8Y]QjrM%[n`*U!O@4ZO0cnM%T=k,61l[758<4>]KK(TK%.TiSKNIoq4HdO4f&s&Ian9*/':kpHp
%5G7^(P3/tnXW`nJi.+UrVQ^4U+d7Z=WWh!ZI1OgK1&`Q@G_a2:D;m!-gALV(NST5oek^!]G;LF2J8lVN`bcbaVJRAi[NQ*oBp`*p
%rig[;8%/)1DgbSi(H2R9gJ8c.=/5:hf1h7be'OsamYURfp9c-V^hk<u8CJE7/1l_9Jt%)b\I8=de\f*0E=lK7:Lc&,N@T#kDoK>n
%&J'Zn33r??UA6i486=@%0p70GI3*`H;Ouu<I37bQ0`Qq(XGj#^5OdhJj6X+e?NZ8-I_RqEOn\tpG=UB\@,%b@&/,%Rl.Rt0H.GmF
%@acT3"YdBiOM2%<*Tn#sMjVT9W5t6ka?CfRNJ=NSO>R6*2q^&kH`I9T-!ZU876X]h1lAZ>d\Y$K,"8Ne\.uV0N2&q#8aO>\j?f+:
%<=Vt7:h;kVqjdFhbutO=T1XG(Yo'su>[g:mknB6Ae5iYK*8?<QJn+VY8oH2kWT8dl@?B5OJk9\ZN`\U`W==.1Pt5_J/AEU:>nK5k
%86U(F,=>UN!pYS@EJ02%!POtQ`cZ=U1)To3g*=Ua\*a>8+8GFLN,^tVM)90d4!AtUmDUSA2:j4brOb]M>MlTD[,&R<EXbhfrQEo,
%[?X1M(6,+6b*K%ZFY1mB0;u@Z)U2(\`qIl9mp%egDlk`$=PI!]fo*04=9:!"LT)i%nsIR1D&cFqC",N_bmjAO/gKPU3HY')g&i4]
%`5.SZA]fXth)#(RG+Y6VO\fD\Gj2-G$ZP/>_n],$(eK)ei0n'oqqG2$(OKk>A"dk-1_#-ik+dtt8,b<\NDo7>V'k-i`E#l\^r>?R
%KpdA@)8"Hn=`Y8-W]A6>gX6\&72\rKUaJh@$&H-F9Tti6:UO@o]5mfAgVdUI4]%:f1J+H;O[7n+fi??7`?KYe6_7k]p-(3*[@F.F
%;XEh/D_$bK=mLG'O\=Z+8)_BJA<A4KN.\WJoJ9jF]GpcG+2Sn>RIBLf?Cgs/&$Z`+JW14&GCaAOE\;9p&F:SSGh(pEEd"O=>aI'Y
%\*!%'b#d^?P?+u[pQE!JcZVL8#:nJ%RL?/&-Z)%`[,Cm$[(ik.<=R9`5^\Z3YA%d2Q6Y_6U_+kR2G1\7Vl+Kkas:[N`Nnq`p[7:0
%"5.nAr4AY2Nim)uR3bZ6eiY%XccYQpoB&&Zdir!,FIDuLPJ&nngS8W;2Scgad&ufep6*5_JF-$hf690hGf!JD[(d'/9n`R;e0G,B
%fch.3$A.mp''7aWc+#*8JTLs-`.hq-B=&dE5YAgK!-UQZB5tt-H5Ym&er7V;ca]9k[?>o+CZ=%\`)b<i2#4/nC"06(55e(dYW06l
%Ejj^JXI=m?M-(_>-I>.39uUk2Yp^Do4S=gpAa\!PC1>apgfdcrHBtC@%3jY%MAAX6f/,'*?FmPN[7OQ,[]rjt].NCLXgltD#NEI5
%1R$@,=L:Od+\s&dPlu*K%mJR]]E-"U9JVRqf`5Lm3Cj9KD1M/7EVqCtS5GLRZH3:d%+CC?%$[a5*b5eW,q*[G=R&ROSC%q5,PFMm
%:gQ\$,5W-J#"V%As!.J-%aWXWBa8ZhV&W/fP\.;p6>4?e-^OeFRf,@Lk7IK9'O=-4WTc\F5;XgW[3ijfpU]^2X\9=;5A/0GmkX9-
%UspE!ql]?9h%MpE=`WsYns42>"+Mh(pcJ)SZT4Are=qJo+bC^plGQTh^'[ERnuGAOq?YW<R$uZZ2Ys'm14;:&r3M@2=>@MXLBDD4
%i6o'3:Zc4;NjOuiJ:R/H=(+(r!QL>,rHlE6;%ueEcU:Y<C-1#oVkB?n)@gOAWX#Ro;_'Onr?\H[;Pf]8RIqEnM@:cLO@F6?82=\=
%"Ks9DD$'VM-^?W2NU,$L1XN)58:#1fhQJNaS.j[\jp@>sSg<K9');bh$H\1[MBoPBgBkK3Y!jNQ,W2,=,Apg5U`e0K)c1oZ:U2iL
%\L[?ZBj)6LG"l`X#[k:pqlX5N)c>G*Xd_`#r="qD/_[5B]kcSG'3a;%pgjmgY/(VuI<RWcp]YmAm:,EU>Bbg/r[Sf^#]?HF`LM\a
%P6.Wp7`pcb&[k<1B$ln?+6VM8)LP%N<DD3,-S%F+N6H"K6lZ&X&!q!h@ElkU^LW'"ZR2G?(Cnn994#Li^SG=8ZhYbcqEnB.dK+,d
%R[];UDSq30[d:5`LW(04#ZS4[D5ZGh&r"T)PbhQP[e:BGjql8_BX$(M%[[&Ojd$ZFH$A#7dK&<!f:Cb>&u3G'Lr+J6SJ'n$C>?m6
%]74Y?4lU#IXXV+PisV;Xd7$6&N>C'71s/FSLk@k4,J+)R8[/L>@d=]H+D@$q8C@oN4P9qMgg/ND7lAi5Cp!YRCYQsiE`#p*FGk*R
%&$EA!ed;i!#)rH)r_%0Cqs$i*l,rEuhl-k?amKhYe?/^Qe<1YnXBNh_?*U/YOH.m,URDMtc$JVVo!!QEQ/*po`n8+Zj>%]s/=h*B
%eGhl*Ql'd^+^d?XR:):&,XV6R3Ta\[a3F2)'DctA4$<`,bQett5!(:V5RbNCgEX_Q'9&S`!lefQaqqIl0J9,0<Z5AYl^E3-PGjsm
%Ek>9.",t:<l5.E>f4&rm2U:<,<oSC*j*Kk84\_.O&<3a@BV.KJa5VQLQ**ih!QNp%oiR*Z8jnT;8QoE@E\/C.o8)oa`E;Qc!+W;3
%X]&Ffec92D@WtojB@j4XAq:#BqY/ckeW\L+e$O;(eqR4BCK`$$f@3FI2FCE3WbI[I:@%5DBaqHM(u%Yt>"rju9foQ(F[CL/O;lZ]
%5$+kff$ma4Z:qd1<30R=-W=DAXHi+C4s<XU.r_GiK2**1F/H+'>nHC8'V/hhG(Qhu"t$FU.!7Q(arJUY*+r6ZHhp.9lIq?,VD:Y?
%Q\2>ZBMFM<kUorsi*%*knK,#7IQi^O=XfD7.?@U\5AO<BK2g-$X$QQ;nIae+`eVQY@P-;\f<G47`;%<D^XoQOE<(TO(=/4qrc=7E
%!2SJJK4ub^ht#lPdKAU'gnO_q/0Wdh=r;Fe8me6qQ5e57,LY:VNVffQp5CR`?d$$2d:`,oU$[t4/^<qoV4'uT9H[DAgg+(Je2sHc
%m>/1<@$uA#b`drT&/^Fql-HkR<bhA"T?_k?LKJ^)MFP/JMae^ArS=M;@f/=*GZL^/>n&JO*&dX50N?ru6Z`qSps*e.AoMN`:Aq\Z
%I'$ZpC1^.HM98%r<*qSf9;=>uZJ)1@Q5;-tgRUh;*'Y'D7C[Y#Ac5:>+&,n!VQ<9df$A*RqAFMOh^?E6ReB;$*bj?SCS&<,E3_:S
%,K<64Nu/rAj*qOT_TuZ[Il,In29udn\0u!9%&5=V#&;+.J*3Y8C_ud1Al7HV"B&#`i*6gT"(Z[V6@\7fe-ia@0C3Q9V7=@F>D\^0
%J"1T3b^*Ql39A[0QH+KFERWnr-&h.K/<9`ij/0dodP-C(/b)?7s7-m`**@7!_?%#50\S=f7(>J3bL6=F,W9(7de*s),7YWZB38$o
%3,%`i_^92_F4&[aP)m4e::Yb_X:P!agjVK';E.L@.mBQbn^i<]!D_Q4Gj<:_kARGl])`a-=(S3K5BZ#ER2]5#QleJ0@r^)>qFMWL
%b(aM9p8;`Nce+VWY[Q^1bg+e$P;UFlh4LdrT;tgbeJK3Iq.b)E7^c6Z!_#@9;k0oRga^Y9VtBX31e&-W<oh^WMc9K;)1D2MN;i/P
%NWd?M?p9iOccs8(?_ArjD?`T-@]]#HB4bP1YF_+9:h25OQP!;`Bg+%7P\D6YSN>S+F*`rAGD4EGg]:o1YXSZ[J8mWLjZAnGlN<)o
%q7a7Ifs#/]_^)fI&imp#>O)`7m>5GM1Eoj5;KX[//k27?:Lr.dD5K[ic-U&Se1:dF9;&A>jgjb9o3d#^]5,^9\aE5lQBU$p53^A=
%M3^XcasfCCF*,p%et1LHS_,Aod4;,<*^$d85I%Pdf.$LqEjj8Y:l7hb!M&6PYj"mHKq>Kcnc*?S],%D4-g](A`\Fmp5+b?(Nu/rn
%rp=0BU`5@3+#,rg4;[&8X,25HA!lbQKFHjRFK5Yh*]dZe]K<m\L390U#?C^nNA4@*Q<T5"QmcDd;EOsUrs/,e?]e]F6[nr,T)1eP
%qN8G_HSVU;ao!l!ANIJS%nK/7`?>0SSTs!=1,MDh[u]Zehp%nV)]q/?+6$cX2<95cp$Ro98N:#tZ8k-YPLY8m,;s0A!>Q2M;[N@q
%.G-On_9kYZ:_kT^fT1+ghu*,(-<Z]GYgIRON?eo[9,Sd*C)%NR?B2#;:on<,nd0kpKFaV;I!T&B_aj"I,Am`?Sep:*5E*XWJaR>u
%6kc-?X:WmD(o4$*<)YCCl6.'R4S7CERc;AW*(,!DgRcsrj,$j_g.LI(DLh98DeHFT)dk3-gB?PYW7d&1HeT=bZoIog*rjn8!_VYE
%aH7b8EM1K"cjh&f[=1(OYkg^WDB1c=lVPEj_o7#S&'\iF.i)7rC\\2?o*#Vhd92P"0*BGUC+TD@`H1%4Gl:d``Zh!`m`B9;r:e2)
%F&T;j')0;LBXs?ZY=6V8j0]?5Z>=en[(J%oIc0uHOAN;DH!?/289@p@]IsiA"faS#;,8F1LrQ>g,efD9*S%=8V^q8;n3ch8N(G@d
%(Ttb_EX\g7A_P6_e2X1$C,Tj5A3NY\.>)=f_OQe`l^>_pgJZY(709)F\UU#4.U0Sa-?)h6^G!B0bO8C"I4MtVAbWZ3ErT=cmJAL-
%Yt96%')Pd9s-h*q4'JJCf&]:MED((c:TJ?.obD./AQhG?5'Dibb;HC47k5e3)OP3h[kuEXRb<hc1=4ffR]d1F;"a,6X;jG5qS9A_
%Me32]"3.q`M`u<+oXmUBRXV2hU[>k;NhARZo&]CP[98#!?u3a:Y)g"9k5[?YYY*r?maVOjNNAANdSm!IQ1@tE>j8UnmRkfj^fAO\
%`1_?C5Ab:D*>ITuPohH9Wo`H/T2dMAS?G(p;Rp?"S]Xljb;KbpR9TX>"&LL<=$C!%^IeW/:/K'+aqGtSc&Tg0:BN`?Am_,=\3.rl
%GQqRBh!VMW4R7DJZ7\oH"H86q^4cj,?aOAQJpi.SRM5^]'!l/sVF:Sr$lF'7Q3Y#Q&(R'ic=7+U(c=DFKT&jaR2B#&C>OaW5%siZ
%`jc:JHQXgLXRQ.l<h?3bC*pp;=F!0'a:E(JH2?Tpj7d@?O3Ys8rF9!;FC&3o[;[O%]_`8t\R%&C9tK>VXJ=R5dsQ:7;d!][lS6/0
%b'qXBOH4#rbOMS+bWMK;SZh65G,/_5:fEG(4F6Y"a+NrQ*1b3lB%"LOYeSLIHKG]OS;s:*?Q/r?/;n^ib>qC(A[GK!lfGG#87[]2
%eeG9(Up*VnlK,0Lk%^_EPI.,VYt/#WI+?D@X]3in;^r>;;A@2PXT[0I:Q=-Teh.\9=N4neP6ZqO_,2@J-c`lGOklcQpR4KG:i2rJ
%dB=KLrcK_XJFX\DU-!e4s/_Z'&!g0+TbFq<Ih)@eJF?QD=DNFAY-p]qB?kQK>CE"[@'&7OB,FWsIGWQBYD6u/lSdo."5Dt^cJ8Bi
%%%3\Fc=poe=hE^pB6mCT$S?Lq\cZa63<E%!);"(4b$;UI\^>d*c"haO5<UBaF3:)8p8,9'4_q$8[?P'uHaW\dQ!@\B#WOM:lSE]p
%p6t?PE3Lo(-=:GrIFXCdGs4(FLZdOJ68D[.bfb1.-;%W.jk+l>Z?DO[pe&eu6_D9hC^sP<=XiTQ;Z*;fp<cfcgf&Q,5NlAo`a`>l
%FcIec;6So&on$\=%&<pD[E8]/lPqJ1;@[BTY=fGug'DJ24=I7P2&+Wq;&;-<5b:%/+j\#8+Q"E`q<uAP"NQ,!87P&Yn>pHB'5ll-
%WD\7cEmj3.F?3<Edko$CYFaIGS9P-GcToqC$Klt+3;R+bEmGVY5ffGUe+OsJh'YKqd80P?8ARgB*?6%'PhEI<$hZRFHHiuQIS=T8
%=Ri&MVj3ruI00+&pW\mR9?<P`3<F]A/(a@5j^0")G+e-coLjMM_497MEVNBNIM@PZ`Sj=,pe`#['SdbbSgP"4\of(M3fe0L8%6d=
%>NaD9o/""$*lHSN_q,sIf1s<X(r#\\^@iDXp*J[5O6JWbkr=ag303;`O6JWbkr:mr3mOK:k0XS.=?b`LI)KOjLr]&uO6%T-b=?qW
%q2"j/$4e&Po^`8krKKTX5A0K?:E.;T#P=o)8c4`*27FL#k.8H$J?0@];2pJuO]nI`&toq'0t(%[bKS1N2)H[FXSJ?4$c6-uV]sMn
%NgWKfK>]a3e<m'_gb&MEGG4?V\N=TK\$g[jgc$6[&QK>KW`;``^P'*CX&H;b,glU49s6e.&<+lTl_rR*bKC\_rG4h*()'D'k<n^,
%R"+8dNSaUW",>qmZ2:maGi,HO-DmHB'?R;:V.`Fd*UGkCRq%%in[o[sWPCf[*D1Cu?+bMiSG[p74/:6B[!)Z?V8QlAd[YBF4K$!!
%7I$9oM=9rO!,C5mF(rq19:k0u.8l/F1'TpTAoo1ldlQYPl1-L)4R8on3'*;Do`;@n(e+QE6.k[(aM>V]NBJ.5fP'4i!2^3VBnKf$
%oeoIO?*qk^m1sTOFPFcMA-s*Smu3g>\[+/<[O0=8oPDdDI>CR4qJ;+_Sb]TLJ@6fOed1Og&1#L3C8Oh5>?=a:CCG()TrgVf0o8)B
%d[<O._l/tmTiKQTCE2/KY<+NWS%aKA\[%U02IaC0K2k.V)Wmj%XJ&Cn,^#tqSs;;"9Ik[_cZLO4Ze;K):r\leB[(0p:#%emC?D,4
%qU6g(m[hZc)SKkAQSYh"Dk254IadXJIF??S(r:%mW$-Q&!dG1@D%3F0S6!JT-d=\K_t\6uW-MWLJsscaAnFdc-I$uEDe+<>%hCG1
%o3JGkCce%l%;=4]XR'T6Q^%mADXM/IL:GM&[(7o4:TFk5^8q-ZXj.?BNS3/hVhV]=/-)iFj8&[T#7&I.bV/C(F`YcN\N2h)h4Y;h
%h<-oDfDSI"q2OP5d+tkmO+*DF$)7<fG5Q1V<pEq(F/@*G0&IP6#k[q?+l]H4$"i4.LXTu*-CBdV*DWNCRt-s!lu5#1h*`UkTBL5t
%F#P\iY8de1UJ`^Yo(9s&1Pa,q0W&e[V)dkMRJM$pO5h_].CX`1!&Lbc0Oo<og4,f[9[:ei\LZ890V4\NZ\V\p.sgTiba\:X[^CLQ
%_g+4cB&mV-N,qeFh<jD2<qj0#4EiXRQQ;.6Rl-*h4mG78oc>.H+2RMSo-)Ak8;m87erS=,P4j"/dEYKER\*]Z5,IOE;SUYeEd#jG
%hBa;?l="F'04I-ZH^`Y%N7d%+*iCTp:%UJ@`(1OJb^i/p:Sq*%[tC2cZmS^d8"QY2*U6VB+,(c87*I`S?cnRNb)u1Jk!'\Qnl"ks
%;ftMP-X3oES8*cI@`0S7'ekY[;QO<AG=9^3iJ0J?=*20;kC+J?UOJHVZ]+tFdJTc)Ft=^Ag)V&(Vro_87oS<SXlhs?eK/db*\j70
%f-59LXW?S2a1:1!cOnHN>R";eF?CQ9\-VnJ)dkcD'01!OUo9a:]InaUb*$(hV<jZ3?QX$<A4uH!4fW4GbA,`;fh2Q+R#Y`4!Tt?'
%Qas6=F.!O$1I7LAhtHGV%e&B3hdbI30Rl70j,ZbLLZOc<;U@/OlH"Vuc$t&4cQgHE#)irh45XZIPM7kGM%/E:kjIN??+))+F*fTE
%jB.ma;J<f/>+90!*GVqY$].>UDtDbn6`l>TBlc5ag.DMZM4j4]kcLcT<_^&pe6@'$MQH0P?-m;0VXG;LG<+50OOITCgTA'TA@aC-
%]"i)KX61*5hFfE^::+6UCpWB5_)0hBFB@!mG7nK$&bl#F;;W;,m4I1@Yk[E4M`]ZqCfIh[.#`T&8>jkpRJ+(H\$i"XS(hThX&B='
%A4;[Z`6PcQ36t1UIPf3f>9o9KI'1OX?^+CuUND5YFG`0`CZ>h[kS/:Jf'aIhd4+VtS_SY!7!+;K7/<\b%+fp!"O3arJ,9YK'4S&h
%M6MI*6u6=&,-9+KYD0U$1W'"$q!+bQmZ+M80>8A#<YH"Ec8KgDWWTqY\s5_JbJ%u">0mZL[LIO[2k1&`&?WNALMPpjF_&H!k*.[R
%X#T7k25^r:4c,WmKN0t4]&;+9=']t6XFiY?F/1G#lEjL1]Xhb+F]Y,X4%^OJS"$iInN?@Q*Ds3]c>83JNKDV;qu!$LA&iV/,^R2L
%X79Je9UGQ1b@PB4OY+jYU3HM0eip*6@Tg;kein,^McUVumsZUgoTDZs,IH7>kK?nOlMqs`aNX#HkYgSbABttVilN2H\n_BrcaluD
%>@W\'`qZ)+CN@qG:7)C!g;cio-lrnTbrN3U7VCV)G'mt^QYDuX(F(F(nhX]XLOrS.pDbS`El]lq[@mocZ39&KoH#qa"DJj,^gb+-
%jBN*Q1GP0#3[*U*C_+V#f?I[f7.dND7,PsjejTrL@:icKi5Fa"mVbJ,7U5?1)t5<GN5M"V1!SAP7k,<jY1@/PhDof)*5W$(>$SaN
%)3K-g?*i^)+G.M<I`EWVn!q!*mkZ73<ps/`C`g@iMc\qb33[T7QhCFO)@_OkN/0PN+H@]uUSqEg84F1/"_8=.;)h%mQj$t6%Tk,k
%'B.4LLK,<p@CR&+cS>n1>Fl5>XXLgt1T(<E>0KsC_?CoVe&KmN<)&@QdJ0\3cI$IU2&\o[&To3YK>:$?2C([$_V(GIgi.'E$Ip,A
%__G2[*4-]<_pML(M7u?.)oe!AIQ7dAo>B+5<UJG=\(Bu:RNWZPOc2]Mc&nr!gN(oCY*DH1Zje_[?\^fqePrVUXYjAUMmiYK"rR+/
%oj"XYElL=Q4F6CEXgH'2P6,#(>GEg2<,kmU2b%-Y;8AAm(f\4Lod1RZ["VctF1(m%V0bdNp/l9E&[+3Ujh"]UjU7VO?jaa!-]LaF
%.g-L"CU?X2Oi@'3AD?K&SsQAg:oeC%4H1!,kp2<S(klE;`Dh`ZPgV%Y<_BWQC/OJUd]P*W&et0g(3K5'[5Pdg#M2up+PI%L.Pt,-
%[PVcFeu$t%SHXs`V&fGLO#OkaXn;:ERa_NBN)pPE*\lN"m7FZ2Ocb\6Hu.[2-G?'dY8[,QX@MRJ*@WQFW68))+o4M3o5-VbTig9F
%^9eL2()+t-#&)2;dGZ4%=f3tnUG5#FUkFUr5:6CYQ!'k<4f-7@V#aa%[&'ZY>H<s2[@fHo'PB^S@!/s][)X-9=f4IL1l1`DQF,j.
%WmoFo^)`kIVpVWs%q%NmEsLN*TmmU&rmicHZm?8p+cU.TLoM_`=$Tq4=bS/e6CJJ7O[*MUQ;7-!RBZ\.WGkBeOD5o_5^J"2JgD#)
%&kjI93iKK^7Xm;k2[4a?[_,*16uVR5:&^_Dp`_LZ\D=mB#-.Ja;=oW8*!%"BqH9-AZg:EV3$Ys<S/(qL11.H1="WplAiDV.Vjt<M
%(%s[hg+->Eb.bO?<!e[%]>R`MN])a"s6RAK7fncrlKOKbJn`KMHaoZoC=PbgfU!75Xi82;!gN0*dWu"S#Ca4%qcgtjKa==dmc^8j
%->?lAqYftAqE**Y">FNR@e:IV]GuH&(rDQ1m#K7'iKlB-U6G;fLW_Nod,2B_aUCN@`6kCh2dCZ1nf!8Y,o&emF$&+rrl+T<P1C(W
%!/KNT9+14Y^Xc,_#QGWTr25K3EqH,tR40r(q=Mn$i=]bf=D`\Sn,:Z@#ckibk2d%a$2AirN`_M7c"\kR$gu5L?dp[+)$,Y3JBkW*
%rH^O^MmcEpZX24_06^9@TWOVg/#H+5B==q-hA%B!;&RVO>Eb\u;qq'BM^eh1`(!Q,LdmY5W=]+s;IHObVZ,a\gbDmK8XE'c4`kd<
%HKdEO+Y;FT%H^SA(X..5;is`O32J\D!1\)?@)ejH-^TiWNVPiIR6*&!dZ#)F2e&:q`3*MCHBI^",e2"RU(-Q;13>4@Gj^S.h0>5X
%1J`mr-a-WEM;BUXouTM=MdkqRP<aIT1j"Gtdm>,#>rhT3V]&gKB`cL8SLVbY#7369:p[D72o>i\ZEW>Z"VtmXY_N2C0a/JkX'rJ@
%/=&\K$%q'C`CS<,9"5.pB`_l^j'&;GqPdA<Q.;r5^0[mI7Tp.6YHGR(;Y2`F[OMO*q0#[#ZjeL!_b/'DBSij)aTDNPf*%K5+XVW!
%8YHkA2P4lhpFEpakC)&`T8qDC\"q&AoS4`8`uiEU]#0G&*Rim#2l,@'g"FYdl<Bbjd(a*5'/6MDOU'7*5d#T=B&e]t:gi-P50?Re
%EO-A0K&-[BdA7PeUeAdH$qC]NS9(#Za#We$_dsMT&3K)"oFQ`<YtS-Rl6+ila3F2)%$QA''KuVoB6V+GM>%7"d:q3^.8*h\c-q7j
%l*b3AJXdUObBQ/oE#*5r)L],o2!u:aaX.d]WB:KZo^9k2=1M,ZUH@r-V*BP;R:nL0fZ%FSo.*K6r0qh#`]+^]f&G<e)VlFlEK?UN
%W?ArfmV[m!d7OEi)r^^aoj*?0G#/8)[cCB1)Ots)(N56)\kHft&-GhtSJqM_[s)TJ#KD1:Z?K&Ak`(iS'_!nY1#%e'^U/.cV]\1>
%>QT1=C[5O!TY*QWRuoK,:LL0'k6q"nC+a%(\%q,YeLNIW9sn^',S!*lR8/@(6Y"$(W+''FlXdJ/Wl<DBK?/ft&ZQPD7h/Mqj-:=>
%(JA7J;/E@go)f3<.3sZV/<1MH3NsPYYVQl,Q<^j\!ins.lOLC=P/.VUHejt:[?f,:E9URaM>b'g`t)1Aq++[kRiqD)-)ht@?6A[q
%>Y.n!UmO':C?QD`Lpil$[HbfcO9'tYf`E%?cucNqG]JuBI<S0:SB8Qf?OfuDf[T_+J'R<CX@l1;V6mZPSM0Qs8?<U]TP['r:@mU!
%I6!97#H6^tTo+U9BNZD&dX,oVCI<l`ZsK5uY@cplR<`B[*Z4LY*:p,Q/c9nAVV:CHQV*I.D0*)/!o&BkYI0XZcVA1b,A=X)(H4ot
%I_b[OMXb*Q4\brp.kG"H#pu^h=0!n'3fB2tChamDcAq;%[Yg!<*R57u_PUAre*;kYOe5nPhN%JL%f:@S@m1DDo!reZB4oZ]N;@/;
%mu5nWlGg6KZ..M39!0U6\Z*8(8O?=[[%r[--Y[?lkA/:2<)'kM(A"X&Gr:@gp1[S[rok*lC],6DE3LA\!6/\$<-Pg!G6<eFf^r_a
%0Wr78r>R&>4_T2\peVe<'Jl/D1MI5cZmiZZ,[O(&D/'-][:7loU,tB"=R3qdMtG$EVDh+.oJ4+bYNfCBc)dddPN4-+N^PP'.\5d:
%6J_>%NpcXQ^FqKGKm%7ROI?`[8Wf/QBuuKi=gZ_Zm2F`fQb(/D[D\d;jJGXW/$fG.S;#p=(N&8ueE*+(eY5eFRqqC^Xc^W,[*h2d
%?UBfQ+h5,b7ea.S!AMeoF9@JGSG@>Gqg6;,ArI8`@#b=m"FV\0,.i=Qdh!$ZpRH<N@pI?N2U_9HYDGldHF8lU"N4!Y3j,V+C5p(8
%(_<TtpM?lIV_;bTibC/er2j$@C$UedPt0PcRVU;,5^[4l1L1,XP8W8LICXBqANdkm&r*WmSlBuUCX/j]N/Ma-/]7VVe*l"HSm%aP
%.l>b5.[6K"-[ona-\#/q`A6pup3k2umqW54f"G)^\bedn[I]J]g00K-3>q`JZbpZVCIbiG?p&0GZ/\_tNVKqi75*![dTh8cMop#j
%`GHo7W@:hUOrMM[<c$pDU3l&,;8J_A/MT'UIM7nFR<bOVpE9_j2)%^&#R;h%S:66TkKDjM;FfW4G;2*O[`<S/e77nD-+r;lGBM4k
%q(@$>S\7)Y/\[`ljAi@F4--_LI(p<W]o37V];4[[GEmBB'f3/mqWaR;_.NW`\7.L%gT7GakkAdl:$1f+4:e"CBs5'M<9'L@r\d"6
%D14[Z%+4(AfL)QM+$3!)\t=<#;<*`tl2Y(5!F@A5Iql-(`ce%@IrR?mVGcC;B,VjQce,8KYE>ai@qtcY3D_7]:jj0jRaU0aK_+V0
%&i*0[,(Z.hLV3"lm)!">!=@rFA^;emaOIOeLFg7^*X:Ro/C&Nbaa&(b]7:"oAhjh?H#igQ3Y6XWennbf+P5pTA2c^dC2o!](Oke+
%EIMe/f)XjYhp64JLiLCZ_d54T\n1*Oe2i'<;KF%Cg&KUr:KB:pi!3'==e*$ud`Z0t_+`,e.8*%Q&"gG_T?1"fCun?^\8ie>djK;c
%chuQEotg&Q%^X9`Xf$(02+/_1/mifWQhWRio^_8j`3\+V=pG"/C&3,!6uTm+9C%=8,Y"/dm-P2Xp9dJ)jau6R"&\!&<do;]S*H@!
%E<Y#0eA(!0f!>d'9%A1%1=i#Js$=e0DkN/]-,#+a*>7.]`hAQIcQjD*Qmj$a`a^tLs*F[h;RQr8_3p((/6aHDc,R'7PYSgfMj[FF
%B1A^Rnk^>u.8f7Z\A=*<:T`nsQd/=blI:JLB\3DE3P9E>qrZb:BZW:ddW@k@pCkN)o3!].4IP&$F;[YP^6WhGp(X$H-(WYF5FUP;
%UdPifq(g(60=@WF]@4A^@GTa`mQ&Ya730cY,uLcj3a#"1Nmohsc;C,#i?4:Aje?ka@*ON\8XR5M6pEoRB.%?:l5;d3M@Z?>6RV\G
%YDG/D;6A7e"kR.<+bn_OBqS&=EjebAIua>sCMB^BOmE=13E)'NmX)/'cku1oH;^o9P"UcN#-W#qP=TU*jGgh=&`,1<[^KbURY0qo
%.^KkJ(>5u+>;jXE:/*ciAl;\@QE%dTME>"ls-tRICIAtuU6m7bL?+G$:,.#AQ0Y/_%USNY.aPb)CF&aEAI]B8cO$Rm*_.hd3?dE]
%'k5,tF0D&ZpA+?`hX_2kSE*K3q4^eiM1**2#+8+-XW5cZ7a&).P:5+V;S&*\HbXX0;YEP%YG@oL@B]:n,j?5`;PR9q/4P>S_7H66
%SCbF!EQ.8!q44nn0??`*4O<mO0R2i1mQJqBr6I7HC>BEVH_Ql+ka>Kj0HTg]2kK:rRe`ubj3i^2[n$<dU[moPHGE<kP#;%*m1Ei^
%SQ.<i>.p<:e;K/ij,CNXVUWeRUXM5UJu`HtPVHqpf<ZHSU)HOsDfd;b=dM9Sf/OCQX:`HOQ-!61b:Idu2@#t88#]1]q%[c&(s0(V
%=QA5"=CX9'a/^=Hc!l]%j>L4=D`>4EU6"J[ADBcmDj/'Hi^fX>Hmk'MW)u&1DFr7!CQe\UcQ1u=JFVD_LHEfQSCOulJ4:C%3#1QC
%"rJErhp7#HKR<rs,#j3HP@RP^Ydf-fCbi9hG*78UA1VEUh:,DrW]:GX:O3sLB>FQdEpV_@3F->JbNc(f-.BEc>#A?sXDY"rf$J97
%k@Ud1VR=aW+sYGRTLuUUmV(8_^<(>me0d1TDDtV0C>7@<Pq#g86WQsK)`pE<RL1NmWWn+.Y]<X>J1Af<#HdNh1E`cf%i,?PU2q^:
%MOScCAVr!Tbp_]PRa>,UJ3@:e`)pFQC1:M3/5iNoF1pD1Z*!36<U=HhDl\[ciA9"jHMESk[N=R>CFRq0WKMj6;<Y.SVcCWNmIVm]
%S5K`9?4!shgYI#FG-;_TFq<->4B_opYCUE\G*`qff.173=5@_.?W'Mk?*u>PWlpN>Q[nV%8scGW[QI[.o&m%`H"SF1WNuMRm6<,@
%Hdnr$DBcF71]`:RZ]Q27-_NUMqkNiKcFrg(NqH.of6USs.F)3=bu&L#Z/\N$Ug+\Q9!gt8qh*BUgiLsie]C0:8GMAU"bCFSMX,B;
%;t]AIH.u0gJ9+pTgrtD_bXOgESETLEoD-etG@d,5QlAe'jZc$`Zt8n(RJ`Ag^Cp)o%smM1BQgoNnN?`5`a^<er^#E=KM#52nSMHj
%8rmr7G+^'%jQ<CYe(E1&6>;.-qe^DU@j)4i[_j-]JB''n4R,4nC?KDMTC_Y)O.I0$ee[?SkLi@o\Tg+2a=ZboeI&B<HE@@</ADGT
%Yk9^`l`h&h>$=<]!6.2@6It<l/ZcQ6@C:(iI2kZh1BA?i-jb`fBI\ShYKGArIm6JnX&c`qEeo6;S0V34$)IKHaI./5V<l:nZ1*l\
%,m?DG$kl9a'3"/@$p$a8k!$Asbu2XP=Q`G.M`Y&g5ed3amJGdhGk:p`S+kf'He,LNp6V[QIes6Gk4uLD^&7Nek/2Q(ZIa"YIX`MJ
%OhGqq064dcDN#B\]F7p'C5`a7RI`j=Q^KTKJ+;o=HBS^P:kjmXrfOtqGPM&b"8"5_iSld4s8'KbMq:`:rm/@"hrfgQOhdXB(&FYW
%atjp8#ZcN4rU79]?V+7!'ZDg2@9i^Ls76%cI>.^>(WMBJ^mg#A1)5%gT.YmJnd@G@$q=[;!:(l>M[WC59-T*RNoB!De458Po:XiV
%]A(a[BVcN&H$!0,b[8_IDXj@^Rh)-ohRr^Wk4\bs%mOCu$=Wu(%'G5"lLXMgMs"GsJf4UViZGV`c)Xp<hu3QJdn@@MQP]Z4?Mjc^
%5;]8,-m88`lhrdG4H;'spSW6R7i;$(rsERLT\de/@-E*W=29nthD[QXT^,qhR/MpO4U\$KGJ\[A_Z4b>0-0E3M_Y$#piX6:TPHni
%r)*alpg68.CY?t]ALSH,UsB;Yh@IWnVg5KA'#if42B=D*XGd:Fs#YR9b_XFZmL$#/p=Y#D%55r']A]doGR8cVS.!+$:UHY3_-d$o
%L"V'H$E-8;-XAg\gIjXcTO1PF>n3k/fodiFAHG%of+\VpL2$TcgO]WU*+6!Kn?\5u7m$nc-p^)I,A\2elX%WC^dLV!(dGi=0@kOY
%d&/$cN*67A;Fi6a"850%!`BGK1.'k`ru;9>2A%WrnIgM[>Tp<GAPp,\gC&SG!B#!9`F"o[#+FWf@9Y6iLGtN>M*fZ[Jc5XJ]<L`h
%;=Oe75IVG'kn9$]A5pI&V7Y]A<%e0(qr%!0csT]8<:Jun#HXZ_\FX4!%)@8reMn_%[`]:Qd"dE)N2BP]c-R/43++[i=K-<_NhHuj
%7gcBY"?\&_Y!'Uo9t1u?J:\=616=?+0-ZT.#b=ec-9uY]^do"<n5h/$.<f?*afqRLiJ2r9J318+0;f*[K!>Ablqk9Zq[<gAL-&ct
%oe^oCADMV(6]JdWpjQF$`4e\dLoF>X.a(;TpgUI>J=]O_iLEZ9AdJEl%A3\=p:ukh0*<uf@GV]XI[+Qf>meh13"?^oTp[O<P\0MD
%!Q]]C.D&88D2;fm7eclG@CMp?E.EWFZUr>&O#i:*9p]?Z!AC6Ag,TuUK]h708hD/u!!F*Yah3B?$sYYE(`*fOn9A)jA0CJR`2KCZ
%<!X!Bn>'L^m=bQKL4`S8SKLg6!Rb&[;4nTHhM?CkdmOGoqYES`fOgnMe]Xc[#TsJK00.u/\PZ[q7q0@3O9H^Q,6aP;(3mAl$tu3E
%LR$^g!KjGCW'J[-JQk0i$=!o1+QKBH:O%uu.G<sU`+-QDG]f/Yp'\5Y'5Xm[%PI&-)?k:nNSQ$]NM?GuKc6.q4-;ft@?hZt>4)Ou
%!I"$chPfFcUAkOr"^OL/Yb6oQQPFTWRAce%k\$+oOQUqcMQNNOq_6$OX.596A>b1\UJ+%l:F@IlR'j2Q_R:L()8Sbo*q9)&6i\i'
%OX;G"JphQ+"9kf]J=&g9\<@J3Xd7t;!MMS#b:)Dk:AYlTnK7oM#0pXBPQ=TB;;kp""bgd&Pmsr:OnAkj%If2lGaqA1n==iK.i88j
%G[S`F(Z>$=hbbp)7Luk:lK&(Lo;TM5X&o?h2hE;c;Ls;cKE;759JE+"1IM9]L+l?9QO"!jS/fZ4!..]`]kQH-304f7]j1d3I>"a0
%$N8QHAciAF2\a-gm5_9k@%G]'[&]'pp-(^7'EE_e9JFe`&7@bc!>>#\k,A[gYRWB(GU<N'P^TmA+ohTEqHAi_!rsa^RgB';<B?p7
%##1bu^d9dLDr4d=W^(.pMFErE5-&2lg8!dSlEW0oIBf+,le<rMf?mI059Ib&m<<[=hE4#Q9Fnl^V&Fnc]Mg_QJ;AR1'/;Dh">hM`
%KE,:RaFsi.#/hYIi5VC><bpSJVY&3G#4$ZPOm0F]HnOEk8CnL&_k0O<RBpe\?ODn+1]mWG7d2MG7rIf#KY\QNYD$Bd3QWF7Dn_-%
%!s?bXRXh.=0<$W?"#AeB#G;^kQ&20@HBI^$JqBk&p]?$UE*KSC0a,"eLIDA7&_;,IW.TXR&Ud(9WUkc/RE.c/?mAQU+M?S$=$0Uj
%AI_hIpsg\(+]#ms,-A']qZi&n^\T[;Y]0u]!gjQ2o#[r`L77E3N6X\S&(#eHgA'IbLiOl%8o_X`ofGA@Q.@)r&;N.E+U.h#\-e1E
%"S/6nR;/D]4XC5WNuG6OLW/;Jg)^D'RiZjpHlgU2++\ECg;Ka>C3'rR7i*nmC;:9^k[Bl9):6#^JCa1`$hO8M72aSF;FR>;j[$Im
%(`6[G-IgTM#nYekoc/CCHl"Y1\t^'5D\YeB69cWsE'O[:Lb(MATZ`5J.mS@JLt2?ant=e?W93#HC1,jW'`HuP8;jK?OYMPt-.1Er
%\:!7^)F;#Uk[$fTI=ER8K3hB**[;ALo:fLnf9h$=hU,%%`!&/aTph(Y_@0q[#KbS!dPpHM^ne%+%JdTL%Xq1r#I/A!mgMIEm;/G'
%X>0Nk5&_%Y+jeSkKq<T+6'b"Ta>tAn#"l8#.??`n%E6kiO@`RK=tX6sle$ma:>(<omUtVpBLm([W*RFl5U(_!LbrA0UP&LR<uDYg
%Z7s"Y<Ij^4``<7pS.I&m6Y-uT^pkPJ4g2XUnOVVl?0M$C@i/%0`\bP_U42IIF@Q[Ka#=Qcj@U9pI!;e>N-!qOfJ*kdOEdOj"1gR[
%0c95,#oY-m`?"CIae.?9aup*c+J:C1(iZ9IG3ZRB%4B<5FqkKHqJVU,i4NG!=3j0%GdKuHW@XhH=rq-L@3UV$5(ecdZB!(Ga$pIc
%/>0d^oLQuT7A-N1bc>;"W)*the\G@Fdo7e(rSCFr!t#90*5Wfi0eEp@Y37as<CJWhT:aR"#^SFcdpp]n%'"[XeU!8pVD8cd63@Q;
%*@&CCQ'*pu!oNOp5%>3/8]qfo:4e4i!c!WZa+91``_,lM8$<@MXMh=KUX2N=]L9B,QUl%[RHQ/Dbf!gm\Odeq@4-sFr(.<VeYV=[
%0u[kh;2Rc<H[!moljq6&l:h>*-_ao+-h?%ipH1P__QN==LF0h<kh41f3*hhIS12rR&+::hoWu-@4=[5J;q0V,YMmh8UY`-R[+qGS
%U!>7ooY)ri9O1pHCQK<HXtBm"XtGgm""jfT*a)>.>[?iX7&$fp\mTK6@.p`UKpo%MDFY;W4C.NkGBE(<lK83tf>eT*T52BiOk"!G
%IP0-^&j!DMcS\JWVbfSo!,+1]IP-.?\W,BLpcYR>$bp4jXtap:3BWrJ0rt&kWK5:(YfNP??]m]`7NLpOq1RYGaYaG^;(1qjJjro9
%-oi8BTEOD%;F'^5WgAPIX!1Gl4KisNH!L?f=%='qj_6jMGm`aU?1fu?\07<Shp:9F_F5M=QoV`S77]tMfY->(U1l%+"U'?2!,LrW
%>R3dWc$W(g5d.SASE,%ciR3Y6ETQ_&f)W19]mgE4O<KkRh]e<s?/k!D'0u$DWgB]+%aEU(lbj1t0PVV5TS0TQ?:P8B%m!\Mn`kGr
%;`V?K[\LQnL?kdJ6CEl1-%81PUL!1fNcqPb39GQ$L81=:)>T9GdlV`J:(u_Il8)9qU+VXifr2qZJ`8@\`hEs,NmXdY6lCu4D]+N8
%L!cj:UuO8r0N"K(9S@tq^SGErl7N[9H:sLAW4/S_0^:5e#,C#fjY,mNl.Co?98'pUZ\4a)\k5$OU95,?0'WU;hI>AHem^o'/G#jS
%LT@62.g?]*T`,7/([As&R#62NllttQ(_Zf(;Kr9N+&F6*-nGk6ALH1P]1BQ787q>_1Up(=<h_k@,jI'[<h`?CNg$F)5oGN*-A4gd
%pS)4DlJW;A3^ApdkkC)u.o9B)q-&G/Qq+#b+Qg/4(U7I?fS@"e>4,fo,%2QS.`sp:6W[pb%o8haT5onZrr$U=iI-%05iIQLgOAqq
%nU&/baZ",4j\qO?9U>P<^H?r8RJtgY!3\lmF8YL50];3sh$i-\<\BNbB0Lt=LC&\Er5B'S3ZHX^,Ien""Z@4S@rK)uJ$=pBOdkZe
%QMX3='`]4MnVLqf"NEHPCj#9lQNCt.NG!poK1lY,FS?84DBAEW]36mXA"9=sFQELHQdT49,@3A6EI-B)PKWPJs%HLSaBi+bT0Ee+
%&q/ZbG5UF'G(cMp%"EhK5o;(P*5<,7hZY%M=0p2Her5j*HS`A1a4V:d(Y8]:Ms9>l_6n0fdpO2&9GkD\XF"(Bjl.A2H1B5\PQ%GE
%$`gsJ[s+uf!b9kEW*f.]IE&S<dtCSH':EI)@:$mK_q54r]pO@9\8`/f!&*Vs.j2R2Y2Jb&@tGeW\B(3C<rm4\3JI`U`-;t4:mOJ$
%NZVY"oAi_[_6Ae&bVS1&hZ-%_kU?35=N1ULDFXsp/3fH0csq`p7mo$c)$Ag8N\LY`[PIpq2<W?p"uJr!N8oa4":eDg&-uOq@o+IX
%S1?;!i!I_%kk5VtYS(5tr"<Ni73K6GM#p@163nQn&I!V!Al9!@,b[b1!KIa*cq>>tG`,8c2^tu2cNBI\*\`P4b"aX`-QRjpKS)rB
%Y7)4W#qZ8q[]AtaM*0Yi/2EA"L0Of#DSX4>J2r!^Sg]t_3ZN\SJEjd.RCp<GZ!St4k'T4Tqr4uC]Y*/7T"QrK'JA]_!r=ZG1f/YJ
%V1IIAeK>\W]G6!/Qunut+Eq-E*mk,5M[O&p\p.`l$\;t,n0>+\P(s2CC9f7PJ[btpB;)$miW1D8,Q7k^0JG9!5]=IU:sJTqBD@8e
%8]4HP<[\=qoABaBJhd='"AH(0JCdOY0BA-`+:M#dN\@!NK8`'N!DF./P;<?5B9!NsBNJVM)M;[q)lH8Y85GAGF"iCZKBuLg%Hro'
%R@q&4Qo6_Fi1^`!G*R<taIOO0-G[9IM(".=!c6[Ad^DH&!_+oIY(ksEcCm8AO5\RlVa>r27d.`\)F:0dbJD<[K97!?l:+6u_E]m[
%HW+!;!`a07%YN=9PEH**)U9k1P<_"K1b%5-%,h>^r6.FH;_d5t:Put7P)OnFdT5]_gc7dC9.$<.BcS3](38CI'1K!_/p&^P%OdP4
%@tr'?3H,BGcOE'%&`pgbAaY^KF1CiuUIKu'O;p&2M4?Sr;%UO^-2Rnl=CIO""XXDiTIP][XU>4Xkh+o>D=riR$/'+/-JI`=90f6E
%-'3.%#.PKq'A4YHW!,JTR%WEGEKo][A'>DOQ+dCJkbrHl>1eTTcPA!jDNmuu[5R82A60@r+o)>f0._3.Mt_15'OL#cKJDcP*"RW(
%5k02p5@J[G.Y<hIc7iT60C3^1c*X[W"a^PLP>ld;$lR&ClUuI]XY0muJ53%?GrPOhE04`Z#/jsUiS6[`0_&.VCM$'[Zef\pR=MGq
%jD!Ju!^8#XFVm<K\gLf)fILmlUbWRS?9`k$*`>m?#\pHKT-^WP/PpGh't?p]/+S\&m(\s%VNd)_5>sCPU'_fWB_V\Pn'0l,e3#O^
%d-MIrgjKIbTid$KBmgm`CO\!-5$/82*@os;:iocjNLoJ@pn@j_OSkh'LYs29<VTj*YK".6#%@c)FLT3npn@k&<'XK=mh!-!Z3ihC
%kFZK:q#<04+l@JWj9)'(l/r:Rom+++=-ia+@a>9Er=[F`ZF]XJ@BV6JPsq5SJGQ+4s$Kk-pbKf-f_=Gu84F9"R$9;Ji,T+62"2<&
%3!`MElC9_V%`'Ze28^&4RM#q1(mBWeh0)_N.aN^.4&P,Mr"Zo$W:`/i-'f+rg%.B$(Qf2)0$`,Vg(F"7e]5"$ce@TMZ<SKg(j(i`
%Wc`mC2`HifPY4mh"Y]R5&MUPXJq2pG&Npr4oV<$A4M"BCAml?[O@2OM&4@7Yl"#*5/k+6i:kL#L&8B\T8C;5JqD)lSW%o,/b:-,b
%X?/7!8:O3MH(f3@EUF'G5bm!X_]1CcSUk6(5TlLQ">dp.%NA##$m`Fh",EZh-k_^?:o:5.^k*S$2/?b'K]2EX@8^JNFeqL7!['I-
%ifR2\/_^jC=@WFYZN*MCR5#n'F;4ml4H'<j#TXsk6V18RE@>YK^gOc?<a0O*#<kEqo]7Ls?SDSPj`-g=iY=fe;1TlY"W$K0o5^5_
%UDon;Qc2cg5&pj:(-Vd-#+<Xa),+fMY`j9]CP.Qk!53Q667`7j/@.T]8;=p<JrIls<!8AFK+E%)<s"KU!!]/<6B"X'l6$p!RX>qh
%$;XKOD=8hQ:*HU="CqB=""[3<Lp75^RP97SH[0(>Jcl/dZe%.u0aD)'U3)dh3'5(jdj3\;U'qKPRKbY>'\;@GaRPM%k7VQ3ULQr`
%]QMXkL%#Z7"\HCWTl;**o[uZ6nc24#Q&HuoD?@V,*^%I#HpsS%#7=q$odW9aGRX46)i6H\d#mE!]-(XGi?@NW$mQ_'i,N>TW?*9;
%TFhq<3i1513j9u0-AjbRLu-oho]=`D14iC\H$tTap=3"SFm^s&HkA'Q5mJG[^Aur9Lj_h)_8$@hFKt!]9H8T)0\kt&$rQ6qV0`Q$
%M,P3-/fH;;=QAT](m7hO2-#PT^o<[5PpWAc,C(1s>nF*YA$kta\7Wec6c$moH1NeZ!"?H*-U0!`STYhS%*C74'WT:mn0C("VO4]M
%XoV2:\s_k<!-iIkO(@7t!i^"DN7tB_-srjA5-_R+C=Y_aKpRuB)Y-IaP(=>++E&2s`=Rr2?VQi_-ns[MNiAA_PgYe,FFD;@rl3DP
%p!(.0%:[\^"m2_#jEOdUM/9CgeM2KkDYIs4ULu=7!FVmr7nBAlFNLL=]b1`K6^qe^Y^D'gVjdoeYXGr^_o[WVCe-7t%WoN&mj'T[
%e@PO=prLpsP[\%=L*0A@Hcqj_b@8TSAf*L3S_q>aSM`E?!Y=%N*4k+74:AK@c1[U>G(HA=SrnlJ'fR5T#]i'&L-G%TSjIE;Pm9")
%4D-clK3;a%cuD"^OPD+"*&5\#Ku,:PQXp?E\!G("U;JdGL,k`21YPkqbbM=JPmL\N0tPM)Ql_D`<]R/iE8kO>m^"Qm0kIQq`K1,G
%0X\Le>i"iYmIc[G5BQbk`@e.J#Ma/o$r1@l4E71.Q#\RMLMj=4$C;A_jIJl"7-3b"ec9)4(.@!j_d%5Dbt081B4UZVP3r@N0Z65L
%Od#?A1T_jKb-C1M"$%SIJPkQH;B+F;/d4TrZ"[4K-3Gdm++r$kAT.LSRA,;O;0UF/p0e*0rK&]A$5Cf%!R6IQE*Mc5T'5u:i?=8m
%MJ`hIT4&a4"t$6h+-;s2i])m:2FH]N;=VJJ+d3V^19&n`:)*j7Wq0&E!.l)5T^ack_$1X4W>h(]2%Dp&;r3=<0M`Q[Csn=u^[ZOo
%ZV!\4q\oa,=W%F/M_X;3X6>o3/^Q]qFO\E\,8ec4a5[/hcg`XY(s&dP+F5@S#kUlaj_Yh0Oi)saD\uo?5hE4P'uD[`-n(daJ7HEg
%=i7m#`ENQ`M[gRuEqBu]cbRq=IXk?0423PJFU8UmQCrqO&g39Om=SKl.`$P_ocV\`pEkW)>X=;MF<q&1hWf.b&TQ6I8/!+2YM1@[
%.#;PpDATAX=>9rF"G=:QI;"ErkrT<TJe8_^0NYjn+R"12;2:tfG\^`^SH4.^$?S05Z/MSode+C`-Sq.^CfDB7W:EiR:a.G>!\.:q
%Lm)PCqGpiF.;CIQh`MTY8\'^Y*ee[#'515s0U<o$5bWf3FLnMoV5Dls,JDZX9Zp(d6"G0>\u:edKNbUn^c3b`;<%[dLcPT'6m0?S
%bH=H6*eOK8DJV<[$%M=*75BEXZ7Kf/-DuNc15B3Rh"+Q4jd?9?T@LcV6c$Q(p.oGa<Wl(&J8?_?7aGE9<'B0,jK!A@psW>"";?TD
%)9*65"h=o1=k`A5B=FLmgedGGabXB&i>+Hs,=G+;^6p8Jk$W+tVZoL3QR;QPOUsaP?iV#.6KRDC!9scQ2'j(d;l4N1%iPl76;blS
%3Z8!ND*W+b$AQuBTLGq<T)<4e+328?#1dlGjg8t.d$D$LSi_nY$RY\k(.?fRMin_P.Y=DM-:nIOKfS?\S0V2]@'ljbSS9iOO78t=
%&l;i.>YLR4Q)HL#bFC7"Z[E\;cqos>(3XXAO@'qBE:WQgT[t\%7Z\MmT8`(kj2[f"Y?"dRDJ76qj;8fs++h:6ij!h+`k3JrK1$pr
%R?k)qeJU`8)CpEEN+V'i)T!)V!iNu+"lhY^IYV%M^_G/cDT`FpcO5G&Ypa66)XegaIdl/U>A>m;^hcSab<06eGQk9L$k=uuLh'Qk
%7T#JF$Wo5d0VD9!UqR3b@6%KS:/#"3=[20mDYPWsMnO2RMBSI^P=3k&+;T7ReRUcn+:\)![?8"-T]ujS``OM=qOk^l1tKG[m)*Ku
%JF+51G/u.qL`VVm;1"4V;cF0Nd.OHjPCS>DW2*66I#G'MDG2CF@6FOb65V"^0Q8!9jgl:qcTnmo+HuH#@Ru-\>o4</jG22jOkl=*
%eX#=TD&e)-(LamK4C0EuLle(X4Mj>mi'GL3$S=<s2fVm9*)&GN_L+`%GS1X%=lp**EZ0>3q?-nhpeCa2jr"KYGZh?dVoE*]72#]p
%o-u>gC+*1jr5.C#[)lk'5[TbUW[U)-k($o+^!JH73E:>/FsEt5P/V[#cSA-?nSH,$]FIg/*--[[0P4?RX.ql2"q;"CWa+*]\cEO*
%Q-<6-`k3/KaAZ)C631i%G)8>dCl^h'N:G$N(UT%!Hk\(Y.ZIn?7!/`BLd<[0pCelt9.42_0S+ADWSP(9[]$mMLo>hhP95U`<Xe"b
%AucY$9ZA$/Fj)9LDiB)EVsIsI8P].5,!9ZY1%5/s%jiWt11UZR0pn+Om6WQ\9rq87j]-u;_Kr.M5U(on:,+Y677*_3'jeGVFa,\'
%TGbgcI%V3gc_GB$KG?!A(oJ^oOF_.d9Pc[t$usWlc3P6J57WZETd5X<_Ap'@,[KU\_BM+m[9hAQ+00suY"DBU_r9UhnR_e=(Q2aN
%eLX]'<sD@!`t5;$O#&U0eqeCA;T7%b*U0m#OsjalEdsBJ92r&[7$B9GcBOPC4%9WB=(9)`/HDabYU[\\8FBFh-ZRo/04sIQiUu=?
%88P/9?l=&^1a3UM7?0rE@7u,GGPpYa8hUCt!tm[S"Tt48D9rYp*MWo:":S`QNmXA8W*ku$*k?5AcajNE^5goIa<;bCCds.m+i+aj
%f>1Q/LU&*XW>6JlcNZWnW_'"(2?]LXd,quIRlGP[JO@t7ZH96]b=>:4pgM8>IBs7<*O';6NGo&?d_B@<3OU\XM)<'le!o%L`m\-t
%Dg8B=dj"X#`2'ojGY1i7\X6NtddEK*-*X;\:iNa/K#QbX0nWRS#^5AD:c7\a>65XGcAFR2rJoD4oie2jQsMuoR2q]d,;>'.$Si-T
%:r\lVl,Lid9/6`q/C![IG?Q[70#2/%oS%mLplq7bJOEeCJ.&YVMHN1+LfIc:pCLm=F6C6a:9j\o_2QM\b:s4&,Z@YT;Zf@,k57kg
%n7H)"`lX1H#T%n;ECQdXhfq!:l-,"K$KI&(Cda,R:["/c'lu:B,%=*CSU.PR-.FW#;Q9!s3;THAUfeEd$T-P.'bM9UM8Z(1?(>$t
%V!-e6&r&[UgVeh2_&udQ`7cI=8H]`:A9p2O76GM.174sNK>"t6l9!L'JqU]-H.$+SH9]Ytrsll(\RK/,%!=3:4+!Z?oo@U?M_Ant
%V^)TNG'?n56fTB+-Pl@[;g=+,VK@HIrEMX$=WP9Be&M9K3d6*1Vl%MXq_?Me7CL#"#eFt/"Z\C[j*L$-&r:j`1bpF^BHf[2m^CM:
%ALSPH9krK[)#0fJe5dVkF"gJ@qrSWNfdi8hO_DQteRFmo1K%68au#=CdWDQ6dFf\SfgI,ZZ(VZ$ME4l:,,mus#K*48;8#nQh)O[p
%ou8Qnh2fS^ahu'KNs.<D]s=16e30%BX.YJqNb'DuKcaa'fVff8_lR6:k&a>[,seo%OVTY[,)0\L`s0GKMfMP^dU?H]*fRHS!YB(Q
%$_ml7iO)E4eOeOb#cucdoI']/YCa?dX?YYo.FkbpODJ7%F=Hrs%VMb6<:2,,WmZtUq!q=pV>C;$AJGF!B*U]Z=<C1)WaQu@KB+B%
%$^9b03tahFC!C<77VY(!4%>[_@[AXZ/PXI*lK$Wn92Y4)GnrE/8#leF[B`,/ip#n*?CqC3;C4g!1Y=4U/%b=L+?V%_BOYqY7^Q68
%$YJOX$RV9)!.jjN`XP>DUGT&-Mm3\A6,uHod:DbJ8F8!&+e^6b$I7.?;\1O4:8/?dM-7A?!OfGQPuOt`\EO\Xk)tnuN)Cml$V*D%
%?j\P9*;Rqf8;PrdiE3bp$'WeZ1PLD);Q8lR&GX\qqA-cia&M.;J7f0P9WXI50TD>@7Y.P4+goT-6u70:%.25<SOTa]oJAcG$*io)
%:'N88+#Gf0SH_@[cqc_$i`"#u]7F>!6f=-A>8H6`AlX0=40"Ph<jNtTdsV4$(SEen&Sk7+;R</!(l_9Ib<8LX@bF7frQIVRED&F\
%PXg`Ai4!j.ksM6B,B)`7`UbmL.EEnA^9HoT-rB"f6k5D54Aku<E[9>VAkHPsG]?cR]G!@?!56>c&lE.Hn.l(&(Hc/ue;R7f;[h-R
%P*c%E!D#Y8D)qiO1G_rcF0:XZaI^R?[Fb)0V]+Y1MldD`gasZt*!ls;Fi.X5CX`:Q@[fEaGfo'@mX(Bj#*qOiho=kH(lWo8:e\l\
%O#kUul*FlD`+8_#@Gi&b/0msd\5Y'%'"Nf=$YI8SIV$/OKpfUT0-8Z4XbM.LQ8oK^-l@>AXjpOCm$g!'b\RDjUKZDEZPig-R&&n8
%*HfMkjblQWa%&Qu^YOu%JhS*p_VWbs7UN0&/u'n(_F8U-A8gEuM7q[G%*ITU*en&pI2bC[[a\NWIVAb2TlA."&^h=3\-D[S[[RR9
%nR_;K"EWm#-@e30=D2]KdZH0sliq#SWg"[PU7*XV17/]H<)+\PQ(ca%;)V4(6V8T[aO;NuO(8m*]lGSbC?>Qj8^(n*""4=g0casX
%c$MH,9Gg(9a(;URE&9fiRY*VW\^E11M'uMKD3bIVIQrKtk;6$lQoT$KVD<$_dOmQm,SDdbAKBH'NH1HHG`45Z9.ZigAck%B<_:`9
%FW[&)jDgWPs4I*^Jsa[LF_-c09?De_k[Ls%-SZsa`Ln6=J[PX)S^FrTZ=nXpG>kk';m2C@jp7H6>hDq$a['LJ6pTjI;KRo6_o`*g
%-eMFC#/WfjX"e@RqeT+E@TZ$+d&;hf1.<6JLAO97X[][3+AGUjUd\,nJcSr8`=bj2`tHF[$F:^oIS)H!ZGplm_'CXP0h%"+`aSr1
%S?t/E\SOC7YKH-N_oG>o@US4;aMMP0_iPf6.ONB"k'ea1IqR8-N;lVI@]4IY=RBp\@F>miShRfZ6HQ7EMnieV+XBs?+\pR*`N]Q1
%-W]@d4u]on,3H9D;9`NZ;?UaVX:Yf(UT?`djDPe:'Dp7Vep`dg7D.2:>.i9AKr]bCR'AP;>EQc<X1i">PIXffO>n]n!?)>g0mI]:
%i)(8RGr7I[*n-oBGb_NdA#d.$`q@L<F[qD`p)Gn'B/!(BTh3X`Wf%TRJ>ou%N246u>K9fZIVP]RU03Yd2E%iW#_JRW52nW3TPDZ7
%:W8j`Ae;mrF4Pm5RZfLdVP2t<.,GkmXfc[I-@Ig.=;^$9hDGT+`qfs<@s3dODKoa>5k_1ELkK=M/5/'\4(L[EN[>T?N'.9nodum,
%K#(SnQZUmNJnpU@%icXI`<_uOG]DJHApuFr]@'6'Hd/'2EY'h?l_5X\9SH\][AH"Dd6POr!bu/"_R0C-<GVt;(pp4dkA(bSegZZK
%Kb_RGMRhH,q^)XKf]>sd;Pom^LPRP%9-]>a-mZ.LBok$>LSi`['SUB@P_]RIJ(BZm9f0]38u+kZ&oRi<n/Z&*9I[4Wiet\#Fk1B5
%%oJMu8[5^lekjbeVB>/VYc#8PC]UE\/hEhb@+d<r/<P&fZZO#lA/tb0$6Z]&.EX!fG^Y`pAS$l?&5ST+?*9Wlfjl6M4=\!h>g8G\
%HlLiZK?eet#L)qja(`'(1g3LWi(O\*1g4,'27HN7o=E![#SSZ#8s6H0A7O+OP:#3'0=LMo8IFf,0^2'(!*#XsimJ3>8Z1!/kB5L4
%7jIg;QJ56:`Pe\mPHNWuLb]4e9^rLE3seFfPub=Y?0PJY7,ekH-X7DHe%l;4k'@8\]*:egP_"g-KK_EPRA@"#0IA6R\A%73REm(C
%=Y;2,N(-F\/SG2]1E+)tW%0o]\'d`J>I*Gu;s^?;Nj388R"c`WdP;_q;YB^Q-LIoq^/.gh8f"CVcAS^hlL$LQNY`1$PAer^br5)L
%i\\,+;;HP#Gg$@pGSF=0KMbCJO-r2]*ZrT0L_^`q%s^?9!J,l[-D"e]C,1rS--nGLbcjIfg'!`B(UU)[TbtGnS#oNH).b)<;!71j
%)RG%H`^*Poa<U>9m?LPjB9SECVH9sg,ub]h_f<d?i\TSo^q*Z?hlXn2TikO"8D_R!BI0"p4'VnkD:0-W+_[q.1n&sS=\jIcXro0%
%KgT"egF-*Gc[iXW2(?DFBCT::QHl454M,U*Z'/3TRlmn:BB8qAii_d;2/"XO3O(-K+@CuGRoPmL(*AEokp^9p/m0RcCeg`LXqj%i
%DFY^BEWA<K5BpHu.N"o#I*`lIW[e:7.1n?:3anFV,>cUR?@ALa,`n1J>!qg/Y/(G"(CC,`-5B-VqD3tnE:URS(1Ap3RQ]`bF8A5^
%o`"F0&lX=r8MI2/&]NYR_!:7&:_"'<7:(:0d3NiR-/$BW@NpYS^@A-iam3L@U5HruL144o/$Lp?QM'1:pE@[[A]3TCLfg-C].f*c
%5'j2@N5-SI^1%oa`Ln8E$4JCj=.4dr3E%=g#A+5GB5.n0(n%fkTh.D%+kSh3l:5hj\cp0UHk7la?0c$!Pb)8"/6UjJ,JXE:N9TO]
%TdW+\L9:a#Ab.!j'-`%HQ,l42FC=#/0,[e8h.mdbPZ;t%n0#j:c2nW12j:W3&eYVK;inKo2>Yaj3p\Hq1=Y:oPYNhbRM>0UeLiR#
%4QpAp,a/BVd^-)(ns;J6i:@eu/Z)]O&E$!$b,Bm<<\KW3gT49BjG9"*>Xu7mepEG8H:@r4C*Kh('Jg%@dR*65$O3\TUH=;0NXQ%F
%7Y'cl%R[S%@ZAr+bY^+X;3Fk8j_K.%;.X/+.ML=A%$0Y"PCWt@`#(jIdZWiob^]!TF:,i<=k9^Ykr:rPJo3(Js2!cig98Z?Ht__/
%Yl#kCbJjNDk!GH#Q#nn&>33R*WtXFei+N-PV_936EKfkQ>C2,9E_J:(*"t<5\!j]maWTokLLqm%$st+#oAOI/<j;()?aGnlQ;MZr
%5'Oj$/cNtpJ!I$c.u2^.FmlH4$_O5.pCH8k&;`_OLT6!DZbPrH,o`lLj@qqU)WOE.O%KU1<Aj)C)8qhtl-J@a(GY@rV2MDKdC"gD
%R#Wgk?[-l5Y7W>'+E<IfS;1TKluno:_AGaE"`[H6._1oP*-<Hs$X.^?e!rR6S/VYk(u8\M#%;XC8fTHhR$;Pk;&^+*=k[R(/Jc8Q
%]#[j35bQ'0\MgL!Zr>jQEFnn63*=[fZUBJ?=N["H_qp/X!jT)U#m?,c\]S*3@580oq&5Pu&UT%<UW*[o#M(gSHWppH#+Z:,BEGsm
%C7hg8CC\<''s8:f#78Hr\-b<M*9b;(,WT46=%HfE>an,:%-ETAXQsn<,.2PR2>(Dr,P$r=#V3[+U.K*6n/>,Tjcr*fOs.tO?E"^5
%&um)l]X_iQc!MpToKT.K':*ucN>9<5eZut'%GrB&M3,XZc-.Q8,Zf;oQdNbAODZeQ\KG%s.6@$/@MOjrpp(Dlm9[d\'oVWPo(pYi
%dF)JLm%1<&(1o/S6X\ERSY>TGB#_l121J[PEK)uRP7]YTEi?5f\RtC[1N$c]Q-hSdU8mqR-0k@Rdm"J;KCR7F=e.h/Ojo&$3/O%n
%[tE-h#X?fMJd(9Qp<_.p$/%N".6LgFEfTDlb#(Nr-u&"8\>WY1T^e<f9Fsm`Gt-()Fe*5[hQdO$VK]&l8`5R#:1YISi^Bi!74*@5
%4\KEhC&gcK7:`lpqDQig)QZ8#U7B!K*n8KoknY2-SE1GZJWJNq4D=)6$gP;\#NKJPR,kh9"%)[Z>/\M'3@tob+9daqR!$4@eqMUe
%Kg,^OX?Pmb/-of@TZGk)lP"&i[>>l:DQnY[W:<j+8jXnhA5]O`JFQlVCS,anefj-OW^3,Qi&cY5@Q>Y]U0,!;/O_s+LDL3bfH]l*
%Pc+aB8G7A-E+K).ZPCYA=T"[WTd";Xb7G^sr">_Hnn=N8X.I:A(Mq*q=KWqeP&10Di5KGK?s:PXK265+,a6Z7"*gpHiYU3HN;m%\
%KAuTjW/QI(BV_e6$Om5L4YD<=C^Jcg(V-\q1iG8`=l6XboV0@.^q2q.[ASf<[C\6AI;4pSoRk)bjiUmd+lAl%TQX]m0_9!RcQqjC
%b@5fI#Hn5n>6f._lZ1<$p^4YaDd%L6#[Y,)".`Eu'r*dd*+pK_KhM:T&Pt\9'f_!_"QKWp1n@Z=m7&@$D8$sO=aaZsOf#(W,+/NZ
%;-;f546=S+oF>QYVLA=XX.Z)qG&)I2,(lf+8XPT7C'Dukc=9XkQ67--%[U42jW=@AG?ICj^jqpnmBon84T`57.-L^LlT`3)OIPtt
%:Fh:^3.OHD"TJ,ZPHPR@,/eIdCBctYcK2tl$lD8":URMgc)@)T&Lq#tU<>@N3IfGO,os7GOh1!+\P)o.Y<j^<4,]5;P?"2kE!ooi
%1Wd3!!WRoG8]]"9+/GF?*g+`e.JS]OTeKT+%p.#lYeR,N.K#`OH+`.+0bK2N@Q$RsAtO#b1'[K0?q;>k,cAm`1r1\b0+;ZC_Z3+c
%IfT(+3-pl74X\K&Tu5+lLm!L$OJ#C$>M]O!K3<:R#"iHr/B>cDdet7$WH7hERTYA"f1nf39eT%?J7K?*$s<u)A7%+okgU5jj)GnM
%"%ZL"J=%H((oCmbSN;Ip*+7^l,TdBJO)c7\-bE`[V)7=sANpKO_O:'4r%2ptS`Jh:Sr5:A=:2r9$R(g$:]uXgO5@E=Vip<R$O4b\
%<Ohhh.<\`f2'?UnJJ)/70*ZMS-6%YY0R"_=oAM43Uu"@"n&9>Z]O2lZMp)<X*]#M26-^o&22$O;V9gcZ-,VFY3+1@E7]FCpS1YC@
%X(Th)Q4tj(U2rU8#[!IUgbp-9%4jsf3HK8^Ssre]o'ir\^%hO;__fK4BG<RoSg:&`0Sj5)2T9@WNGJsFY,^;T6Nb]Q=u2la*d)k;
%p+g?]7F?EkFJG@Yin?1<:eY9iNosD0$UNGQqJ+Q#c!cP:oR%"<YXT*E6$P"#DlB_j=j93j9Uq!Q>-UGb..i^]+#J>6'`:fL7nLr6
%'ItZY"n(MS.Wj#lR*rHW@[L)W@1e%P1_Enn!uBR/USeI)e6A!Zd<H-(:/fQ:<u4hJ`Id(.00n:0TTjtibSW>$;KV1!js>P#7.#X"
%[hRZ=0sTu3_AJQ&Oj7]i#hdD?(93/(b9BU-G'l3.jgZL@%2ZC&bf'uYSGfB3R=Vn:klQ]Decdd`ZnI!LW>'u=r(e0)1c<'Mg'%d%
%,77F-3)O]kL]^?Qb<s^W*,6:o2O.3-0/5O:hG*i'93Ra"Vg(*b(^?t#KbSY@4'AiKcFi7SU40skRb[c*nAHDD]VEi!=oNXqNfm_K
%Zm!5ZU-jE`:@4L=PqZm7bH94N1?h58e5P7n4QpM+BENQjN\a*HkE03qC,D)QQ,qt^J#+"IEmgUhN:1aInYB+l0IR$sOpm(r:=E`n
%B%!$mq3BDE\Q_B,"1qlV'I;XtU?#n$`"e=[15R'r7D7eRr%QsDmT6A2=9o%9*/e3tPH/hHMHi`Xn:k?WP@19G+^Q65jU#mh_ln#6
%9k;Mk;TIH+'9+HY#DibZe@^QN!?.Ln2/bc8>D>F>.&rt>A;TDHR\D+Gd^J:<KAiJG:F`P8qkLLpo,pE$?8]A[$o//h1;DMm8U;/B
%;er\gO2;rs=Y[_WOCOl<lW*L(dNU#,)(kMAbOS1JIGpG[#FDlU=d-h@Nu)RWJ'uE6gk<jTrM[pfEAoUU9\Vs-(#["\`8XO54`h;3
%DMXQC#EFY:OT(tonP5rEnmWE.4=Ie,^e894Q5X^_.0hHj&QfH@-6pf3j0`IJRFKJODkgerM-gIbKIpNO>t])24dY_0\2&4j'oNie
%>UB=r(Q$s0jA?t/HU.^E#tW`7%+IYIUn4JU4A+.=nP9:.La*D=#j,Z,egouulRI&!aOK5=\6Z`\TEVk2XO]'WB>J?pCSjdLOV4K=
%5JE-l25'QOK*(/UAe?J/H"h7iV6MdfQ:ht&\7Cn?qM##=A@Ygc*$V;"H=C%&Q;JtD`T\A[g'?5Gkp67'@bGqqS%%08*QZ#r'!!4l
%@;EF)a=#oA`)RJ;S4;DboS$>20QO"4GtBDV6-2_r76jp&<VER$V!:'o2*Q%;gL%0_6BnH0A>R/jL1.<c&;p:B6i)sO/>>:^oSr]Z
%";ID#8cEB1>n21PS<o%)%.R!%*U-9mTqd6DAJQg]>A\J5S]8uXV%eq5PoNIHPp.QbC^+M"s$(l!g)S.QCl<adK`Ar;EJ/aL"7CJZ
%Dg`fpdc#7Y>@H4=hJqQ[!s0VP7j+H,K!`(<rN3K5Wk*MR)Daa5*"4gi@?RVXSutRbAZf4I'#sM8Yh_euI*H"YF(3<+U9cZ:74IEe
%VkO<uAN><<6<-nH07if+Ua.rK:F1^BWU4c:T#BVUd^^Ddq_!B4Ppum25V],kYW`@oVtHgD,(qL8!u#i@A9j-0]G/AK&MVqOT3$@j
%mE4NR_e#iX?C@lCTH(?>QLfkn$1JI[dO!uMc'!pFS6eYKoR/.DLgi$4FB]qr4qnP50\9^tpWJ"0m/hdZLRUl/eOa.(/H^"IJVNqB
%A3L)=7+uYh3J;g.)dgOR&QT>UZn:F%>.>$mLgG']Klh]UA[]J6\B7`m(c(^>,j#?i]l$B[M&AFiQ]"jM9lk'4(phhY.[#0m+e6q4
%c1kY9LsHGK\ZVDl1buSB1s?-UAT2g%+7$c.@N)Ng&VP%oC_^>cc17^^96nq'/P_<t$H&%34MWASHEg41:H*;57\^S_B&s12HQo>A
%EQuq+pAUa*1$Ar=Eh?2GUtJk!cDHk?EcK6U_3W]>e+UV6X.P?im2;'70tB8mCrodUY_c6/5Yn,a!6hB\V.'io7Qp3A0@&R0'-e=N
%A/&VCC`Ir-F3>A(3VB7HgQG^1@Cp%i4["oR?Fj7,KNmLHIqn=mrIeY+*,>7&4p*9?61%.2G1HPV3G7!j)6L$#,Jr'ueVe:cW:foi
%8a.PSb5I:9Q7b#u9OT$H(i+W516:,7,NRdgs#Mn.6fi5fpd?Se1M\PdU2bQIBj,X61GMO`-X2HU-_jMV)QQM*L!WoT#G][G&8,im
%<egNSI$G[egVRa*N;XUge92Kt5(@I%/YtsFZpS\8Bgd)`.B13t\K#afI-,5r:N49UXtEJ>BYL4mX2_kh5(S7=f+#@<H5r2%09E%t
%F(cO8XL$)V?(>F7kXZMX&)I'831^Ct)'c+5*f[.@_o+HlKp!s58rFKqVgNY2;[P%@,9^3%ittWbRe-12dD>;CRBb&[rn1DF@(\BJ
%(E55BOMhS'BLO:.`D*"ISOkd5`C_PUiZ4(m5"QAG)pbj3Q!Lc=`M83[',W&c-:!Vfd.n!,kJ(oeF7t(]ONQe`M6T0'dE\U*Vi5(A
%3G7Ch6@LhYE,Q:/;fsf_Vc"%\!WaJEb0!Zmo`5tB_>7\Tj>Agg7>5hm,[e1RKV>1\9T2"Y'D$$Z81YNo5@_Wt_B:6Z&,FF(V/ue7
%[8PnddV2Vma-E%:-Z5t'"%63G.9%(_7i4,i4'-5EA4uIfjO0QkTh:"XcVj-tAM!@PS<M,4,:!qGY:=fB'-h(fb7h0eMpS0qgrNdH
%EoIZ*9;K+//=d?BFA?s5"Ptr.3EMW(>[:7EiZoSc+cBC$;2ZqqAdFBA-,Pdbaq\"NZ3>UDoub7ACo>ER&#5Y4k2.XaaMQ&&oO;Ck
%A>/RoAOAZKR!&QE-IW?`(Lq`P&-:UKR?bAEcRPX\PuT4(H'4C:-<#fbWd7)\Q$Bh]Y\7gae.480gc9Y?9T8"bS<sQ9AO%do/a77h
%W/^Jt=)I]/pj+rGV<XQ0;_<-&ELc?Q>s:O;[8cR_)R4UV.]US`Y4csX+f6mP1MEr\(6Yf,+]J6X96#&fe"mr#J-W8N=9tX9)9ES*
%0Yr.XQsL+9.>3f`k&a9X)TNjHM3CUccCBiec9`S3,RQ(e!Tu#F5_qGWJhUO#dhg3IdHq\VI!tO0B[^UN781/.o['lXVc0LfL`TMe
%kN4&^.C.)$h:1-AHt=j)_#GrkX9FoTTI:+G<lU!>=P63$:!.nF@c@+_!?Eb+("l^7c;NJRl,D=;9F<dYUR+:gjU%]q:F[qM8tl^=
%:6OoOjV5h(`n<pj#.#t:BZQJUKXU/h-S"?'7S6%4-]Ia-mZ3M6_3J$3qQ49ZX[q-Eou5t-i[E_Sq3\2&bPb#E")T_A+6F%c?Q:hX
%"Vm"al>`EbNot=)+9Q8nS&,7uD_Mm1m*Wm]*Q.X!XpY'>(W@1nYuJiK(fHoUA/pY_;d/d;0nqH^V,\S.6:sF7]C7eV;oV[9nuX@g
%P2A4=;9W"&IA3cp=leqj-Wj_l,c?76*)'+d5o&:_ZE#11eW99E8\ROJ_%dK9=B9-)(7\:>%hW;X\ViOJflZWD:[D4''Rq^JSsOn<
%`0u!^/WE<!Z1Z'qSh:t"Str,9<LQNU.!D-U%ba[i+nPp@7lR78lXVQIMpe"&>:rr&!:L;2V_<`3nQW0/"'0F[$N)KJ]aU`VAli`[
%OuZrUAK5t6.@FjiZ'L)bc:GrWH,=5JJN44qF/O`97B9cH<+"ca`!YP#c:mO)!,_Q6o'+35aEW2F#S_VV4ZP+t0]k9(O,Bg_Jh6(g
%/dt0&\+55Bj('KqG-is$rq(5%cQVV[j+K1&0!.jqj7b&3"0h)jb7NL_LU9]b/lL"@o^i9$[?WBhmt!bm[F-=%EWfXSDCaHER:,Td
%aTSAFB=Xa!6e*U]KrA"JD,h;uR(>:=mD;!X8UKPAk<GL_;_8s!&sju)p.BTXqNNZ8Mq=_IO0%Hr=M?16SR,[)1CnBKfT1S,ittnq
%_M0Y>6)7fD:G3].XbcMflaE+u1)il1a'#e)0fH'aM1CIi0iAa^X?WJnGSVV>#,pN$_MXIicf7>ulm171j,gl<,rcgXj`>>pBkglT
%7G"0J<M*K('V-SCC4IiS=\#GR+kqE:TqrM:K0mT'c;+6[)bV^0+aSQV3JOFSHI2mh,,7g"!(%Y[l>3)/*&-Ns8<M`B16/\1A5K->
%VrG.6Pc:8l__CqD[@R!AVFDpPSeq],b)j(i2i$AoP#u6&$$tC&]G<*0AYV,:$8A_t):`IQoI-YLZ_0fHQ?Pkg_s<5Kg@*#EI@67l
%9=?=-*>]\P_Nsl3aSP2B123N''der@Wt%(NJNdG2=Q:6j,[!3TT>V[R:"3&n0.pO%P;4>>&5mZ2'r)WY/ngmBoPrX2AL_M-"K1A[
%lG`SKHh(]"o?!B8c)tCM8Nr<$ccO.oF#&#r:A2eG*#V=^?`G_"&,s/&Cfq]-nbgp)`[dY%G;um%Hb[WiiB.p]ad]-?2qu=(a[Q9C
%,TdGJ/4"j[cM,lWlUALj=pMSuRXSt\6Im!q`q"eIJ\#rC0ij@;N4+`TP23GsGM_Y>IXu4orQ:Ar^7o;<EqGPg;cnPpnh.#t`b9d0
%+3H6no743t`);6J-7km-/GCMTM!;mX6lh4ejbU#pH"<jTYjB/5`*@K:3,>BY].soB9@@g";1X6_0D3Si4dY_o0bKAo8D#Eo:YAj)
%-P[T&04r>JS.Uhai8A[E:S%[<T32(`&TAG=U.M^64jqT'U$O(8Gs_M)-Pu)4B0_hJ1lN[=>hPCXABV<oA3^Q+"">24-m]%KlJfNk
%Y>sKZ`)n&6=*A_VdC#[PTCf))5LaN1M@gk$@YC*E9Lkd?64:d$#moH.NT9P[A9I'&!AXG8e.[_""54t\cCh+rSeK^_gK4)ZZmH`U
%j:%"3cnQE]'2ndrl,BV51#='pnS4g,Y%gC:+%l&+?2B,lpZ:S6+;a7`fZ;LQM)%<U.MnsO5Sp)!N(r^q&=cm[[>i/cNsJR[4IL":
%#::qbrDsejP"Q=*8^jj[WtXQNSSa_6-<9"3Pf0h&@YZ:?H&(V@od^iVXc'i<]je#D[>E`50#'`ml+<Zja)WPZe0JOM!nK3+<\>GQ
%3`s"'*5Rid%.HmNarr)PB#Z\_--7:`80lKFL+md;+st<RbdrV*YqI;['-m=[.o5BLH9AU_<g@&l2NB4=0W2Uu065WLiQ[ES.0@>-
%7Q(;=-lF`?q8DJ0PK&NPk`K93.1%XF$bDi_f]lpFlcM?<E`V-+j)Uq&-C:XVKSDfWn6)!F#qFWs8CG/m2XW"l>&&(l[NQGbYLj[6
%Y2!CS)6e(I`0+LboH@S3m<2I)+1E=B60>JXMUWtr?`qYa@+C)uoJT$Q/.^rEAce3Ta-<7>Lq/Z^#2+eEB!FAhV@_qVc+TW>XEXg+
%,cL''Nm*b`Zle0^m&k<S1Ogf5l,f<+8Q3sk<Y.ZAE@)'97A;Q%.Ke@+Srbs=PD^)\O^iX(JXPr[#naqrbY0HYXV53mZ\3sB$>h;'
%&2][L;uMmDV$S-D>eH3&2t[Et)<gG0`MoBPoWb0RNdQ,hBXb!H/"sl!Q@i>FQ-&0Ao2/fI$iD3Q6K[DH2\;nGeHo?MlP9;Z\NEV;
%*0UW"o?U=#(ll_#92iX)KYX?&TZO-!8h':?U?9BbotM*t8Tlt#8Hi[``]h)fL_43.Gs[DSVACWX^,D"]KGKunn[Li)1(jMtm$S$V
%j9<8?c=S&C+W8=L/Fdt-EUMUZP'1<qR_:HhUJb@i=<kq,;koX^\Dn6=[_"8<bF9fV@UeE<;]_%f3-ZiSK=r7nTHCuXR/U&?Nf\c2
%=A1AClPtl?kJtUA?_%X9B];P82)qh7g5hQQS<B;+qID,N.o?VO0(iA1XI9J%`-]%E17?-lmHMUSQks\kPt\"$kc;Y$d9`Y:qL#RX
%U40s6a3Z:T`re0O9'_C&G.bMNdgRsW_ltIdrPr;Q5QG_[c4eOq,kr?*K[Ja>^KA05LWnPV0.s/IonuP'_,dP;fktR3P&rSl<3EG[
%doMQHj2nfI-^.3:mIE&#WGa#.'WSQa230K^=R]WA$S_t@@F0&!?.`K:=Id_l9J;Ah?.YF:EJa->)P-5<`;ptG3DZErM'W-UdjI:9
%K'Y0\';I^A.mW&=(D9-;Ur%bs'QJc30g,OmC%?rB@[d`J!?Z;3-9[qX9^EYgA`*)i_u!V4,H4XR@sUJ8>1FG$SC:b&X>URK<35F2
%C5cFhZ@`1cVl;X1\oE"eg64YN8GB.R9:lQIN5kFAjBtb:*[Iqsg1mVO+g]kRgg[&s8a08LP#*De>i&HO:?tPFBJ-)b!lIEp_tThp
%[Ahd`(55`a@Uc,q>^=+ucb%:i(TWkgOYSk$h_?'<5G>gD#Z[eZG:K'oQ=kM/D9n+WWu_eN_510i^1H[^j#E_Y^n+jpL_'q8RnHK-
%`ellYfooHPR\_Y*)s(QO]4&9'\=CDn]f8l+1K6Rr-BZdJK[F,s@VTCDAJM4`bm@mmoOOscMRUf]1iOmCqLUJ,IU_Y6Gc.hl&]j++
%ZpN/MoNJ,EQf?ZN=Jg23^=C2r/CD/$L<2cZSP!Mu`;Rg[Q^Fi(q%K94@H5m5BpVhFHqM%%LeY`;]c6&i$LYinHrr9RJad64$K#'j
%F]fh6k3JuT-)D=$Cb5HO.Q(124G"u1/0Qnq"kbkE%Dn7!?6"S",K>,&1GMq%HtBc#AY&I&7Nft?DO6<]*t#']^=_KbDq0SHgVso'
%M4'l]1%lqUbZPg(UsS:K/cEcW?>3V7ZbbhAI&rU6gscV^FA0!2fL&8Q5](9'ZEcj]ne:$'<#a#I)2cF2\[^u5P^s\LMNPe4DDoI?
%C;qJNbp")R6\$djE">NsW'%mVQ'?Q7o"TB;Qp_`bJ]aqV\8l'),_L(s$XM^TN8&M6NpDVLLM5f/Z=Ho>";<#pTB5aB+sq=Z%Z+5R
%^J#K@n6n5@-\S3j<%bV56a(ODb&NP;[^+>n1$PcE)Pe![:h>qn`p!l\Frk]ugZ=>[bf!U4%TW4[Y?s3#OPo-?`\up2_-TP,Ek6bn
%@O%je@LT#<d)97*[Z#V:(1&GaP!rT$)7"6;F=Mj@)+1Tr2F,u>WH4@JjkB-CP'-#E9J)QSkYesh$/]uL#c8E!`f_8p)EUeq=a:&Y
%!_\^j`l^Zh1<15Y$39M=YgS_#YamCVTehTd98&:`J)UaJC.2KC^nk^hEDJmjb5((sL@7+?AVnUP8iV@iEt5fXa!=Y_#Kflt2"t*V
%G'ViF(nTepj<L1(/F<@P/=pAro%+l/Y'er'<mkZgPenqtmV)#%@>^FZemi];n12KsW1DR^8Z2*[Vol(Z:TUF-=Q?[<jC3&u`J)gg
%M),!B/5I*OE2ngd@nD-MNE(3\Z0/\;kaWo!@nL\s1"Q,ED)]!b,o@8iG$c,EgpCeLAli$dai4)Jd$-QtU!"11Za$$!FN,q?X@*4t
%N1&C%)sbGcg2=61:P\KnBua_tmYC_WUYYgq_tf"/WG]XAfrd69]Pr"uW[/]l:+]$`gQJ\oDfia7Bj*<k3G2B/Cr(@GZ2:d9H9U_q
%%bb\C)<35;6b65@W8:R30:%'flYGPU%^'$LGW\jEfikIi2Uob;KWMsE\N$XHC%4ucNBFs/:T3V_/W/(@;nDgeli5PU.X,<9cane;
%0oXZKo@m$qPVIN`^0'RH@l_Y7N/<b'P^-P4NM[NTr5^Ul@Ueu'X3r^mHV&J679ZPO%b.@*.%].8q(5T_H#Xa0FXdurMces!iiJ2>
%&Lhh)HBX?-qbN0;qVp42'Kg.Ue#p\<W'UN-<fJ!/Ps'b[j$Pj.pHFh"h8FbA7lJgD.%U0E6aa05KWq1gR%f>58pT&=&U:<=JEf%F
%?+IIHH'VUJ@]FH$-haVf?Vs$Wb3QuJA%*+uVQ#uR?<No&R9XKB8t+juACn"iS,tgS^^4ho6*&9s`DGZHNsXj36A<Z!AC34KEp?n7
%m;unZcPY-aj5f4i5dL#LD'U;$FQWLBM/;A9gf5IW#XH(+[C`]4G$ime)/uR8/)6;@>SaTD0()0fF;!G*N)^QpftHIW_-!X1XMa8n
%q.P63A/ro2APnh$S.?G50eKpoP587?(U`J?=1%(GO`\tEb85Lce.cCVp@.*FG%"6G'Y+i;aX8hI/YA&"@eQr7gNb5o;:&#+#!rph
%JTok\g+GjaoE1;T/4O,kD(JG':?J0RS-;=$S?p?T6ntf+TsA=THW4Z!o+<=h.Cq7fo/AP$L+EI3182<"@-Tcd3^N;dV)Yg'Rf5Zn
%I`X"7?V1lrc!sNG(b=-+'[cHYE<Vu60(-nK^6:UM@Pl6Y`e&8C-Ih*cgRFEMQ`'\u8D<>'K[JZLWu'q+ku9dgC4FeM)K:rA%h:p7
%#%bW<<,$X2W2bt2p6tSUG4@\uAIZh\@,kdaO!#)NWf(#;5&pUNVIb_+#oUL`pQC.ift;hU-5;rlIedjH>\ZYHeu`2I1(\5!o#+Y2
%SQ+aad>cIGit,+V_*6>&bM=%*/BK2J&p+:K:Q2]1`+T[l1`@U+P/<?0Kd6dc)Fs6pl3c,ZQT1`-f?ou6A',HSHR[rRS9r]BMXG`k
%k/CBh:RW!JV5:P3h$4i'*49d.*>8NdEcD`j!/d=k.\2dDZEZM8aY$7?VW+EhS]X-9O92`@=ItW(8>[1n^EYVG94IK+,>XZH-PX0e
%KoIUd\f4:.O7%HE77^#bS9F7hCiq"R[*EY01CL*M,C,b'H<ol)3\fg\D):u=M<R]m@FTN=btdh`Np;gZM??sp-;M%;EqTPU6kY1q
%FW9VZDe5].4nO7&rINH!_a,=4hbaV`X2Xg@g43V60&Qq+KrIS*"CQJ=Wdl09#e6,:;o40!_G;C6BJ,?Z-L%IsShueWe4b7)VFW<#
%;jA^ePHU9-[6C\k>Y4m.-%O6OMp8)a23ZD@)/ILh[Up`=>h7[e__,SR2H')-o(H[Yr7^CcCNB_RU1#i(E@u`\-J@qG[)i%_asuAU
%R@6.&a4X#[Co3!5kE7_::E(a_F8;mnafirGfl]<_P6BZQWbso%\![@]QS,p/\%!\-2cH#$a_rfRd*8r^\K'pI6?XktH]m8lDJg_O
%0BJ.BaHndubT!PFF*[(-8aaiFq";2h<MFmt-,5k^hb<]]M?;S.+L%Rud$,iDdkGGA*]0]*Ap"fVU'j\@L:(1p[I?ON+JPt`d?'lc
%Oeu6a@o8(h2!$ISZnr]<)bl0L:%UOtnW0P@86]#g.6u=E.[eaCBoAW@j\k6J<LQ6*:!&^/qC]/m9N*i]:1L.M8CNg+=g)mFCZ71h
%F68^1R^,%3!^>r"IO<K.%2#9o`M'.k;,bPL:A(P3Ojk(DRT3[/au$NuSCVF>eO!,-8Z=`KWKpXd;q>\a!NRZ8eWA=Me)6Z,ltT.>
%Xk*TS7)Kr6@WP^`1W!^?M6f'cBG9pCVT`4JPH?:les(JbY7"Ega>N)Ak-aHB6?Z)F];@bu91uH?\i6P62^@M;'`M=?'"BD?\=$6'
%;qA0%JCmmqCe?4d1`0ld)I(@E9aSo6HBFK&A5e5'?F-p\E7pJmgdF*-Lho!23&creXCXRs"[V>$6^puK9i9>!"k0@(BhK:c:.;QB
%\_7a1SQBiKb.]b;@cu6OS'nW;OkL[=gP5K?;^Q]`;n"3kgQ^u/YNn7^!H,s^cY3d5#SFN[MeBtf=*9UoK#r*!b"X>IVJ,Rk_Xi^+
%oY&,hF"5X58a;.WopjJ'W[r=,$#%YbD9kao2atCB'Yg..i,'Y-WTs9Cl4\CJH*qCj--]ZRkP^?;H:(`H.DS-Nf%uX7Di2?V.E4=.
%jdSU/D:SK[`;PW3r]90=[`\RRgAOa>s(4iQg%k`o@KZ@+,lkT(=roB"G];3;=61#tKbW[L/i63X1l=<;<IU;a'@A?ZZ+g'&.94bH
%C9^>6N4N968mRFE&fg:R*R1l2ZSb!+Y9L9\%S9[-UflQM/qm369$OXjXnjMgV-"X9>FOYZk%__K;,(Y.3L]IIRO)k&f>FSGk;:BK
%bgb]f'_#h&qRNLV:pYu)rT/cKVJrl'd7Vra&,CpK-'F_9PhMChRUqq"$9HF3J(gWGe?f9WGs\iBeP^7bpWF@K$=PebB$JlXC)5iE
%<UH5(nC=NBeg_Oq(&f_m0-)fs4je4O<K_]mm7l9EVEit-RU&kgXs&q:?;7V$hJ4P3[D_uH\pmBLJ732^dh8/a*o'$,YUP%RQ:Yn-
%.Q.GIRo54t4hoJS/b-RjQ,'8k?kENH&e]Lh0`"f"Tr($$]U2Ppq5>U%ZsHMLN1q$rQ)59fV_Ue;rMLsHW;!>/GBW*%o^Ak[<?9+m
%3NEQs1c2Du"gT%]>#!hT3K^JAU=Y@t='I)SV(1&Z+.H=]CT<i*d6F*695>rV<>o[pJo*=/DCla9q\A/ReE,8=ehn31k-XX/$KmBm
%HVHB33U+84c<jK^E"i&_U,CS&-(L)OD!E%D&Or9&;4K*g2ROEhKH//KR];EA&s48:0<XpmS'$q916l]NbGP-tN)XCf=0nU93@EG3
%eFm^YJBg`@[e*!m6DPQVQ<&s;Q58beE,&<_[Ah3X?G(ETo\.fJSJ@6'WQd>DC$.m#)iD+!D;7,ph59K*S3HD!K\s)Kf)'53"0TcP
%ek%JEaY@^7m>Xf.N=p?%ff[NlT6?Ao1S\V1pLl0VWL_Shb^Wfc/6-7^206"Q-Z#('Y%A0r>f'T!]<%9P2Oh#'b&;'-_C_V/XWVE.
%-VP3E^+1!q'DS_2mEKI^[7Q$-)2HJl`48:UB%CHB4`Ys#A]_N"AnS8BjfJ&;>8a/Vl(j<odq4p2HqJ09s7Q@bft"KD.L3GNXh-d)
%\&nejAdm"^(H6DtRp!pU.F-1ck]Z+\g,/+F-bGe[]fsuY8dfR5O3_@*\!#/Yg$<^YmPB.YbmaHFFSkV9NSOGs7/lq](Y;giX82g;
%@KJ@."&4c,3C/:pqE\=5@BHIpV81I-C03.Ucr>SK5[:%_7+'McQkd,EWF7W+1Y.J#</MYim>a%b+62<R;a"YlC8@h%18A54-[4"g
%7VSm$ZmAeBqCG>eQ[.8NVFF6X9kI.HVQ!MC<jZ!SJ()oifg(.eWRir$m'B.cBW;s":`#Ra,+?n2C+:4*QU@d[PF<soD+UV%Iaa8(
%dlLX18jfVX2RQk[C8,4g'"j[\``eYTC?fZ\MfUb@]UG9rlNP-T26ho(fUPK8;pfDNqeVg"g-erCWP:>=f%*fDCMLYe(Q>EEjVg1%
%F/!e5$?o2r]J[QO[E;fKO"\_5pOsK]^SW@9>5c66C9XC'3$Vh`<'+p^,-D_ZS16/"Zl/%[*#ko=/Ub\o,:4:?PUDq=Q0SQ)-gI$m
%S]mt0AlF8eXjoEZm+G>=D<ci#M2O9W8=Q'ElNL$2C8_Tte2`ZAVBY>0mFJ_mlU2JrW?42L2VV'*D/._+(VH<;j#2%%gS2;SL#*\!
%hfZfN&.-X/DF7-C:3sFL;`pgg]O(TIdRnD6.^oSKRqg2b=m*3rFAji=7Tk%4L:XKih,Lji.tq9nAiCI5f?&#.[(@8,hfFt=1]$')
%V=F5aj@-ntTl`IGMr)r[DlTpX,gAO<\@2Uuf87CH9(K$?o3k+Y4uAPkS!s*C!r4E&rKcYr;kLfNjknSc?XFp`;WaWLG@8-U6*m:O
%ZhD4?TnI#XKgu#p\RH#mapuZ7&F0]n9WC`BlVOsH<\u=3Zq=cN<m>:mfP"7DQn-oG;raWU%:lV`8@-T4ZQdN&ng0K'-Zr:Njf0d\
%"]Ur@<gn/6eeW8)/&&B*_mBfn[&VD&Q)D1-PYJLPbtNh]\T0aUg,mP/4mP`:<:t_ZKnAHE$I)QnC=ar(.;[M4Ji#'GPeXQ9Z;SZR
%X,A[n9C$%]X1#RU:/r%-B"b.Ri_n#n<6^k3mIF<&8m'?,=mZ8pc"^K>Fh?dnHo3F+2/@ul()gsg-#;'b>8$fPT.iG.S.b0heEGa?
%0C+mDh2KA0Os&V+PeF)g[j&6S@<oR]Fno2JIVlX1VD_g\7<#s$?kr)gPmlhe%iZFD9f9nUL>Rm%')ZMn"0RFc((J&*EMPN>\6i66
%C2,B'eRt=c3Ajg/ejr2gH;[K!WEGXhVP_n&qUKnkXBJ]+V8+r9f@ACEC8ug/8VT+q`L9D0F0]?dNO)ds/N_:RC0Hlf2p/2_bF0ns
%lQk43qJH`g\2i6PVT)k6N,H=J?.Je;*8XXTY=eG#MX34-psuJ=<=44-/\jC*^kU!>;ibn2Gi;'TYb?n5-_T*i>AWR[Xqu'd'?/"h
%2WUBiA6X3IIXT@!1!<brZDE[D-`G]phe_S"cA?j*'gS6lTked>.h0pm=Quoil)Fl$;_)u(@F[u([Ahch:>Bud"P_FbSJ.B-WmN_H
%CKoM@@W)VP2'i9)o`H:4rGPa7n+i7VJ>?!X4h7PdT87Y"l!GX,2>L;cqKk/9rBULF5HZ.$QEL_q8;c_-3O]#gnb'3D9>FE<6d%<B
%ACnu[1\O"Dm=.9E-ZN,EihFbZL\Uo@CGXS\U_bcdZqCMl=d#%Qo_#LQLd+bOD8Xj2(N/@&)*8@^IHdp)m06G"qDtf;Xu*96MU^_>
%?HeS)$dt<kfc]@m2qdU3__'Q\R+Hp4l.tSe,p:0N%gp,:V"HQ=>Aob/L+2"C[@:pa.6:/_99"g2<==t0oVB-@9,AfT\'M_aDT,ZD
%?ca!3jk'FC8WPEFT7$"q6Q[)YrS?HTs)n?3mpLS:kF:dUDD/3^0!Bae3_FQJ#5*KAornAm$ic^]j?J+jh&fs0?H#G5qH(EbIp`+d
%r7=14o_"hp?=33jcS*W5/oRo=DEk5u:L>]&ql_q[fC;'H`>?2#r;PO.`S99%rZbbEm.U-hq3poI0!AU=?<m(/^%hOJYOBL2M#Y$_
%nB2"8j)7rLrT8<^huEZOniYX@NR,?<EI.$LZ`A<7ih%hUJ,JR!rl_Plo'6!6q>1-DLW9;ao(Cg7S$stT^8n,JdBJ+;hPbqk7>!d?
%hOkCkCXBCP^3Xtqb>2cSeA_s0HlXkGf-FV.X#Ad]s*lZHmnRcW?,)EgG]L-&C/n"*JLb-@p?q>1UGoaJ5;m<0@p<@0hVEY\mcrg.
%r*n^#P++DtV".GGCYm&?]=iIdmV7[Y,@A3l2(;#O)`R3^ZaU`(D_M+Y]/\AGXADR!mAd.3j*"bDHh3Tq]<h5J>C=Nb4hGIfp!'si
%QZqV.[eQkrDgD090!D]tl/\]NQ`RakW;G;thC.Y(pYp,ad^/)TmiRh8^U.6PYF34j/JK#iC*%hNoBu>MiX`M2^\i2!^.%q-C#88]
%\*cD[-JeT?EI2kQF1Z_8`]JAAAY%\jq;pc+jkXMjegGbO3_/LCi:kPNITUu?LdM\mkU1A4%WU^H`1cl9LOR'ZkRY.8d0%/[o?HCO
%6R96uOm(pUdXDFqS$,_F5kGVD5/*<D&;VA/d6f&1H@\3c7.!n_7(6mcIKcH9qT4Gc>;^,5K$fd?pD6ogrcIl1k+A:0BQP?61YI^)
%W'@hpq"q+9C\H=BNm'DB=5MfIIX^hdndM_0N?;Nb[:=F@%qk@f^:cY@5*6H55?E=*d<`LFK)0dHioScrm!>jZ\F".@>jTWPGk8f`
%D_LNR51<-6b;J94D!>9/%Ti/F61d:S\[o?Mc[Yp>J^pX@qhM4(^s[?#i?N]b7_Sc^iqtIuepK6"lt^E47XFt"p4p!GMf6qf[[NDD
%]64scG+1EH%f!Z:ZeH;rqW6l9id-NV>eP2kc/#t=V`34Gn'4+o[H!g))C?K8Y1n>Mlq*SJ\nr@n++aERhPsHQZ[&>FBBL>]2`I)T
%G@)`YDeH$7`OG*,r]5<VHg,R!*:C'b7kECU,R6j*EB%-W_kY8eEbrJ#r4L%gWWrd\5(6;sB<t$bb[.YiM^A>b*NnU1bdo[Qgn[A^
%J(F2hfmTJN_;X\Mm[LQ+F]%'<Do-.rQZk[-\[^C'ljfNTIYRM;JW>5uB=c:FrR8aQNu.$3^%A_@?>H/)k^:gf3"WV17'6t;Vk,N'
%bAH+A4TTf:R>LeAmlpX/X4*Q-X-;:rMuVK.M"Hd1o^q^3eFD\L!Ol^F0AgWo5Pb03#*;WEPda)>?>n5c*IbYj[qOYCiRaDtB3R&e
%p,EEYe'7855M]T#r:j\Rj.rTc(d>VZE/UNp4]qiYD?B05$/C^jnEB+6XLCe#gln"AbJ]lu=SapodXbO!\Hh<>Mbe0\61)i6Z+2Bs
%2f$>IhYEc=8)4rCa*nDLCefRH#__!*J8u2,H(Y1B_oA]HC<M9hh.C,4ZN]\)/*JF"eXK@M^"KDEDpl@:e^$-<$U"CPm/$S<lJ%5t
%Mt='tN7C"6e_7cUI[L#[X^/V]a8=Q]bI>5kSXj-#\[]BNe(HC$\Z*8&MiZWj!-Fj-[;M-,mpbC^C@]u9S'SieiI0hRpL&F*RpBu+
%J^]&""ZLAJSq:.DaL(tG?>B1PQ/$!"mE9^\H%`jihpLR\g,EqjMtHPcVa'h+^="+3j/MurH$-M0MsG,%j1kE6^:W(85J,U()?%J?
%c'p<)M-'/G<G,D54SuA&6(BPpGA"D>X[@-HcCF1E)tuKf,]3WFbN1h__DZ>blZELbP9]I=3t0:kh[HOIQ$<!ZS$?ZpQYtPXPHQUB
%0?uIO0KMG13rd[RlRggNhQa+.?Jf"+^<<(<T>,aEDEY+616g<P]5$Eo"gO?;g\L^=jk]%qD-C*1fP,GLG('2KCq%j<qlfd>e0"HV
%O$;VeIsQL</Xj&Ed*7-&oQUu9D*FnH=X0LZ+)-W[m2IVL"dRBh6Efsq83/Gf50JInme#o`,AEWA?uHlR:N<^iHAnXOR^@"&omr7T
%DXE";oVa[U08Yge^,SU12I"28m"/#oOgIQ@p(Z*3G=L"=PAXaAUSl.'g7h19k"S$37aaJjO6n0uC7A"?qpf;F,J2ijS_K5c&**4K
%<-7hH=?btRm.(UWP_A>.5JDG=h47VO_Kd)H?Mh7kD1McVRD@G'QHMJu80&J_#?V91@3J>3gUnmD$fPM;4=l.]AKcG@)_D;MnDFlG
%q)WbOH$i]u&'NnGZO@o1_1Ogo=9];Zi"s!6f&pDD[\PuIiRMo=T(irE5S)c'p>8n1Hs<RuS+jk[gH'^d1Z-bBQiFY,qW@)0_lG@f
%:EMBlaE7m"3C-WaoWR"g7&sO8e]'t5[]R1.p>X?A3r+Ck<BiOClKkRONnU4=q]i/:(@!F+/X21ngF_Fbs!n"2rqTRl%uVf.h7pUO
%IIY5:p#Qt09",VO>b'V5he$8s>B\QD%CaP/,FS2t(PjDTgt76i;JRZkP"C^51?l'SBhu:nm.XTI<r+u'iRk/-qj,3@5[!f!mF_Ds
%C0r5![TbuiA5PJ(H1T5(gZUNpjkZAZ@?9$&FbB3@%Mqq4;"!H1YrQFko,>!C*ZSFsZT*@((9QP69j2*$U.&9;l9F`V:#BF2XZ9.I
%[)h[<73C^/n&ldM;;9Vbm_tee\T9]Kq<d;":N%lR[dXk>S+;"LqL%(O4sZ\JlrtG>k<HrEr0EeTNu9N1*6oW9k8R]M31N2Qc6!PZ
%5Mlg,j*BI/[G>SF308'.Itn.%6Ofg.Jc&%*qM,1KS&Z"s*tI?B#P*o\]/q"Rn'g"\,S-t`?iKQ4].GKZmE<)GD7fLYl.@!U9g*KB
%EudX6lReR8EoX=VqVgH!lK4]X2u)\/a.MeZ"\7a;IGVWMbP+1!Tp84Em<7St-9(<CDVoj)H[#?SFK;lejRfSaGJ;,+i>cgT"-30O
%E5X,,4'T.\YC=-t\@DMf3dMTL?!b:[r:/pMpQmg?(O'6B?G-:&k4\0<a3?ih"2NRg0R"!\DW;fY:rWU[GX*-2Xs%.)b,G0]c_8Y`
%kOQm0]/=.Z-f^D/f[U].RlBcp.fO3Fbc86ca+2_39?+YPA%UAB)<n[7ia8U3CG.o/-OHBXrT3$$mK^3s3S>X'^0_B@o%@H.8)MNI
%_dE?-Qfq^lK-%2P\[1F9^0fughB"4R^%24b*C-M)k]?fqmR:@\0a['.&1D!`#LM]83ZUJ`%GH(-SIV=A!He/N5c:Z9_E9E9aoP,(
%q7&W=MgV#2[(XK-Sp!m*a+.n0_!pjoL'Mjga1m4BTffV.l7cEjO6h]abSDckW5Iu#79d*rpLY4jg(fdR0(6M7]3L-[n*q`P:kdSp
%c1iF3p@pT,K2gUchi'cPE86chH0[%thtH&^7,)-+hKt*fm3hKkT'^%F@[D$&eE#;srTW\Abs.guiO"5Tfgj'[#B>^9F"fM=<'9A8
%m/Afq]TDXK%pLa@54!1dD:,(8bOD;rs4W[u@UI^%Rid*(HZ=i0k4[g-G0BfuYp/UVXnW9.r$;Oks2J/*l%nE*NRMN%BA&n#3WtH>
%&2YlcrFY*cqU<E0qHc<toC]`L.@&_`EW<\!]a^5^?,!A:*@\ICe$ebsG3H#EeYFd%l5b3#,:)l6jRNhCbQ3n&;BQj,J7SAp$h']-
%,dTpt%Znm8OuYc_O*[n"FM.Y+`p!KFX:3JWP1^(2#!q;*fet[^6cf&p6H1*bcd)")Y5Wfi\OBtZgqIJ]PonaP"4'1\\S=&tg(NN#
%K@K$8R^@"<I<W?7JCaI-D_GGR?Mr])(Y@hSKT8^7mAd!e87u5CHh3T6m_%FHIAX_k=&$?Aq=a7ImX,Io5J_,Sq;3g.[V>!eVENa;
%T!0tPGJ&2MT"CID2ThNf=J^JV]m6s'=RkZ^[Hkr8\33ioZS+]0CPrZ%T_#R*3tFAZ#G&&(l$Rn/m-ATYDSL[F'j$6?7S05P#gkO2
%q4:t&#@3qIp2*#C<*=?>RHV+Sj7\Dp[me4.KBBX3KD(&\2`^uCegOrH:2TF:NqWJ%k-"C^TAGtFReMK]"1g/I5[\Y:g#5'OU!EfN
%J`mmeLi0V>*^\7A.,+6i%\`(joB$UA5)./G&;iZ':ipbsp(3*F]hn@C'*t4T0Y4e5bC7L+S%%u#M]Q?T6S*P>71ZZe+VoL1E6UQ-
%=EL%Pm8kibUn1gJ\lFsf-6E,hS"&"ohO\Sh4s,C(V\b:Um5d)YBc?>0k1>gJFkJn@4QsBCIe>Zkm2g@TG,Y*(jHfLl>g4<AIQq(+
%&,PMfk3D+&5JOro49,,WKpZb,3BP!gqs^645fI[15$Vq*n>FHR2,Doh-hm:Nf;_"4i*KlMmcF3:Ds9@N$O49*QaJ3qoil15Sj(7r
%@lJc.!R#s<=T2f7-(h!F^NCR\4]skTD:cKR(n3$IV4KZ[\UJmL[]Tu#,d^mlEE@#Uk>0ig03mH9.UI)$_1l;UGPStn5I*$L^HFg9
%-GGo'[&Z*&:=FReme2FBo8>1>3PB4G?15&c2p,sn9kXKIq<$KkB:7k9>tk?KDGO%jc>TjIG&\8s[2m7nh6LNlmeJ.fKs).O?t[]B
%p`eLi^.ta'_6\M?T&n!,2;^>Gm*"rn55VM]fTd]Q'S#YV?Z*#"[dgJ$msP'$Aq&q1,Djr4%kcOFFib+7ftep1pKlq8oX4.q9D5ag
%n/p\[*W44'j*)Q)$Qf<TZFOK<o9r><_83OkRWY*<Ud)&FKUT9hlpZi@=PA8]iQAl'Mq1^<-7uO8CXL]\<-tqZ5Ac/Me`GUGB:%r$
%`')t1cYbE)IX6(?:">uUB)MFj`BDn5[r="oA2E):7>K-4O+OG2foW]"Z4;6O@5$L#]m(VRpd6dirG];2a'uVEU[q(7@P?obP8EQ]
%\0H\*E%(^o^$,4)\J/D22"mVDk%[6oH=XYD*T!=*a).t7Z;:@L>'0$/[f0;Y)n2Afh-u]4lh>)]fU$IF&+T(slUc$lTBjXQ_a!7$
%FT7YnVsKn$&IFX+24K$jgl=::V>!F(k32'ofmGDGD't>?b<Z,?J(BO-A$G[iZtXl"EF6F;S53P^rq;T<l44lYa1mX^e3r*4YAEeu
%g3rkBeF=;gB*VLfkF^PYhUVVq_o;#dbM,O>ml\&+^H;=AMilmEe5e4\5:'_kI((CQ41T(GX3f%6fB7Y>bN7pO:;GnokS@OV'`>jW
%$9kUAW4oW-n78HX*X5u5#Pd'@g%F)A2CUr`#eu.U9lnu(*9X*p_L6HNAH4r]gNrpA%U`%QN(A)=G'.q`]cQfE4j\(2p+:I`#$Y-(
%qouH3Wp\Dqldqsg*Gl:`=+@rpr['g_&lV<BIWFu=j`UN/If6<3s!#donfPXFnE0V;X8"=0p#;GO[qBV3?SDD)G'X&bbs-^PlZ^,C
%<W%@&i\1)!9Q'^I#Q3n;a1qSFB`$u00)i6QJ,d9$nbUl-^]!iW^H)_Bar;-48'2iVD>V;AGf+OQBkp^*l=8k]>C7HpKN21D(.[("
%HXhA*=72-hPOHoN^]"$eHKFhZa4mrPQdMR3..]O7P]cM%<(4Z%Mj)fGr`Jj=\]+@,&6*9X8*)Ct+6$(?8hGAHg#Lq)ZhR%<@:bH(
%D=o+Qfsl+eqW$3@]BJ(t*=o#kMj*a>s2l@+Y)dLls4ls":Sa0Y2$C66Iqd`n&')s6gcEATlNZ4GO8F0Q?0"4_DR?PSnP0gK5j?'G
%2eZm^qd\dtn'oC1l80IV"6RGA#o9o9f[\I21J`Qsk!8.!F!.p7HJ^AbUO-eC6E/utQsjuFO#n#1.#j">4cW:fa*nj^kC>eJ>5)I!
%66)&Z>B^Q_GAL9L=KZib;U:q3Z0P*].D3;#)u_#d@tP`nYuZ:6)rn$NE>"gYp8WP2UtRkj;)E8"2$Pf%C^g"+#ffaP6\n*<3dg"X
%%q9bL>o+:rFWC6ck"!g7/Ygs@q*sOA+57l-BBXa?7Wn'_lK.WX5LZ0OVbQO<pt3m3eR@Ukc3Cpur3++niIPUdDdL,ps)a16nrMFn
%Xtsg4cX6Yn\\;B*E23$I4)??\nY]aok1*=V[@rYVN>^gIk&53ES8QXK5%(sifHS4)R-\F@42FdA9@_(J:@'KlU%p;>kO82<@I`+0
%/cP9IB[3qkWZ?#1LA\^7``TuHf6`GL`,:T&DXc't0!Zt0\,+asBb3KKNFgi@7GZtu+8\%X:ANR'g\8:W21?PJ08qE/S3eq&0)buJ
%>$F5b<k?mk#<5V$(-._"eO07_jl6a@7XfM7nTuZ)RX[6f:=Es*#]cX)LRtBQcg&Jk0S59_*VZ:BnV`5n)b8Y'QC5HCZ:`&)a#h=J
%MLXprH!_X0'7=.@Wn;,mAo1%r4'!,FZdQPMWI*b&2L]Z@bP2Po5!mrE]>flLInT/;8u#Hr24aA:Hs3.'`%%BQ0%dFicK/@g`#`7M
%bg%eaH!GPS3t=urGI/j&TQ*Eb/@mcDSE\7,q@35FQ/7d_UZ1$NC/I^.rn%J?[\_hDBCFP\ZV+QYJ2@Ksl0'>4Yf%#io^4/pJG9;5
%n)q1+?Jg-[YrFnY]"7f:J>1$)mCThl/cKp7'*CFG-uiPja#EOhlXEq<n\mT],1oic_HV*@?CL'BR==ClS'u9GJ*c6'\:*WAS62i`
%hrDEbT,m+MMmsOKJ*L%<]]iFTC[S'>gi$MYc8XY['jpaqorE#VP)/.:?GZ5^,s,Y-ZLu6Zs*PiRd+eY:nJp,p:)8na\+)$ce)bL^
%eMnV]To].)9A_,MHJa_jFo?3o`p6Zkk.($gCa8tu1>I0pH-4;,E#!9';<oYMXMW:bQf?OShJNe*?c/8p4inT^!Z%Q@7[Pf9oo.c;
%]Q/DL\i4piBruR+s#SE<5<'lg+$Y3VN)dR`MY2;;JpobI#,N9DNd2ko)1nsdNf+P4IG^+aGb0A([+[eu<!r(4/^a7[(XjN53oni-
%6q:Qa#Oh.TBJu3q\2q,`DN'e9E@NS_kL*po9jbV/=4)G(+*t"-/%pf^N.2l-QGT1%9@QgDWO*`e=27"=AW<0YDn0($Vko5"IUjJR
%UN-7,lK,P,%0;)8%L9S=l\D=q^cE@HQq:AteZn^E;fmZOP.];LYqle(_o`Trio2FKhMIqb;[1!?)<2oY>h[$d&CT.j)Vo]hh.dP9
%dF_mfN>=/2pcYZOUKc%dABfP"T)6%X]fa^=7JF[3e1S[Z1,%nrp"AA-F$#&@rI&JLhrfG6,\Z>pn,DhAgRlc?\bKCKAZDZ/q]>^*
%='X*:nIg*F0b*pVo#3*`piCEqq>FYRcE7qtr@;W3?XLHoqq(/ckn.4Vi^:97g%CD-(\N:EN@Otuq.0udmOiCts8LR.[s%1>@e6?V
%Gjd;0E(]8A3DM&Hmk52m^V&uE.+9f`qo1Q'j0-Xjr?F2(cS&Tf5J'"(ouH7!rcIkWnhnbm34sS-YD`!rGff1jds7n=$_XV1f&cZ/
%djY%UBm.He(T3@85u4?h0!o`FC*-jFmX)fh/&Cu-IF1"*H\UF&-A"X%2%1,&-,f0Q0keW_U7c1='aH%#@ruZ`o?Q26a,:L7l6(Tq
%_TTGoRfT[p57V[cg[I]HN#$gXbFM"7L&IijCP[>(@3FrIX5X=8!/qfnJ?>i44.MeR;[l4a$u-=nD53t_k[2A<9E9^Za,f'fUj]s;
%d(;e-$&FAU7M-/@gpQ)\f]^=obc#03Uhr/Q4n4VcqqMRUIE#-3N1[DK;rUkKpL*-aC4FAk`7T6@&SgaZk^g7&C\:&K_Ke21nJ\I_
%p\&TpnSSY.MmLG(PWL)a2q(>A?8$A-7.;7*ne<qJq'Q3n&Agn,D1inma[D3?F`pl=aDbu)@>6'nD<2?k_UHO!8>$gG5r*VHYd51o
%)=@&%YLQ@l3(@bkE@+@3l=14BIufs2T8X4/,?OYW%WM]^-N08c0GqLhon\mLdQ?JY5V8""%R!;>NCHBn),l,57?ImSJgJB),GITd
%+An8^duQ^!3,QYjhA6:!TI5f0I13o=r<i'Pq+`1226d0-M_C`KS5kZXWb4f>D=#"?b`+cUYe-1*46P8h_+Ul[Bbdg+SP;@X%/<kY
%mQ:q!-UiX+`bCWuZ[.WZGV(Nr_<$,&!R3Al94SpR!52L&Nt2o+R2E:U>'l"#V)'c3^)X_J(Xm&70+fu$j1qL4gGk^@kkau!fY_X(
%2)#fDRu5Z;rod`ao[>c3!rAi!N4%LgL2DpZOc*;tVtH"N@'P(8G<8p.ILX.u>YC%gPU:rh!0b(e,>M8u2<,@tVKJ4[$]Af-FXk3I
%^7X2F0d_INm"e'g[tig@?rc$4"k1>5#l7k[?g5q37`[&X"f:='Yomq`%h^3ZMk$>;f\P&WXW5^KB=1J,]lC=G"QWF#ACIARSCmPF
%GRnpqUZW?ITlR%N]>We7?d#0%`>(u'WAGJGBV5GGFdhdD<fNAL*Ga\^Guu/<?HsOM:5bJ%DoRRPH):9WWp=XU*T)of)4_kU^kq%.
%<<C7KP-$RND@k0rO"1\%B&#f&eEZ:[eWYt5S_=mM)?a<'4rH$&6Yp*r=*q>WSYcp=#k?onkn*$sb>W=TSd4l(G0fOHQd\<X"!CVH
%@\7Q&qdaYJ*1JgYP`Bg2((S7Pk"!9sd2DTNrj'A.g[$Qq9)]I^Y_D>R,tJF`O%))NI5qJ?0cc40Z]$2`-amA8+.'q]XW39[B@6qM
%Gie3Xmtn7:VjkYu>/u&,;?!qA;`-L-q+DR9(li&=N@VN&rJ>X&+l3h0cLPW.:5s*S0"5i<M]3?gNt_B)ET>XV=ldoRIT%G$V;c)$
%(R+c``k?f5K?e]M<sbmOhM\/!\DX8LB'qJ/#75I`5-[g?BIA$SE+*^`Mjo#OX96Rf4tGXQn"h\V[LE_K<<u(R)"fUmP`m:5j/tS*
%Om@Zo(dkM=J++P%D:-1.J[)[lKXL4f"Nc_r66E6F5UQE9""PRU[rurW`g*/1.cIrXqZ0C-*r#=E._0JM=,k%+S@G+*hP7mi\0!\W
%"="j,j2cB^!u-5EL>\P^/0idNc<MsbC$gJ*djcU.HBmr?4mqphOdd6?5&O;MT5<:r9mh7rV8Y.#"#:L!o]Y;[g`"eH]M9a-mfDS!
%-cXO>;KtQ<9Pe\2'04=X2-MD,0d(I^W4?Wn$'Z9ng:jjS3RNjM0kd3G.o5%;B<Ag;FQ\9r_HDe6YQ8ud+2=fU$tRG7p'MKC1'1]n
%'$JE8)\UIFXqiW7A3r'jCr4&8ik#\:L60Jf<_I6?+&N*Bclk<';oRrC?[LsA-?8,g``j1`)Z*Te2e`qH8n+K-l9!NlG]%57nuWP)
%`>L_8@D\.bmlq(6/+MiGpm#(FJIL)qjCaOKT4sK\h@6-QQ&+#2Y>ZUaNm7%*@b8Jp2Wu(@PS%.P:Q>HX,&]l!)7&0)q?AYK3-!qp
%6gC$"Tg[LuVd&r24o^]%+>,[fp3KS3;Ia/Q;n=jjmEloo:9-d'lO:B4CPW,@R1!*mW)2PGaJeqj"nQklS)>,YVNK!0-7e81]OHZ:
%dH$5mP6mp;DDIKsM.7h1*p8j*)E+"82KkHDC$OiKC(!H_:Zf/ep22YKA"3XW=#r<j)6lEtiJ2eDK1r2_J=ar7&rO^?\O#rrLQPS5
%Od!F=U^n+LT,MY@1NRj\:7fEVk%/dL]K.c#pE"?+CS?f1F)Y?GniiNrdU_X^(C!]c5?"cYMWlQ?0=ab`8["Oq.a'L!HMGMmpf8?>
%jb>V+L/P_E^<80$@ir!mi?6o68"SM@1pZ`T!r_o1X$R]a\cHU0]"TA6`P3Qs;H&d$i.T!\'<d033\Y\G4.cdg'cTuRc6Ye"J%A9p
%30G?<P\h7%,+FC.-4K-8W5Fo.Do`4!!G<@Elc(6lGV9=rLEfl'K)2VXnq0O^r`X+W2]!Ll?'_SIXep/Gen>o2Hc=$PYN.I`G5r*,
%UW6HUj&@"O_;ZkU!2XNLA?Fla:#ld;;bo2%ahfpZCN"<5$&7_=Do@70\,p/%P27*Vmo&%V3Hs#YXb36Dok\:;WC79EVj1,u2`8>/
%@7F$>Y#.&4F%C4s?@V`@NPbD>@4N4#AgaJ94,gbVb7):q#BfP#27H-,q8$2/>MSANIISi2pYp]Wo?Fo*V&P.qkj(B,#!(;1bJ\VF
%iCY8;-Q&J7'-8r=+#cr<?DDpYoM<s"P77m`UGn#O$_WOPnD<HMkWd:ZQT^0Yk0;'m]R9O\1G@a#oh>,/%Hmf5eq!)sQMs[8eD_28
%5.i_`8:D=-%9P2G(9&>PrCF&Ga#`t<4H')'O]o.b?<l>C!WP#('':/O173,4X?'0,r,"Uf*oofJ:P8dg@o?^5AHr4Ti)RW2#,1>#
%aJ&'>_AEgm!P4-^`dL@/P)dk%h<H^tQu*(oI*`23EEGlul+9^8h7N6aRFgX,#q"[jDK*bN]Gh)+4ji+OU4Q41X<kh-`2##*+.BY_
%SE6m*ISVk=Y4$AS+b5dM^#+@m\D-fkHgm0COLRFW7!-g6cs`CMZIu@C?^AN4XgT-Xcus/'E?4Fdf42IJe@MD0-8;G$4gruXFKMuR
%#$c'KI:PHep8+$n[KKYh'a/=T5pWt)^jB[2<^@4DJEL[>k>t1:4:]e)Re4f,Ze._N6dF?U6VO^[:5s@99TA7Ik]E[k%YI^>l39>G
%;sH8)M^R.Cn>IDX#s6ig:Ylt!EdSCUUi..#(ag(EF]\VTA)o1KX+HF%8T6FcE&>@=6&,Tu`gI,i/0qBiF$7$!Nk:AQ^kr+GYV7As
%eI_I!!Q(ABa<!hZ%61ERBl*mk<X)?s;%!k>!DSDcJsMX@eT%Yr^CD]\/#Uo1V&dX^bk)lQ%V\KWE#E2se#D8O$*(W^(Xm)]ciIc'
%*s!/#WLi:(YVWTtq//sa9ZuU!>AV'%?fEV;O&$Y5eLOVG.pl<E9ZSaJ78-i/QE,_JAE)36MWQmb)*fYp]r#ZM3"3gY"@!)^XG&E>
%$@nfZ)u8GH-j_J\(pKIZ0uR@CH45Y"<2P]lWol@\J@F6=->&j)5\1]*T6[<fj4L?)Ra+r_P>%l:k5bX2S64mV6=AgCb5mp1qS[IB
%S:omj<*>ku_2#D?nbSM(mXYAlQQC/#bFuDC-dKBOVf<G4I0'DNl@W)=hVt@#.`$e3O3ZHKeBlP%DG1nB[b$0<6_'i:A[U)+1Ii:!
%]OBSiRdkO\/QZs&o?K/`VHY`GBA9[KO]:24^oZ>hj*,<o&W@a?>5Ai7D;e$iR05F!"i>bE,Xh^#["VWqiY91*&K;aNLU^(c_DaI$
%:P7'ZO<stFihDS,DODZ-4l%OF2(D"08E9(Bg"\\.a!Ds;'I,*Ocff;HOD40W?cj7qQiuS0i[e,AQdUbda0][I"?.*$3>e:u`^+XT
%Q,dTfPnIATe>!m;OW$8*&D8b>+Pc'[Pgb5<$Kg0bFarmR$1Ae(h(lq9/XZI]-+Hcq:/*c+`jAKs_]UWZ1,1g<7"<-Z)$]Ed9^KT?
%84ReDI+348Y+c:W/$?e(Ne:Z^M)`K6c>TtoaLPnJ`e)JlM[+jdO"eO,ObfcB+sHqS[pu%^Vb8]>**Qh*K6InjLqo2UMj[&l4\d^?
%dc;X3XsFQEdhlc=K>A&W-(qX9\=qq&O_NPEE#rVl:o>sAPVt1epFkRlDOuWIhE6.18G9cag\SH^kt_M[G&F+X[]-1P/"$Pt*JC(L
%&kY#@$G#Vl&_5a%I;\tL$Dm#6-riVH,DIm5]#H0M/b9@.DOcWccAE,<m`Q46+O`5$$CnOTcb'cV\Y&F2?QcogMt6$r"gZ*Eq$V<X
%#<c`+XEdCH"Fe2jKt(OR5?i=M,PcS4>hYs^(H7p!mM+&MB53;$\_1mJb,Yh93dTgnRePgoXs:[n;2qmg_2+Rla,E@a3HM)faNQ_k
%Y^3TX9DcOuEeL)4?,&9RI+P\kX#7gd*CCGP,699-LFdn,D)j3W,g0SOHKNVehS9NWX;GE%.gT:p4,Z8Z\l"1A?H1#/InpR]30!A@
%I7aaa4EC9Vq+6.F2Rj>I<PVE(EQn8c#'Q2smGac`80mquBA<05VRmmNFh\RL0#eW_6#a\\KAV&]_)9&R6HN*L%Vn>ME`eS[3fNV+
%epo30&SBAeUkd.s5?K$qq9C#o8'k[%!N`KeS^C;b=DYWKa.EkQ2O?Tbj]0?]d6/BqgmU1tE*/9P*:YCT0j@4om%B)DCVhU0p5l?4
%QX$3F8+2?'Rbu"RW(F;\+AamQ"U7W@,hE-.V&7rHPB?Ce'h*R-.#a!GUIk*b0t\4[%`Zft5p\lB"a6aVGlW61R?K)l4rn9YU0@c:
%l=8T^0I[D63JEX<E$:>_@u"h(G/4QGk1KBuAV.B9>8dSDg'H\sSk79qKCUMKLi2Odo6o&H1g8N\>lb0DU^?7]]Pb"6F6P$?PK9f5
%SZaRKmda1R&kSZ`fW?I$:!dY$PP@hr-0hNV_f<Q;"\#=&S\l;AG1:_rY:QJNSo+.`D(jqs;0O1p"40[%TJ7l;1`,:QNg!9iA0@Jd
%KQ&X?+fPg!\VZDGZm;Qu-.+UU33QG6#t0M-$]ki_aIk(2T0W=l9[tIu1aX_G6>Vh3U!E4mQsKOB.6LdA]E*"jQJNksN2,5Q\4UEi
%IuEJmB6%D:\kWr>Y\6D-ppW4?&t4o=bFS9W8\1?GHN42h+G0^(+?)8g[b;"SC-0<e42<dcpUJir"1`2"DBPBCO9l%QI)kbZ)2E8N
%#J=0/:l^^;)DaG"B-WhDb9QO2Z*Sn^eajV.LQe(YFQUN6%*r5ao6g"8f%pfX"=!@d3m`MpX9.UhKipX(K2R?'IG?K$,S@d&AJ8o^
%CTJ`iPdU%5<CC0,ic7:j?8>HNQ<pofm&_tmH^_5$/sY;1*-XA+O_p!>"S=@1a;iamim/dsc6`U'mK(eI;#%3soOp&rT#Z<Fc&t@e
%WNSH3OC2+@'Ja"[QOu[NfI7+>]*aC$0L^oH+C21_M+/_?1o3lPF<&X_ilH`]FH.!Z;UQA+guq>i+.2S\<ZNTTO@qh-[uf$UM:r;8
%Z6!.$T'+PJ=9W->,lcmK*7l-#gu3p(GpH/(@0"\15.VukM5+r?6:@B;hC:u.cLW_fBe/@lAF(N.4$o5rZRK;POo\rbk63W$q[OVP
%_h0dc(JN2=16U48j9JNO8B6.C/$KeG1CunY21i1=E6K1K,DOEd:t8C\7kbg%15u#oY8DS]qhL%bNVuP_Ie&EdHC3*1J/CJ)E,F9O
%V;`C"e6`%1o=dqs#N7iV@*sBFcr,l(keP?nSYg<.Go@e3'-P>'UA#,0Ff/<]mU<&p-dQ.e3:1%BRch\_Ql"*Ao,#-1mMQ8B[DlE8
%qg/4_crN+4pIbo_a)r0hN77FZ'fR:7G/)U@2uh&UU;('ji!H0\AraBi-QWgC-+p$g(@a(VM<[3&:o7mH'9?efM>+e=C\_`8q46S!
%HI%D#0S)tQJJB(<aP3T<0L8;j2P?.73>dJ-h7U'Y%Sle29[XLM`G=VT"e=C7Nb,QSb`pYnj#@%AWhTbolY`M8&GbQX>d$kfiH'h6
%E;HM%S?.-SE5p&&!Ij=UVN"$i[M$f?XS5F<X#l^e@<d`0"'SK(c;C?,\BWOUn6XJL<5Dkh]c3!7JnI55Jt$a[G;?[?/R/2F%kb+\
%k&(dTFE=q:I/&4gl195KmqU^;1iS_2d!eB"*Ou[\F(X1LA1O;2=-ErjE@mh&)5?R_\(I)#80YN#kkjhpWR!t.bns2>P?((KS=hn%
%i"-;7QI+,JkaN]ub>6qK1DLI,oPL_7L3eZkiNjFNe-gqdaV/['i%Z/O-HX'q`)FM>@/.YO$(Ms+%[o'OSI>^!B^VB&.2og6n:9H:
%IllfPNW1W@+IGGS+TS/C"FgE%)F,;U.YpM_T1'`p#GI2$ap9_V)ifR=4!7[35K&=#oYDNc/67@:`W8e*L.^Gh7=dZ\;GR<"3mpM$
%6&cBqI,AR#.?RZXA,AQ0@ZY/abWoU,<bUF46L?%Rcr;jOWQFj,2[ZpZK?o-5Aj!@!PSIq9.&\$</-OH2J(Cq`K;=(FTdrY`TiO6A
%X\0mc/gCaY4?dZPmIBX/:)kj;L<B[G:4XV7Q@_Slq#nJGOE[+7EIjcl0o=.hAchkJl^,/_dmPTPcl,=n)5J:J(8`0$$7V?ee<!f.
%1`ckUN;XC@(\@4i\N/n\QkqDN:V/;C!=EPu)c*COBD<q)>k^F8c.#0HK,7?OS+3ft_-\"F"&Ioln3R&j_pJ9oUt&\h7=XtnKsS/a
%VDUMN.>i#VmH43+g9uASPr&T/,5(5@TTh`:$2[6B1Nu0>klCJB'O`(3MXmBoM`hf9X)?+j+3kW9O+.=NUf=68[bqH-JgDHN2&1u&
%Z32Fi9LLB`/c]4iZiJ$54=ob]Y9;)P%U.6*.7pUKUe@os)51!='``&>A4J2S_JLYiUV]jdZqX1&psM(A6/`+EL>r=Z$7'Ftht`e:
%+F4;#g^,ur$9aHWil;qG#!"H'g-ToY[/?APXrZXS@GX;D-E0J1(0=QcAb5hXI!_AMTtFFcFN-&q3h;^qPTpcTEE&"=H(S#/He7<k
%iN?.K80und;:uB&Z(b`c)F4]Y@aA"#R86l*KV=cm$7taXO+SgAmSS%bj^3:d.3)>'C(857:g#B]Ng?/X#^q\UK=n;^;NOF?ULZ4U
%[STFJ/;(EieaMO,2MU)%375m]6qs>@cccbU]SrV*+H12')#[.onY]$ma3huACsd.Eb[3XJ^!Z7XnOnSA%JTgAo_[cLrZ15"?RUA;
%QeA+H#\I.ZYr]dZX"uZ5g0`fmXrktuAc(Q2rH7.OpV7XFI]@'BU!/"$r2HKHS,=S8Yb!4h:co.goY"'iLLUGsq2`OD(+NrB?J9?l
%]#=t)qsiPZZk3%SZX6Bo;3/D';?#"T[mQ=+QUmu9F\"qd!]hh23HJj*[_:J<B:Nef:?:sIm3(c3]U![sd2bu;\<j>V&t6XMSinlY
%1BnI1Em,D.E(Il6LEd9>C,.(nTn8dj%enu++9HB8WM.PRJW5kGl:;5e*'Egmj/s*.DmS=pJE?Vh&WpO%;9^F5q92Q><WSa&!i%hh
%AA!XC]$"N)O)\,:,GX_c.;h>LZ!V!cn&Q./TrpL:XDfsUY2#T^;Q0ab9nd5IR?g/LUZ9->WEYI/U+s)(&7JGoUO=X&qt\)s)tej.
%VGGJN%EEI]jQO?34Ag@O!^le1XluK'Y;WmeR@/hingcn.Q_1lGP%]<*Uaq:_:J7B(Un^e8;BnRtGiVgp'SSg^EJA'`)sGO3jJ4D'
%&@$s,T`B7>LnG]\/PA@#4:''>7YiG6F7Cni1C(N.!f1F0)kq)s,WhoIC'QL"5=b':&:P0oTn[$76tK*p5!u%C'RglP#os6.=JB7[
%':t&0[;9TW:f74?9JNu<VeLFr;\;.6]l^:$5ZtH6_-#9%-*2r:/:hC^],m/LXJIWiLL*c$Vl2)0(lcW=`iRbQ7M8`^84%?jJ>n,h
%C4>1N[=IN$UW0I$3=07+OaaVNS(!q(*^WS^h]4sM?VumD>Xhs8'Enf:6lYS]I*-!FC0DG0g1Y!a,P0!%3#7#qEugU`?_2rKXWDfQ
%G/45,L5-Xu!GgcckE=lRL_p9\^@5iHCaPa2<ge,(<*(<tdAs5M?Xt3sWkHFG1:@*p`-(,<V(cl9C<[iFk,]?Y<55gPU?e'fY%p(4
%g$&K/eW<2n6kFo,AY_RP4sXqE3"Y;:>c`M_TiD/[(ub9W5m<0",I?r\@QO90S!Q<HO58%%Tf51)5$f\YfLqu_/u(<97DPmhQ&@Vs
%&YX!j(psV.WHM=5..[KDIJXiC`QPDS7H#VEj[PjGJ=+B!2XMN!%9rK]3(ajaWp[\?`4:LiqSq;;3b>Cq^188^=0K/.N,g4q@eE_?
%&)N>L]!a%lDO]\0A2oq5Ad:&:YjslFF@$(2/8D@`H6KH&A#4)Kc9@6%7P/'5o[L\5WtX4WoWHJP#APX%ABf9<BoBs]8b0:q[M#%0
%jBD@tXjU+tYmB`IS3NQ$=&D?i7tai]MlX5eAo4N_BX2-@G[<i#k;]EFj/JYH^_4VS=;EF1-Ld>R^>>Ra8<>*<\B*T$%`j"Xq>&\5
%"^Zkamfd`roD'Hq/DESTjiVO^>:P^-g2p6N3rM&1??Q4$RYAC0G9?d]Z[>&TH1)J'kQTSWh?[dNMtJ?6-gpq\ZD6:Y&hPRAp8DPs
%Qr_[5oN1g]3N4/),W!e;$slpYXE(_f$u^d$i!W@52J>g<FQA:SY$<W<ke*E'!l=I`%D`F,[LBeQe+:dDi2dLe$'ZIi4,Y(3r&ng&
%cW?n4.^IlX+r(Uu3^smm"8(l'SYkq7*go^,O9QHa(5.=2>og,(TsHrCd6#_4k:_EF0B6%!:a54U#1(_#5O2eXafs^>p@g@8m<spk
%WWR_r(9F4(Eo/Oj%:[%VQ@Tt-(Q&C.3A,*=FF^VsB2N0M9dcf@b35hen17jb*ML^d3_>oe8=2OaNa[%H0cWj!3,5UL$HE_:`>AVf
%[<+g6X]n(!mB[-CZhXbP$Hb+_`mT:fn5hE2F\"5dgpX2:hRqU"4F-Bl>8g'_M9>+nV8rN[.%H":gmb)Qj1U'4DVAD%k)&*D`dQ6P
%b[pbN1W-7`3]1ACDQ*X><M[0CDU+4Nn+@7J?NQ!A*F'.X13Db>-F<,JFLt%'\cc7EA.W`L0%DkPIe8Si,>A/On_C\fUjDbLY8)Su
%@kRK%,OK\mEWdW:;Z')So#.iIO;S9KPKclSjno`Rr=CdN1Jq>4%@L&<bu\lD-Lt@hJi-*3r5]oM=eQ"3*$Jd!=8]A8m'r82JdP+<
%XZU.A!qAY:+f[^VV'-!s@90J>#YBml:L4*lQa#ZXk#@`O5ooih-*\AM,[sWd`RIKn9UB`1kV%QWG+S/K+jUeF4\(EmM+M##A,69!
%C+\Z-BJAsp;Kee-\k&S97/Sm`$[C&t-sY:b`\i72r6`4k;4SP?^N>ZIRRAZ+`Ead_8VOgq>oceg!c_gcZqsg[H90?p&S"8F*+Tlm
%`"K%$3,Jc@NM[cmCd^fG#E_'ZUcub)D8;2NU'DqG$Tat5@o`R3QAQk7W_J(G#KT;hDDBA19EX>-ghZuH'IZNDP%^kOfu7)eYa$rX
%9^%%Z^M6VoH6chI"BQWK)ElMQERrK\,J,g_-k?E9Fsf=/1.J=^8TaUK982A^VphSe0*0HDDT\Kn!R(Jdb.Ah;p!Yo+,9Vj[MpkYs
%%CJtRQ0N5!q`\V-okndBD[!l"(qK<oZbcBJ39YcBpddSa7P^t>,=8=HmN`ig7m+-ZlG2J%)F)$8?9%@&.A&NF4rosijB@gK#T?'b
%?SXM';$>_gM=f@,Y91s$29>VPb[Ad3NPNu8THq2nGj0>[?K)nGPQ763s*CY*O7bdL8_%p98\9BFf9Lt1V(;*e_:D:2/JL0IKK?qb
%K<L*7KQL4b`*NJZ';P$%<bKF-="P*(Qo7B1T'CI8ECt<8Gp[^R:hiToM\O>,@<Lu4"'hiH:sXY5<Rb+gKKC_tZj7Lsi8U]?meSma
%BN+g\MfMu]X$Dtg!nL17`Q=J/g+ZpI+R*/@.2>Us8T;ai6=(=EkVu?Hc>a0cauj],\kC)fVqb.$&e.hj=(mbo\bD9s$ac?`=`@Vn
%QMS$$(f6TRnQ$dE@+\@L@DZ2:06^oC/0VXB#jm7<G1GiDR`>C=YYdLfN3:D5O%^X*?3Fi2qe([N;]Cg(5K=E8kq_q*[<O@^<4R@k
%:&!$MVL#W>^)tr"SdJC+km1WE\EVU=noR6%%Y"$9O/dR"iqi>W+5VBpF!V%flK$sFbNj!@mE:F_SR(%Mmapp;m4Y#\EZm2#J51UK
%C<&gN((G*u)ig=NLBNpMoc@6`)V+q")/se%N3?T9a(oJkIDD_I*0?`oX2r9a)"Q&TbTRakd%Y]9m'mmnOE+bqVMHj91l/NGTgF]A
%`7GGIi&`^@)iamfMDo\iM_R=oN0.@+W!$M$IGDX!Pme69K,PkP'&qLI,,e[%dbjX^)AO?S%$YYhee1@gn]673*a^L@;C3AR)9A[L
%YH:r(,)1GPp>Fhm8^l<$j+eE-g.)s2U3)j2H+^M>66oHW&aU]BnLcW$)"s?9J&dJ?q9:ZV7[3OSdhk7./d_m'MrIA=E-cJc_1A*]
%,M7ja)hkeap,aP!ZCjX!hKdLkVM6Vr;%A1gWKn_F]!_kC,0.@0GQnp<Z4SN(LmV?(CU"BZF%H.Lg1\o%A,fZnFq,Km3bOab>eHq(
%&J^*#M'b``FoslK3!rKqa3-k<#GIkOKFZ`A"t+R$U/Qit=aj!Id$9mC%:KO&IUb3kcCMr8O!1+4#_T?nP:mT!ghA+oE;i['_*S)b
%JY9)JKHI[t_h*0So3mD*8oVK5oCre8lD;[VOXh\_/CNt]%"NacA6_1k/soHLY7NQ=oV@\7;E#SR*k-8IN*k%'IM8=VSP\4#]>bd5
%Op*ECCdp*4,R8^Jgs&,;,!4,KR<<&RZkQHf-[C"'A\,lA8(8+TIOX_G=[`VB!lBap`t'E.,Yi?SO1_btS9!0k&2(smhIE_-7gDh`
%V]`:d%`_jSg?[j9PkHUZT8E]t$f;-#E_HY&b?=Wi!W:Z0l>KN*-[n'N<@e'jag:U1GAmJ,F*E@sQQ-=YUZohB+.Ckh=?)j\AemV!
%>^_E.=s3+!GT]LrTj\Z>$hrA\pPsX$,@uF)`:*1&k:(Cc`7>g!0@:;;H1q,2gF2kBq?YM%k'hAs^q$AMMdJ%O3fGjqE0R=lFojW@
%WEBoL[7Lgcc&s9hYur'IPt+&\ZV4.u'bs%?_l\r.FBErK(^gPG?%Z*Z2QRAiPOK:Ukpct0U%TROSiDUlS;[.4J0U1@]FubAots1B
%;^`YXc0W'ZLm<3`W^$\4`'\^U0<6h\Q:U-DM%?Pe/.k]NbLNN#Y%s=CYmYU6FaUP!3)Zqg\S[t;;b8l=SJqP-1Fj@]-u,D"Z&cso
%+l[74$5NECUIn\0RO"=*,MD62F:TMqOLroYPdkbQ?sQo?*S3Z[1XMIU_rAFXAD2FOgj,bE7MBc><29'4-NKRBQRZ)M[/sI]ZLrm\
%=>F_?J#''XI2li)W%GJjh)YTU/EE*TmDc$t'fnA3iH0$:rnE&E$Qh]\l)hHDoB^uB?!Q0)Ym*9]l=Eg/CenB"cqMDD-nJk,87f;*
%_'aUXhMKZY)TKU5ksW#t]<D[;!\G^kqQp5a\kc4&0Y.d?*s%[cS3Lg/ENe_7.RF<"hg>0_'r^&lagRm)GomgX7b^LB<EaQgEH0u/
%$b_KCWub7AX]0T.735Ef+dK5h,2hVg_&bkA$Gb5tf64lpgfRhK+H^'"@dAFi8qV(s:tGQcM.5D[U=MrWj/J%p"0P!EU:6"8%_)nY
%Vj=em@(fq;8`H+GJ?XYpLIDQQ`6Y$-nQp[i8j+"#!SWg4J(X3JrnLn`OR_;'is;cO)Xf(.&u1OuU)C4aK>V'U.mu$\p/@4+#4?&a
%$J["s7o]0$78Aqf/4K`j9IuGG`MFS/,n'o<W*'5c05s-0pn14;$P6L#cfUXQ0T0p#Z7nhbVVCFU*Q/9sh1HbT)Er<UnkCe#)rr6]
%EP]eWd>$-;V6V%q0%85.Qq!E<jGMnGj8AHMY7V\`7[g\]\-U,Ro_>[r@FX41o8")Z.=N19M4te+&41&Melj[&)p]cAF2/:g.3<gE
%P7/!4=a<;X;fICY(R+T4*n^ZLd.&s_j+PHA"m#HM/6@<nT3L@udCo%[j&GEb:LHSp4R*IE%+5%4TbXt4//PSdIKQjt!5CbDG+!-Z
%Tu=F9r5Y'k5/>fd`l]pu;Ptd?D4B5gOei%R%c2G8fMeJgWu8pnq8Ja&5&HleiB_Gsjf/@O1dkAPXl,QQ?9,[;kaq[FLV.Z#(Fd0c
%(S0+\'o*Jfg$"A\Kp,J`F>UM2J-*d<Ku][SCRrA3_A109US;7k&FX!q5&S`F$ms&c%*VZ6nPkBgk7>q:GXeNuVW[;*c[$QnfSZj@
%X]INUK[)K!<`[:nf:eJQ.K#bK[O*_n9ucjS_OZC?a\G$2=sh]"5])45O,o^G=GXJ,,.TJ#%m,^-?QgW29&V(g.XqOsOR8=B=9g*0
%#\c]Aj.^%[oH>rifJVn-TnnrRa#Nl3:u@1H#>/K'HbftM$caNg>QtO`I3:/dJn[beaTp*O%O"(3]j.>&G^DOWJ:TL4UoYr8QNE*/
%;dor#7]4S?a.d;tcd?C6FO.j8@+"TO+jV<E`jj+PL`PR<fUs&s8:>;TlVPs):"llBXlR,=r\oI+M+SAr(X*dZ't'L7)6pqQ.9TVk
%U%D.*=UWbR@BNPQ)20:iM3eJ5_&!g^69Igs`@Hgm]4ErB^DGlqDhMfj+YsaJ;XP38#EBCk@#@u.#QaT:JVA[,P""lF0u^-.j*1@P
%!2#49>aEk"X^cFfjKO7j]'3F,qIipa$N^^T3B3\W:1?C3]a]$?btBGG9J+f<(+ZLhf693f;YhQ2*A)=g[YIu3)\MXR<h197Z(OHQ
%-O32+QgX17$Oe5lJN,AcDbVha]@^egot[,M-df9h<2u,hr(h)W4\a3&r1lMI6,=Ua%\"`DcdORVG/`?^r*DP#=(Ab<Xh=YeI`"pq
%[3r[NkMhiLZ2k.Hj</LR&I6#Wi_E*FoDjrVJ)^*H00pQ1rjGJ1FsL/)T]?N>$1AGa!o.KG!?T(lVU%g:8o#S5_'`(_eHAF%^GPT!
%PgfuA@:"B_YG81nM`.g+p2V,'oc+#S)]iJ.R:B,!n\]?1aGf_%`lY]gGiHrWNY!5$!s1Z"HmdlBS64k2J5_(rd\c"IE8-1$`$Gih
%1H\4U*3ukf,$;m#JA?_C-2hrN+T^8S6#mLhf2H^P\3?DC]:uM9";J*O-4)bn/3J0t-k;2I1+pYp?NNE.+`8\'HL[U/NeJa9@^&=u
%lo>8$G`64E'<YDbQemtW9U7bWm6$FAPo1WNSteIUIoQr\b]D4;S>\B^^st/72'-7U-TT#ERnU>P)^o;N&5_+/(EQ_^Ae<pdPib8F
%KNkpLMjTlHdR7AdS,<'_c?RqG]4iAVpAi.Jk5h<u`^]]1d%"!3mKNq.8SML'j5?sr=qDKh%6@hV_&/8ja>Z$X5DLN57i=BrfZ`Ku
%VTrYNLi58"UIV-n`B)#QL-Soq/dd4?Cs0V6Egl+NV*B>[5\C7=H6XpT-b2i-.9?iu%1]_-71f:.eF]t5h%cYIRIHMWjm;1]!SpSU
%L[M/.X@keRYYjls%[84D*3i2*o:6j8@!0HFp7>Tc`H_PF#"+p8[Zb8E/f#46CLdHEknrZTc7.dJpiVDpVo@aAcf@74jtX)@XP>9>
%$tG[#`D[E!@02r#\&NU%qCeU)emf=F_o.uCctM@fkD8n0Y^m1V-F5uR&aXNhClCg$Z=HC"Nt$W#&Te$s"ht>98OD-*qIZ>W.lA],
%JIn5]Yb)4:2Q%S8BD3Ti(.TK<dG*R^),2aa2b"GPUfnK&%aU58E=$5jUD[mJ,W1HaD!J"ZkIjjjnV!VJq8EW)Q(X4]#Q>e^W=WR8
%:4Ei"!kOf<GnHp9,aj%%,>j+il#d-\=9^MsQpR]qM6h`D0H]^b;j`XAHTc@Eer8ViQEl,;Si9-u@E77[$mQpo6\uh_5Yao[Q?`hW
%/O]s&nWH2E7LNgMQWU<B$Qb)JJT/,HrPm2/U<5eP0fpNP&fruC&6,Yr\bn(Pl_):KMDYs3E9&mi@6Uc+p&abM$]]JE'dk22AZOsR
%7,[De\7UE[M2Y6&rqYLLFR4fdL*M[:Ug[-l)LOB36=VD./\q^m+NiD/hJoQJP"o)06K8qaC:-=]G]:O26EK)kYE_sF&2gI/Fs:<-
%4,bn2O@/\>@W!fIB$o$;Lt1H]+CB?nUT8%Zaa$#+T3JM(P5Q:@b3E;P-P5AKBh=,-X9]2X%.I#;mND2OGnt&"S9ou)#33J8-1HNH
%b4Y8p"5(GM&+"n`/^1%tlH=sRRg/5gJT]lbP:>@M"IW4P4XEK.7!2JoPb.nMe0$Jla?_)SM6Ds4p,jYEW9iIlY6g$j!&2MX7LY6I
%Te%p!+.]G)-#tAkj<t5\.SEMe.EnQ='4kW%M;sbt$]hn6f3(IMaD$em,r6dkTu9P[4OdH3X<-<]/er.84Q;Tu8ue(B=Ho7$<6Ke6
%&)P*OP8u(;Z0%Gk%t/OIjm'',`E0qkiPC7Y5g55MjTCNG-WkJ<!QHF(kTbnpGpgWHN9$oVb0l)bq7\)Bg80aXDL(dL+@FLdC_N(l
%a?PXn;Nf;_=S0Q%a+.A*3qh4MHLh"HGllkoqogK4CSLZk%!E/?K%6EdPJS^`@&IR%3^Q[MHEIiW'JhYpT*ab<A\#XL"Y%=_L82WL
%V;qK2P.H'lO-Z'2<L<L^E+$D4MOmA4iY@7t#P#)?jWO@Jf8k=K0:C@[W?'>!A2&h782!`6!/g5I:/8VgO]g"(#K($^P:C@9Z?/e^
%q9](((\:Qe+YFXgk!@o@cT9?dib6QjdT1`nKSl-8h[u\A=NYmH,=jef>Ja8t[9S%C-YgokDMYhLAO4;/A<s8IXf+<.EZRIM4J`WN
%nP3Yf8(ZcH;5K<[6G?\8HT';Ml5*jB9&BpE!E=GC,"Q8Xo\E`k"/<FZ@28qLmRbVLdS@m938i`8J9,g,nT_&i,+UYA]k\c"M>sZ&
%$A6^'QY"R.TFYs@;0dYa)rm*_1iX8R@gsZQ%E3rGbJR3=j:e&*fV^`E;E=6.quduEPIlQW=c#N2!I"-.+FUb#hOsYJ9.7eFVP*C2
%gqa(bK^FdWg%khCn3^Ej#.uE*?5)@O;tiT'RWPPN_RT,n2Bg+<?UG=&j?OVd<B(Y<cU2H=BYm7;D&:X_$OihpK65J[=Ik[#>aFf*
%CicTF`e`"EEU4?6g6'bG0q^h(7;8W4TT;M1&KJ@mj:$i&[rufUJ;;=>+ODGpN)q9U0aE:+-uh#(W'sToO?*2E:Ahej:0/hjqfQCf
%^4+]JmDL1O3mX&52r+1q%`b1()1Hs%TAI6@Rp(K=5.q\9G3^E(_*KS-ae6(7AccpNVmrL*Rgs0A$gcgj*a>o\:as<2%E8qK^u7DH
%c$Idg,"K`J!Wqj&_P^+NdXnma$pCbCZ\*qqM@P5NcjLEp0?FWWpO)KVh$+_Co&Q4?2)8OtF4af<E0=t0K-U@\%pdd3SsjcfH9,p,
%BL7;1N+UT[po8rtjpk#r5qZ^2`6!fIUppg7,65I4p/)7k<OX\,f^'h/bX$Va`*;_oh(X<O_VPhu*5lW#jPdJ4X#)/OD#JkT[$Ot0
%5T%$Hdk.m]*<?YDXW`rL,<&]LTcI(*M;?4s#t.f##R=c_Cu$>[:YOqnU]p;4Ye:2ZZ&+8NOO`]NS]\Y(4!AKWEaPB1qW'n&+hhP8
%2`EW3a@m6'[.h@=5o`/_C`%h"h"(UVO:GeqOs!/t;nf"@QNe3u8l6A^_auQUKV/sS'V@+/qimmr;LjSn!ga8@fLk4CmVtPV+%#m+
%66>I`q;EG/IEUDaTjA[E""#)'"C.``H&r)),q*C*dbkc-&b72%>1e=U]L9lak:?pr7"VV'$,5S=\s3.O:*s8^E]OIPR?\m]-U\"Q
%$3^peC1&+rKO?0kY2;h<)%c)<@rc7A3;rrp$/*9e%PD^el%VSb`c#Xdo8m,a0-h.g$-$,73^Y8Q3._fKrJ?rSkR[qr2XRhhKR(lF
%l[bnK(VW[u+,_l^EQA*>]-"ji]K!ZTmh-#P8e%Lpiq+\o;.3&Te%h?'I`Dm#OV[GG'di[S3"q7._&reD^uO2j/27^F_0tr6mEaF8
%3fsT(2P-l,pNZi.nXE-73JsM^0h<c'IS1&:&pJ>VKLu^eYRXW(UN;=aC+MZb(VV2B"6UNalnP3.>3r2=dn2U4er'sj8j@e0>g<W]
%NS!NB3_c/Ii,\@)'UX[lUbO\YaMt$p)*"?C"AK"aJB3<6Lh/J.Km;YK@ilVNCG*)`FW(2>8,n>CPT2>+q/##^B)YFNS4_C+\kS70
%!TBGhP,88b8SIZIF*Y!2S&>D[9t!.:V]i^(Po;g$6&03-Ob-pk()I+eAd%9o7]%!%k()O[PpW"bXS^$@;rU]&lSmVCKs58WE,hK%
%#]][mC6\,%pC(LI$%!hh9H[g(`#,&bF_CNlT.T1n"WmA"d'5c95*)I&LfQ>ef-?P]I@X-&530'CNi9_Qa`<@8XD%*;PF4,c"Y5o@
%6`)M[!g,MJ54ja^7G&&Ti[*6!,gUdB4D;QAo1W`rmO%g?3\-%;)hX)jdBY(X)Ns;8V(]*nVK\bdjM57nZH_Is!Y.3shW2JIaINRF
%(rRfg6Hf?!\ZcN<@@m1-E@_`pJX[r.$_[>dN2@'G.nM/h:/4V7\`6V:4N_-u+ETb"A?<n:+8-pnTAWnp]2M!07i5J\75t9p\!4,T
%;!p?m%$,X,C&":T[?_p4YX;8856$&#>i:Z9PJ"K;]mRNgmc+04k'$:>g%ir%q/8rsr*PUIWN+0657e3UgkXAL(Bi)aY(4^)V052h
%dsaH%U2^f9WK5eJJ8[1cSO>+8Ht7soXas0=6)CY5"nnRabn&hE0o1i!b(gUSLW.)T*R`oS=E)-9)j,Qh@E&lZOFmT05:0[UBPh,i
%ZP[`EXSA)@V1MPP)a&e,Of2"_aVM$.anN[qT=&orFT(6":9]m&i!srA`93G6Gf,5%+l*Zbni<7N3@7d_aUmD-6"3es/?%5cbGrHh
%`/jPC6l'ebG'`$RCbCbRE"."]ouZ4+bis?sh5k:3E[1\oKh^UaL)h4o-;,5dCf6E""NB.[#!Y6Y,'BjK_"_:K;E+,t@AIsiYRZ<F
%MTOReJ`e0:S<,rPOIuS3Sei"?f&m(hOLTZ^8Hb;*O,!F;ZP^?^5\:^%9L9!(&&Dk/Cj1<m9iqsB_BR5FOrtDi60*#?!H:pIat39[
%R<Juc^at"j'%N:J/ceh,0#LPV&42\u[`T"bo"6Q1!H-,[Q2Gqn"O<pp.Z1;t>K@LaE54`JJtEE8)iH/#:0E.`c=OuTWXM*2TH,r;
%3'`KW+KuiiB$t9W>uF79fk7kt),*`J'Sf_O`AOm.!)HH+dddSkok?/HafAI*S*HD@N.XBCYW19h?kd9c*LK/[#")jVk4,6BAU&3&
%jq4I""'O6m^;f.2&;8)NSn]O(pe6(<,*UmjD)e[.C>co?C3_?7>:)$i$Tp,sR-4OSJMdN6QUo[]@+\lN"^&eBUurG!8,1.@^D+F=
%"jG[Dquc>jUXBrZ]hE_B1.Pb`/h/GL-5MNKab&rYV767*K*pPDfSk"VCncf9b4hVu/.QA/\RnEBKu@c,<VN4X-(3':R=Gu"?m]Wp
%_QhH:V3[Yi=?:VV'h?bSPRqslQE9^DE]5Fu(gT^;Ke</5@\]`@Z?TQ3*0!!1DjH\A%##csP!>FQHF].p#kfBDAK_!qC6q,ldPY"I
%!Ab!NL<QGNLNK:L?9GkC25=SR%N;&J,98Ad0dt&#5tjiE\I\bk^a"6EZ[;CH`sfIQNZ.GY;?%P]&!QE[HX+UDqd)g@7m[9=AV:pN
%W6g(d?9Xj+H*.ET---/PO$sbr-PJarj!sFPP#I)Ie=C-uP@le(AHah(7T7qtL*P#LDjDupYMo,pU^TsY>VM<DS(_M;iMefY#6DWn
%5PXqTH2(WhJO;pZYF[U9-,g)u<CgNd,\]Dr6T/3oa3fQ/4I-,?jI([?E82.'I#00AP1ZgS1^9*bIaBFtE#=;?Dhn8Y*OD&>0K(LK
%9X(8GX:d$N1\G8ZK/P9#WTEL!!M.)tNE\?X1>^U(iePVuOW4!WnlaAF6V&!^UVrn?1b^4!_jF?SL\.,cP87FsWCE:TA-ndLNJ!V^
%c!u)YHiYGmQQpY$d9m,jUFgS.&[uu(j$L0Cbh.ji;"r<eb`q>Q/J0#0ROPs+mN8ZXmY+"0*0FZ*=hP<EE(S@r>*Tf_lS9h>=s0FN
%/Y-FB![HW$$&_T;ZO:f$!1W'0]-(Mh/Y;F1,[uSIM'oW\d0S_MNJ*jBhU9SkjiJ&&5u)g[^:a'Tkd9\=jGqY4X.0eF':'KW8]OY'
%!]L1c)1#Eg"A8gSWA-0!8VL^W4f@KIC7b4I4n4%Gh4iN#)N%>3:QVdL#YA%KS,d;5eOXaTa/tLQ&LV\9!@<k)-':7:0B/3(=uKY]
%'92T:7BHta#a;o-Yd,/I'TUFpO+kZ'nnK^%&E/*CUBG5inI?R4,0;;.VaklLQ,6`Y5&.87c/+$b'YCMLP.Q8\37L;)]q!$;<lHNP
%?t9-QIU>)3^lNOb,[l1)YioC0nn6*`0DP&f*T@\R]I^Z[rY[F8]iRh,_UbJu/SqMYKI!n?Vi*59b[c]35'TZ#jci)*g!M,O=ZBRn
%dD,"TjSLuX>8Fmt9(J=M*0ML.?m-WQWe&PTBT]j`qneI7N&Y,+dXTKoKc$qbS#Bp#<O?'n)/CQ4)[9(sq-7%[!R!)^)CpT;d34>k
%'u+Br3?U<iM%NPsmZ[5K"Y`ap<QU];3$.?Na\?nt=^aE$AFg-2&Z6E:AHmE"CZj\#@1\;!$tO"fT_%p!UC>BpGJXUM#aG$##WAbi
%Y0hUO53U@-,f!g0Y_i+n'Gc'n#a_A=o>$FB,Qs+.E"mX?k]MCq!Q#t*%a[9T&,=JEj8p5Ke%i.";&?cp(tN"+A$G@:n`d^eSEH-c
%1\#6foVp7@S8&Edh'@Hegl%c+V,MUgWGO3XB=JB/@#u]!;ABI^9A9!p>WpAX7i12dFrA"mr#=Q[DoCa*?:skbn.N[;j[ZiDPkT3k
%4]qX:&in>l(S<f*KfUTXAMHc,&a>O()r&Zd`ogm'0b5t,-l%uBC&2/m$><Ps]_ate.ko_>\I"g10,/lHA'c)/OrojrnPQ%rBlYV:
%>S$Ui\5\+.m^T"dcqAC!W`K8e%p>0X=C(-E?,0KCg`WnBK1lZUWKJH]Uo+^+BnbXN=(=KG4Ae-(j+Q'?r")OoiobWJYIta`"&J"r
%R)U3<2W:oEA9?+Bo$=6G>:E=,E2nGUf!--RP#DQNJgoq/LC>(Ic$3XNo1+$dfnhJ@2j1_2J#AIghFOB!"-"MM%M'j+b<sY/]D,J&
%s4R:u[\g@4HQ7K@hq*"b6S(mL-F!A:6qIK<U*:_;*>Lnk84[2&l5Y:,rh'-lA'DKQ1dL]k.EfjopO0'I=F9MeYM"jpB#L<`R#BNh
%bocKb%V:/-E*rLN.*6tE$4.#d:ZNW_('6`\;rDGhj<K*eB#(Cpheru]QVJ-c.Qe'GCb]L#`12D+#S*:oU<BdE0S6s@*QE8#!V*.a
%&BtLC6A-'e92R(FOt$Q)Hsdl09!Q3XXA"Y_">0`9@>gXh1V5]'(u#DOJ\qJ*U>009$mU<1CHSLB3&Jqsc+p4>K"i2B%meCGM4o1"
%pE;sm&B/K8o!O/*_kejZ&bHXSTi$*:8;%!H$l8Z?,-g=6Fp!&PKP&9aYD.4;@pLRT;63#r3*Bo*_C1%.1D4p@('`8W@,#.pUB3_P
%SeT8S%YG*oE[9".ca?7J.-Vd_-#p4-/8t,9auf[!K[0ZE!/e6!r0$R)?m1Z`+ClTr4O68\O*q&V'Jt&7#q<a$&LW2<'Pn>:_?3",
%a]>&a6h$-oG``5AABQYs8hn-F869*$Nh/MoB2Unpd;Fg0UY10n:Vb&`&Rg)34Mh0[@;flh=^[)<$-3Ii=4f9i%,lT/;BDc@ON^@h
%9#;Y!CmJ3,7KoB6Jim&.Mh)L2-/oKN"n[C>mK+P<$XbkJpE,htqZo)eJ>n<Z6J*tg`qos\5Th7h'F;i#<66]\_7]&*nih=IJrtUs
%*So-$WV8b?q`ll&)&[8e+El,B7?PL>#_^ldf>?Z+@.00Y"S?2Qj3UP3D42/@k)k@[+tDt:Lr$!,VH@i.eZlE=RJpd1hJ-'LPm0kt
%m3@;&a#'fSiti"6@9rtp`=ioW`M/1$2^AQZX9>^9[/L?\Z5Pb6#+n^``WHR0=@+_Up*n%a`"bQh`-LRFmBV``N@9NuLc.+MKAg]\
%0J.<1VYRc1eFH%ZN"F_[E\,?&`LKRd)QT/js.(O-)8=%pi*7rs%Z43lO\f(X!T+B,mm[KO,l+1+7RllU&SWehcbW`!Pn>gS-KPRi
%Fnj)36:+_[Q".uHjWK5>_8YIl#T:i\L7ASQfZf*h1NjTB#2EKRHm'4)>aR4LJ1K8P]%B%S@Tik2A4I'<ioS5</rt%J5R<iE&sWeS
%(Y_4X@3B.m+>%QP@gS5g.M=VF:(TRfD*>kg4-%sR!#n;29l^`S"BI6"5m.5P*DiPOn%pQ2*R7U2,$0[Vi)7@SRgt#K&[?"S'Eg-Y
%gl'8t@DPRYGmoDE6MU[FjfldDnfD"%-A=soj"O&ep_\N1Lb4eKcpA#M32@sZr.sHNP0HZhX=iFO#l%M0^up7%";d3$D>+kU^]BB+
%(0VOC0'$!Md/iT%92!2/Ht"ioL0lWJQa+kZ@EJR:aJH3l`]4dR)Jn[0*2W-u+^)?5eGdJKE5^pBN5UVW2$$8p,^5O>ait!3$l0`a
%@,R.?of?JSDa7V@-hJ9;S6QRYG*DMK'%u&a1GK$sh=(b;jHCIn:=pCb\X/C5Bt@O,%q6]71Daqfhm(<.1n<J^oRpojB,VI):U1/@
%csg.\r!X5/&k[\eamlW<#l&tr_>*l&LA!WsU9=:V&0dtS`$gqm*>h2#S\?Ci>53Fm=TTb+f`<1g\;[$;!lC,j7F6rZT-*S\Jd]4F
%3/'M,!"%/%i+e?f5Tb'/&pDk1lcS^!=QRd^"Zb2_A-BV/6M%0$2MaCk&k(M1nh[M(BFr[d)KU_h'LGo`Kcn>aNGE,k)!1l$2iJ5u
%=(*$PSq_)J@]BtaBYgbO4?*WU_"q[U33/`gKZMLeDjIEkHXMt`i_q_)$+I9;kUGm(HqK5Q+]sXIcGLN1Z]ZS*k#DoOO\9FQ()Y;a
%DYr'eU+B%B_#Wc+#0[h!#.bt@#-Ki9Y!Dpskh[SCSUfQ[&jBb,'1m"UN-ch5-'7[SGh,I[6in^%js-4J-h0'F`a*!0P*-,1\WX*?
%/:d$"-'f<:D%B'[8J%L\>ID^ld4gXf+1s2jB/(UIJK`_=X<A.>86e3gn_T)W>HYss#ob8od/m&85p%#uGVhGgarDt[QK'4q]B;W"
%3@!+i=;)Ie'[#@X(j(=['Ylh4On:#PX_b#iOgaP1!q("F>"naK@YJ(R0Z)QN!/)e%,$:$tp7Q@nG!/K$eiY\Yi\kj@$0`X<(**&l
%j^68B7m[^;c0Xp7U%7dp%O%!?,C[t6d1='[k`sJ@_W>"Oq2?G1HEg<Mq_7k>8fV%g**6bk"\H]C\0smDKCmT.+FIT1QA61(@S`ch
%7q0&=,#)ba6H#HKnHOX^+oi0>."n4.XJeWQDNVqT'tkK5)RI.U2F;+$"stO)NS'jg3&MhUqQ\bqTRsf(l&_2]>]g+h,#"'f(`qMP
%Npu1e#tCo7+Rt,LE/[sC\[%'Ma5J\q4@)#qNo\iiWs?pn8>T&m/%EX_6NM820gJuR1_:U<$cr`M<)=Zb-:LfsK?$nQdRb)++*K/n
%]`bR$/qhnZA==Wn\B(IRM^qeG"'jBjo"37Tk_`n#@f`Vo";XMTC'5Bq;e.bJpd.o6lTMZkd7-DT$uBW1c2\&P6@ol`Js[H)\HWE+
%K#nX=?]FXefG6VeCl:s&iDo5Z&9q'B\\b_*4-CbDOk;HQ=*+Wt1P2_7<qZ6P_\8'_<1;AmLSB]O@eRVV,O;&$G!Ynk)&2&qZ&%5#
%*!%I/,GNK--0<Nr@G.pP3(j;53XS")TJ$:'*/Cgn@?[Ou,NLbJ+?$cP4e\F($0hQ]ETddTc\LB\[k;Vp70LMS,!,hsaLpS#',Hcd
%ND5/j!9kMOg^HrR\9%b^6>uHX=kPWb!!sUl<=aj8bX?HfDrmgHY^eB2XrNi<Ts`E59D>,FQ_R@oM.1VIKs&if#&9\t*MP5MC??#?
%'Z=IOPlsPk6<llQ0eH`50o?=7es$l"`m,;4-6od;d:&)$:oK`eD=M()3lMD&ZLDdacQZ7HUo.m4`$.]L8XRL/%uFec2E(D4BRG!q
%.AL8_H"g<@=fsT^=bJ2ZTKt(CR=cYD=g;Fo"(0>8\YNY]oB"Km(gi=P*r372+K6MDf`M)YH(`"1A^MDMT/,YnQ3c8QZjOseOS]g[
%=Khp;Tu=kO3YIJ<_b!;=.!3t*5^+4747g\JjWe9!M\*mY^12Q2VtOn1MP>X3cBITp,_*UmJ3=TI0KN'aLrU:^(oXO-=FD?l,I8.Z
%^:qkMB0[*(:m(LWp'm'JC5S9@!&7T[P1t;RP:/B\'s_4o.1-5*l]CkQ>Rg<H6#`\O*Fg*Zb0:?fKqq]Tp&&ngIOGWDU*'S5Z%/X'
%e]CU0M_LATCD?SB8)Q-N^odsn>E\4dTg(3^(>1EJ_Y%X>A]P>3'7pO`1Q^$?(5CWf;!0H_%\Q/m[cBAU:^"m<0jTb*E?l$_7u"&c
%E"uWCnD"g3cgq:j"Nn&QKjX+mLb4/J8_(or@X!^%^*h3&ZK15O&hljAgdjj."MT]jGRG$r1d5VF@PS2"SVB)uRK.pH1uU=p\=b#L
%8j-0"JX[jq!kH4B]4"J(gX\%d#"c-DN3kjk$V7t3f`l_:#9\K2e]>r8cosc"gpsT_TBeUp"=&s_>R2aNa5'`7GnB7,NWNR>\:\>.
%@Tn.d?Hn6FZ!I`$/ds!\F!9'[LM)rU%iF4EKSn/ekZZ2k$"^6>0FPCI&[=bc,$u%hd%d'5ZU6=/5otpT-ZfB_1bdOu0?@'M3SJoO
%9%&,+>)Mg$HP%T$*n0nKO-<X)h;LUG4d,8ipPf)33m?.%'tG5$l$I-;<.m%`:cn`0dc)NI#18_J\73FJ_n>65FY*5SFGFY%QE&Tf
%+>(+*@BGA,Ogs?bVpW%MGbfTDE>/FS)'q8Q:apsj89Q@cQB"eH6u%6?)9F"q;#XLS/>:]`(LeoC)R<BfV,1eB%)S-%0tme:6Bjn$
%R0%-PGf\J?*sSJ78$6a^;!H=N7n&NdSPNcAAFO_dq`&mQH")hCf7DKZ*ShB;7QVF?b$"eK(H+%CY*c<n#:^M\(nA!S&N1Ko+EOqp
%;kp^N__!4G)f.Q=6=Fh'+b<=<X=Y4G(*s.f`udrfe$RYA;:4Q32qA5uo<i.fY_;daPQ8@MJl!Z!`Z&o+JEs[f'^!%f+E&C]AZ&Ge
%`O((k<Pi[t(*=+KC7'Z:iFAZTUdC30[P^/[8X:P=N^D=f4?:$iD_2U,=_a]R^=)8(/b)FKD-M/Y;_>AaO9+Nt+&`D1$1>^`8jK#W
%H7LK9+=/$Di[.rt63]Z\cqMX0UD+3Y>B-L1AFO>%e%$ju`2?18PSEu2FNJ)C-$Gq-JC'I.//%:O'3?N!KD0Lo$U["$erg#1L6G5d
%X)Aql`msdG\P[m#!0I]@hl4Dabd$*rS%*!Z28NJ'BtEu)PQn&#*@[.P2OoQTFdq;Qg/1]+7"M#bkXMTY8js+T+nuZ)$Ia%8o1D5t
%`'@a)(`gG.FbQELVoVfc/JEl#9UA!f7sP't'<l1)=$A4Ed#g(LY7c1$C5F7qS`ZpeKJQ>t'gXJdJr;s!WX3&+8Bh\Pgs%2!:dA,*
%I==.]#upSSe>&q78D"YrC_hE)[X^aJ8.S*!/$gomP6=#[;B/4Q4qfiD$WKoA8+afQSQI6hMT,[-&#_J/DBr^>^src+kRBi[TA1k\
%(WX\[M!>Be!="@e4TM_>!oKcZC.J5mn14RaQ4YZ%X+fXA3KsMo/:g1#@04?!p40@L:H<CpFnH?&-dZV#.PaQOaN55K;N^`m#S1nt
%"A!@B#IlLmHHJW#ae.43:D4:*ZmE@!/u)r?!6PH6S<j5I@$%a#=ks_;6T/"Mf-qngaH236$mkO7<YT-27Z'+$*XLn:7bp$B=[3h(
%:M@!dBEEUD+D)C0B/gkW.3U"dN]8</'kA!;XM/F8K+^@"r1]>I)1PN<%m&s.U`B+tAY<_[*4D4M8V3dH*T2aQht'-M9;6>V&a6&Z
%_94CGr4jB^I2HAp,_k7SKq$96QqW:HZH]<OND:e1/]:=]VA(<tnIfga!EHKe+E/n*L#Tg!+>IqdKig/'IS8N)S"_%EC?YImraJ;Q
%f?(Z<dK;&i:9pgCQE4W?(%2T`qOmsuZ27,pl_,8+*pE&X_<$!:W>nMdD:1D58:XVT<#QWkE#oA[585'#:$1Q)Ank]"(9WO9]EBc_
%'cCZD-9:5)'+6cTK<o:dFZ_[dSAa,!MM-k.c6MR%eh_4JiXp!0MQoSO961MGP)t2S"9MYb9Vu9!6L.J;c`o)!04oGA@PVK8+cB_q
%g5HRi#A?NcT$=oK6&Hg$dP*>rWg5W&jE%aP&7#k.,1+>Q;LAKU?WTcd"bZkH2O4S1(upt2e_YSC,MPAe-$@,)PhC^k6N1NZ1D!2;
%EFG),4OQh7pI.7INdr]NS&gobWc]b#g,_@[H'0,)IWW5jfO.CIOZ;lRQp`FpFYg\;9[M+9(;`=eho(2,2YfrM"Sb*Z,7#C3l%7PF
%7ft6&g'S&F8Eg8mMF^HOLS82jM&[ps"2I#r7so?&Z;Rcl<599">:OeabU^PD!E2j+Br$q7d-_46d#f#/=<!2aNfujYTe3m*LQsCp
%?j=Jd([GZGS?pmi:gO4gNjK#?fbf)B8TWgQ-H\(d:^9r#KM2/@Cc/sIi5*A3!#Z5s2!G-s(8<h+AFW0(-m$NEG46a8>RlG_;@3Ei
%V"MM9S4qiJP=#mp0G!__!:@KQr'$'"UHoAj#"Ms(8E,7b\k<\^i@tJk0N'b>qJ5*D0d"8`5Se7%;<^S7+,51=P%9sh"!4qD7X\A5
%I631W)/mBr$V4+Qo<IF*FOf*&d'#u^:0N1tRnnJ6)LNaN&QN79Sf4[s8b[n*4SG"OIt7DQ,!]7u/P8'_pg[V<D*//7V$eGSMZkBm
%#fTCYhm1oi88SnP:r#fm.Us/p4X82iR)$<62P^]\1[PPCJuAr!VLdp_Q'=BCZP"_?*piht7mY.7h[r^("f/*"coiq??GU%]g]g'$
%#Vt?fa0\M:kU*Be2p#N4:.[gtS-bX2OO9LYoH4f^c7GJLE?-lV_smm*Q14T?_"YJLlQj=-Pt*X'Ak%Z`X:qgTln[KHOK:9qHN9p:
%>Np150SKhcQK4;>2/r_pC)?^u?Q#;t4sq,mGF^-"UGt7jB#5c$5E@La^`Wl$)gj]<-ZTH95t05C"=f=kZkfMrSg$FNd1kThZS+(:
%+F%=Z3>sIPUU/W_OY,?79GmjS+G)1<9ZT%57(t"^MYMBMnH?_n#Hp?$EfgQ&]!S*>ks6=<ol5[-+uV>UK/^NH+ki&(\-Bkg7j[(F
%!&;il9ZVJtncKOA^!2RRJ%-a(?F)62M#p=@]R]tbJ>c4^0r$+H:*`6POq8%'aP?qmg]laZ>E`uV;9JD9!XuMOn+X>$D8tQ(1UON?
%"YWHL(,.4@\3CiN(;LrfG_&s)1`D$UIW?!mbT`H"l0A%Jq"9;)'*UZiniW'J=84(MGXcanhUupp_fq"PMCJqJam'e^Bo>n+==%(Y
%+shVgHP?-Z(op.<J[-3[&OrM[6:`DD#11iS+3]N%;)H:5U(%1bUp,0#JahGe`+kI&Q=qG`'';![-KOD"YtfG7ckf1[*GR9bL5At^
%VJb`H=a.E%n8b[N=,Eej+og$/30%kGr,Rn7e\o?X<``4u=`f4bTNb(U[fhQ(Th'TeJ]j08R;#N-,S-*7fcj5D8L"oV`5*$D1`ZFB
%,/nlf#IG\3VR3)9B!4R6Modr_'3[J!%U<8YOpfKtfG?\+/OqWnGW(_<"hrcq]Abc1I:57%jBI0jlllZ7S03X4F(73@\4?2)7,ajK
%Ws33`XQ4ZVCcj3@ngsoS.Y=FY]HD`*3<YI)ih]U`^E$e!/D$1E5]J>V6g2RR(kg?C2fE6-=Wn>2Q\8k"6o[7"YZO<(J1(i?4#]6E
%@gT>+;4q<1C/O;EMf7:#(a1jCW,'X]'MF0$,TMXeOIH18]&^\;qDuVW$KsOF3tZKNJfSg*Zf>Rf;V*pC[.k3/3PbQ;;$ECV$ReB"
%P#.<XiPtr,30I66QD`t["Q'<<+0]m"<Y5kA96[Z9YiKVVBh*u9`q%g/8>sIMAP-68"*"oT$h0E(RhBa,`1KGKH4?,H2h3"oUZa1V
%N%-e]#m"J":.X:Nik\NoJSSshB1YRI'\PSnHs(7S`QP/g0tYpAbctDKr/j,0JM@_FAgftXdS<5kjQE;<MJ8[6S4,]2d!,hh[F0:*
%l&.'L"V+.VbTO:@Mh9R=:oTB+Nj>no2fe?&65bt7.2F<Ic9+lE^p3;8o.+f%8/CG^Skb+nAtXlKbbaL%W<@U>Ydos(dZLGp/C*4-
%e(d5bThQN6Ujidi\gU*Q./:EK/=Mhoe/0i71(PLV#@Xi1FQg]\f?[P!90qP;DS[`ZUqO2BppdJ7%`(Gl2g^2X0Pphd>UK.H2ZWd:
%Tl*MuZ147pZ@3]LE3U'1Tnksg[De7ffGT.T,[Xt&(^2t<l_9:nR\E>nFIr.rC.>*KZ;rFq+D;4/q%3U2Qfr'J]"-N'Q<7$-p)Z;X
%?X59G%IV4H9?:@lb(?ul$mpX48C[uB6X(sHPF+Fbn.:<Td=UW9@3q0YSn,8EZJ<N16jeg7]=_ehbUlPq.5VhQm\%dfVMHiF82HDX
%,^EZ9+>R0l^B4AMDPiZP(a&#K3*Fa;X&tDi.=Wo-/TheZ$(E#,&+gCFc%&-#BdW@M'YutdQDMS?6HpJb]*LG#;%dl_('dT+U_#fq
%!XRYHY_b(:81\8ojE%OJ>(Y;pP70tnmkg?%BG`"uJ0t[o,f(K`RF"lMKcjD5]_"BcbR0:PN0Run,+"^Bkt3()9/[hlL9J\6#i[Qp
%`^QT6"]>`&S1Me1i@?\7emK<8oN[fgC3u'nR62=b'T*c`LV+t-"AD%AoW*qTJt3D&4Y.PT_)N;_cjM@qQKSl@^_Q$d?#*"I=.?1R
%,hI]C%.hul.4Y*?=#nZ)@/F2-;1]J`2Udi<cPG95i-UBhg'/7R"l/;k+dP5)\LPY3ZjDAie/-DA`cCK<#%VHS/q'c'Lq8n6pPZ&Y
%,:HFmB:t1p5u@/,n#<L$0Vn<,-0T*.)@d*]TP+CXEbrSh(R_rcO;osmP_H]nl:a8aM)XCt`aT.kJg]L/5dD^<1SU5AU(L\"6!_Tc
%$RSg5`c>l=%:eH`(aOOP(=YBm^"d>uVdp5i$NsO88bjM_"MS.Q<4Sc;AC=Icr/gb-QLkbQ8(8@*La&-Uml'2L6k6O'qljaNo,*C?
%0-CS"7kc\aKbBn*kojN'`aU]GiU$4/%eGp'9PO5G&n"'E#*8tJeKfhXYfbl0E%-Xb4!@BUD%1"h2iq-n5l("qaRr:G#8/Ncad=(f
%Be=uu**.>Q9)D6R?4lD"9r8sD+)0Rs%)*]c,bg"W2PrOPKgPdk!#m=uTX!t.5%jYMCg#Xqed>VdT7C34`[(K2B()-APuIgJ(":cr
%#Xg,Y.Kd4#LTlsga+bXh*4NH*!.'7^Kt'cGM#tM"Lij69h@aohi,<Q@nFAO<"CZE514(]@$c)"^NeHFA0b(:-&4\G_Yo=$a[`q7a
%ZYrplrL*mCOGHOrR/pc."=@'#o;0/&:]M>p+=^i!5Y-b[*8Z6i6KO-("%R_nINX.^AfqW'QkL-RLQkUL0$+QV9GBJ4G<&HJ/?(\0
%r$#Mkp-d!KXMGZ4U6sdWMimhu&=qfPW;eJIXY/U/P&qUuZ&(&El%GgDQ]''WYW;fPLt3>r;clO8#p'*g!5f-k#GPR8QO&%HVSMl9
%P,sbu=Bm3;(?&P?%Pp\_(T(W;Qn:^E,cQogL6]lNafqTQ?D^:\":KE![N?AFWIW*.P<]1F_g3Le/Nh:`%!8a)M3LT];G$Fg:rf;4
%le*Il@m_B;B87_S"3"1nSFK)Z`GsnUn.f[YJV;n3"ec@6'B2UbeV61p0f4\M@Q8B>-BBAVTiQ;jGV^3f^'hh/o=klN9ka\C%*U>h
%:+)#9L>@o+3(XGm1%-4#AN#N]P*.X9'c+80i)m/Q_V34bc'Sf8E(T,JUo=r&$SHfKQ5LBf$dojb)e>:n1d_]ki<[e3mT0lRZW9^O
%)mb8Y_44=%-XE?@DfO4a^jq-Zou47J.rhMg&a6j.63Oik&-utMAfqC/D;DXnb#(f5%&93/J2^'I,AE5N0&gTFAB4Al<E<bEI8=>s
%R@+QD6ik1R0rs(L''2RFEeQdkP%?r^]Hr/jM(*,d`GZa@:70!\.h82inf]ei&\:VI-ib'6ZAWOU65'):-8LmX(35A$STeJ9@uN0#
%$+"qCO.@ON/g_H8Be$rt6d5s,\hKI:_GT:U6UXV3SIo9YEPf0K3bb&H5kAS!"6s!I**4(W+J'f7O@VQk#o42];9l9Ljd:[I)NXu?
%IH*G6=@Z183,pL0LSKN#ADZ;'$#n.!Z6#OubX_rr)Sr2BQ#bu=gC?;%#fZKF*t\5U"*J@pF@cg^T+EZ_/C[p!JL$h?=pt??Lcp-V
%:R8P3,/WaQ,HKD%YUgBWcfj1MM&:arU^&#u,\kAD"c$'>3,5bK+XE7..X7eCF\+1c(nWpI5nEnsG!_ZSUGlZPhaor*US)h$$]\aL
%VW:>#3gQC*31%QJ]7F(p]ekkI0:+4b<*L6p@NcA\?%G<s]l5fY1\?=VplLM-cW-WF_JfukB[A[($BYg$X;SFfE,8/q.:C-1A^;0<
%j?5hWM3r<4#V_LgP+@XXb"eVP[p5V!-RXK^,j@#t&;_Vo:2gi>A6&BRJ1fDr$%Ja-.2FVr5mTV,;3)SSlDYqrqZ/kf0*RY=8+d4\
%ZE*"7=EIR>F+j)gI1R6dmNR<aq@k?'r/6:K1+<3O1'El1+_=&SipMGU"rSc#=9c/W0GO`.Y`<=>;+F;(+@&`p1kci>HU(&.99NFa
%8\5VH,fV]G.GuFjFco*S$o<b[:G'p.nZ5POnIcfQYn)"'$WjFA!<]^U-ehWO$uB[A+[T50a/lY,->!#aa`J3CHO*C^3Jha)L8;YY
%=#cojKh8:XXe7j.FpDC'S0hCDI75@^lNUBu?VS-dfkUe7"<U1U'+m8^f5o#H`kqIuc2:nq0J=7D',HY'&sNWioO`kO+J?3.e6nRZ
%^8V-`:kYNNa<(h7L9F1s\^cq<,4Oc`k6EaVbiX^<KcCI$Rd`-<F>,N^3[Y!C)7tIeNq!Fp0qc0@."WY_+qT/FqU?-5(:_#.r<12+
%n0Eo7+0dDs+a-\l.Xadf#`o]kb/6d6>XG]g_t@Pc_Q<n63@&L7hA+WOkq+XtNqdld=h>fPJ3bHR:(.=-b;'Od=(Cc2_E.csWiu2#
%6M??t#9+hm"qjacE$84I!$62EP2JtY3;Bs6\q[H->W!kGn7RULh,V5r,Bf/9OZ%D-hO.[eb6]e97dp+D:m7$:RJTH/GTdJg6WW:0
%9ShX(Ju931P2rdqUWY$)#Q=;%km/.IIFP'['kN8A5[6I^Spf`Z$-5H&X9B^0>R"\72=isCL3TV!$jel85GL/Nfr?`@*1<Jam=>n*
%Bi@W/FV%r`4aL/%LbP:A-3k+0OH`N]#*":.=b3p,;u`+Y6/VDKo,N[ma+VXuE"55^8u%%[$:FsFBBi[^<JBY%=<'e\Hnf2%.']SN
%#60Ck7*4e9ilph3q%bs(6-qs81)6TQXe@ikL)LfjM!U!"_6$D^'bM9"V]Z2>1nF\eA[)"d%u2fXoJG=WU_W$REO3/GV&H>n%&tme
%*eA?2=`Va*XrKeQfuIKMM)?mp6n^HL+`mk(=!Yle,cI;[U?hr$,-b*$CBG)8_MVp38jZWr"_XS7<'B_/1V[NEr.VC%=H"8$+nd\"
%7B6T\cRA^=M^/.*YfauN\?%ArR[20",F'DG_B^&=Bh4%)asS*>93P->#K3bb\\p)>A._Qfq2Qt&_f7(]:lZb_YAkh:8]MH36(AP^
%_?MHf:0Vm]Uejc@*TEjs_#Y%!(qrtW!XI^eN`+;4&l[H"1+:.d=*)66LkHlp_'k"6G!keJdu)4kT?,=IEusQj#oF;e[i-.$=CiXO
%PHt:u"4MiaPUhsA!^6oP_FPk^=Ff*VE0=#-$m>oZ5p&FRTTT;!W[DfV('E>Y-/hWf"J#@_"qrd!,jl"Y,J(%N49=[UQt/S5FI=:;
%#T*Xqjini$2N3'C<1]m'SbO;,&4LJ.LK"QcYi_lR#d,CF(jTSJPZ1mCIE?`m)NB#p0u1%<QpgH;i$=SPp<`"LgDKI].^F`[mt&'e
%)1MnB1o*Zn?BBK/@1I=B_U'WE*(A)]""+7X!lPe@D+aO4@RB*GhAcg2e&%>Y0SD(f;o/&+A&t<%TY>8_A4p<;5^efO%u.T0^F6DI
%p^EB)(igp3E4e_a+Iq)XGR6CO`6%L9[W5Q8YT:2LXB8S+L]dcZ8Hd*YWGcI@h[qt/m2'GsX4`+RJV6&eMRkX29I():"VTi]aUJ><
%6ntaU0,0fWAl[n@Op?\u5sbT>W>XOpRm"UT?7\/eE0@+9H&?Pahj<7fi`Eu^QAW-)%t[ol!E%^9!&P9!jXN<]Qn!\3r@eiWKoV;P
%"j6fUZb^2jMtrmBZJ^6B,=)VI5)oppVU3nQ9+[d@2()Db.4YF#P)<7%niS]F(sc7s.)e+!R\u.2n1YJt(t"e\a/to&n7bq+#Y$i!
%m:E0C`G%t6eI;Y!'RQ6g$d0B#=Q;ZCFt\q:7hj;T%)Nc2,et?4Z7ife4h2Q"Yg0.57c$][Wb8,[&0(nJP0eMac\m/SIJY:]ZO'G"
%e?'\41a#Rt(B5(<Jq9_%<0&?D]g3L.>3H>m.p+HEBG6U7b>tET<J'h%8<h4%_2:?DXDoL$7fq%"M1nSu#ae'^,/Tbo#Q^=kQ'd]\
%=F?!bEBmI%kDfk1N&ltSd]%P]nIi*GDPG;M68f$?8%Mo5klZQ*jJbA/%Y'0)]#()c2i#NVlUe)V]I",ASC/dG/At&/[Z[C)%>JPT
%-`F7rN8c(+,a/T(kQ&30mWoe26k[%,^*<X`50^SC13@X0_.jG;3i".OMU<3bX,^>YG-hbSmBH>pXb#)Z:^0^I"S.^Q"ooT"SdMB`
%*QYYRLl$[sD]qCb]iJJ+#p'_2.VhR;]V[[D'h\^e:BR<=&A0<.>X\S2q@p34Z.N6D:*H,`TFXT_d6Zhjr$SU%?QBGb*pO:KKs9.f
%oKpX$n?PLB8H8b>dJ`=LUr<b,%@8R_PSSg'YQ2n=\Z^iYoe_,bN6f#.8D]/&.`jVoU^.)'V[mqYJn0+Pe\qMW[fgbZ0Pi``C.$"&
%3"Z`O9TMk$3fPSFi@8<,%&j^_[*qo^C3Hk<E6TL>@VY`bn6BMGL*IEko*,7;7dhU_-!R[&(J,)&$4X?n1piibFelZ_#;)4cnrZ1G
%,-\V<#!E159+Sg&>p2:=hK.mM[3U'c0PbJ87NF`mgm)%OSq2e$;%>:l5nT#B$"4q]&Bnr'$fo5=GQ7e4l60hVUnR<,KWL3>J;@YK
%5[%f]K_A7/bI/<#/+Sp_=gXU\``@7N[N3q=g9%S3B_$huf<UY+g/Gk:d[:a_mZKQ_[ajgMpj$ZY?%t4j$%`2]LPgZ79B\:jj=s3F
%(S7p<ID'PHXPBM"=6KYb,JKu7JP<sYn.Sb_&M?p/Tj^&*:dW$0>AbpWc(]EIK^k2YA''%q+`,LXa;H!S2D%bh!-m?;jVE]N7))6j
%Oj/9H&4f1]_]a+jW"Gdiao(KJ6+nKN#U@;+I7^m>8@]Cq:d@c1i;+Z&SV7]Q`<TnDH7P3_mO1?]'7O.r,Dq15%jbbj6p"n7gU==@
%1SkH?,l7OM\bfkC>:CnBGOb8)?m%`^P-RpD_W+bn=CI^H&.Aeu-b+50MBn9$H7uFU;!k,Klt%#%0pA9</OH?A-0?1j5Zh;0`.5g]
%QoH!L&LMF3%PHTpY(ef78:YO;VHEEQ"hlt@>ZlB+6goh@NMJhR7j6>]1@V$9.-OsBqmc3e,rm(*m;rZo:gh9q4eP,K#3CKeB=:&j
%80K(4YC]#G0*s+`=X7u47&jAU9%%&Jb!JfY$*-&lA713hPRRo6_T9mebE)hYHARUS(aq[6M^"neECEpL/Kdk?kck*m!3M<(a2Q+9
%VM/:VQ')4LMZQ14<5CmmUBD*@jG5j&KG*Q`+FFkKWK[rV8Ha4";8NYD7Z*J/!Q,DX@qZ`Y*.!_T46@FalDYmtR\7knOTsfd&VkB^
%6!tA."sK9DntRUan63Q-FdaaG[`M/K5Hrsk/jRUG-pJ9:n>M?lJKmWX$5g+e8_t:p2?LB%j3-MpU]@[]*oK58[>Ln:GY9ls"OaT=
%aWf)ZW+2Mb]2onR72Rj[l7-SoW>:Y<buL5j9)oSId>om,WM-HHY>A^l(_4Yq8QX:Sl]]&%V=FEXS7PA02WfZSPqpA"!2l&lFlb2L
%#bm-WW'_8\Vu/ud`q5uj&giUMpTCYDn>>s]F&Bq&=[".aLkl:opc=2O&%\K#5#.c-A;gUH&/L*VHG_[Z&Ru;0Q/r=u.9s9b/@o(P
%!.Q[m"[mH>I'-/B#*<.V`d738>*?,<<Eoq=KAh;iN$$R,&:t6sV3/FBO^oe-d^KU"2u,Rl;05@6-WpWc,61N"G^1NT&$VPiKH1G5
%Wh#g;7`XX`8,gfEH0qJYPuUpgCC^bn8:4L;G>>c@Zh?\YIpD:t$E'GI`n7#Vr'<DkNOr%,$lZhQB&fiC+8#?5mB>@,9bR899;FYn
%[LN_BTJ[#>fCP@3DdftLCH\khVZ-l3%D=aXC,P=:Xa7*\qXqAM4F#HPRe<Q5l*Q2FYI&*BXiBD-k!>cGeL%YHjZhQrDiebtGGPLk
%ghSb#Ki5,+q)=K<Sga\s,QaJs_]Q[`Uk_EUYJcBO]MQge51@e("\9AZ!YV_8Q4'Jg'k.2?%K0&Y0_C5"$]<%>`R-/F"m(0&?$!4(
%mFl:7TQ&D]*Ae^I?pj*8q[!l8m<%p6jWh/Ca+R",5I$27an.4c@W"]49TOR7m-qj*2<+\m1fWs+r]047,&;.ARnH](T&g*!itJ78
%s.&ADjlsJs7=c_p2F:4k'GY34kuOK_`ZbIf3B-b`V[9f=h<!\=PO6B+D4Ko]8[1R$MrWV%PD/q;%T.be"^oaVAe[A/"+Zr8ET%Es
%)WN7Q7Zeqhd`@2:#I,A<LNG@km%)7)hrI#K/SL[kr6$mqTAP*Bd+h:o2MKKWV/M3S9@V`mVl0[l/o`.1eR;)%LIr-t!^0(HTnQ<o
%aHpLk%ZE#^5o*7tMq>9"Ur&f@N4"tJIJaUOkk*6-$Djns68*Hb>V]:9P_h6S%Or?o"QmT2jq7P@0h7$NBC]A2RmTJ,8!7=-c25TS
%0JS,E@])Z8I3HO?b[=H_18\D"dNSra[[jI/CRWSF!$"p7@X?W]LN,qsVr0%FP&-"RU/R2($tU>eX=9hVXF5P+,ZL"a$]r07U_3dL
%?/`>jeW1E*A;,q!e"h5s!mt)jIN'`'4&ftOL`tZo_n*]h&SPKI(S%P2KHQ-D#Ju@#K)jkg0+9F)`kPM5DdZSm#UeU5@?\-aMqA)i
%Q6.Bs;YEDb.ZUiINAZ)]pG`G@T+-CM9V'9ZjYfI]PV.f$]qHoT0Tlaa(Kf?HTu;XS1p&#,N`(0M^QE0_%u6a=BUu43lu,-[V8#AM
%Q_?nl,Q\XI":mme1ZQo=,q68;>2e]+fpWSt((:3edu6L/fif,.2bEAuBdu\IJejaR,n=tAA0Ei2ckAHsbVGj0VK7>@1#7fr\atNr
%NX@j8[1Ph1_M=:<+VKDmm^KBAVJ2/Cr5$Kn%$5&^?BN[Q,peYMKg[mLJE%AFY-]<N16nQ2^nCl2Yi\k9W^<.9=8<ei!!Z)C\LKf=
%(jOZKG`mD#=_SqP-ljpfjr/:t8r"8)3"1PN:oITS\4D3,@jOA_Oef,7[(]A<Nde&hetV/;Ru7sV<V/*J,HZXH+bc&;:6[9NNF>kT
%N-+JRSW'p$S$97JRFA6t:3os&/W>(F,fRa^@MVI:>ko<s=arjqnjcQg7aWj"#EhM<BqZ1M:ZJZuM_^'e:HfWK/X(A-iNO@e=$#R3
%2[YgRX49&t:%u/#09gfrrStc'd40&*?M+35gC85GR^\'.$FG=JF55<rdRnYYm$<3*0Xof:2=qu/kSG9^q+o]8SE/SP3G@8dPg'r`
%nq*MI(t"KW9iSe]%?IXK@tP^*HUb8#*nFm>XqhQ(m3@J9.8rO!"qJjdaH&aj%^p_;5s-)"%l,U!mip9T1D(6^fT+5#lnQd!!k'(`
%oW\S;-7-^;NgZWhY2tP(QK7/7+=S5r?riH(Bsb^%0f")nXBuX!V@X(f)hW&A$*ts40fbR$,#'($nj!et46X0%hnE^tdbc6+"l`b8
%.bN52<J_P*lfCasIKbHl*n*HBY(uq-1drkK7uCQ*cK?:.ku#YfB.N(a>/1Hc5D"KCY6C`AA%!^P%;5"C@7[:_5m^@2o,,FgACQDP
%#fMOYCrM(l6R^uGC59Y]imH*>iQD;9:=`D@+[gT)'TR#r>@ETD[cW))IE15:B9V5pBI(?6,F0$Tj-l8ZA"OOtAgf7KI/mrD`t0[a
%R:mobO8Rd2J9XJG[?O&dVU_:`X0$se,%BnA<[$$B>%r?[6lK_H_E5b,_bl:o_(:^g-&JD=D811KiNOT21:O(Mou@L4.41HlMW5d'
%=GZ4F,Dq(&^;`L_D\H,4\qa6*Yf3"5OK4&B\dEUIJB`$`Xn4V1;aMT=!"-q[g.D@c$-J_kL?UGPT`;R[+hg+fXbqcP""gGtJL1Se
%?g.l`Mf"K2D9Z''do2LlOi\=`p%b)='*Oh>JZ%3snf*1HRk?QI![<.F9n.d#hof?Bgd#>;9oCj']-eFR`6X"XaOPrZ&FVr*YrEX9
%!)K["T;?-oYdrnO";Mq]99RBm;C!*l^k:)AEg)jKpi%M2?387?-"X"nY'IJ.'!ob.%MdW)P0d%JQoNpDlI`BMEs9"FVXb6@7)7?J
%QN`&i]6<VIA9N\7,c*Xr!.rW*cE>?,,GZhnX)JBukpi+.G=\DRe1jN0q5q-Ea@`UBM1A[9bH#O">n-1!V,DJ<]]uN_X:,J]V4U,j
%ZUX>@@fkN_*Wr.[6eLt,-.]LXqU",(C23eC_mD,okZ@lU>`lNW$?M\U]X/XVrau$MnRfRZkp7':mA!],s$o+tooIX8mBeT]oWl4b
%(?W:$RY$)FGN)%uNo@u=n&mFnhA:T#54?[]D8:6iPI=9c5b*7.[`M^b5H)!UNP0(D:to3TmQIar8*cDjik:WW2!S^ejR<g-:/:CK
%YASMhJM*Ne2Uh<TYULSncB!!JR:_jYghG7CSR,a"<^/$tC[H;?8+.2c"1rM/Sc!D)rWcC8^fr-SETdfXkTFCJE?LAj[K>W!'Jc5%
%,lG%_cVYjF,-?!Zda0+7#\X^X'\ks+%2!oA349qQ/Ype3'8Zcn&O?`>4@0JNArO"U65(CG/P7"sg$aFlo\"0)*LqJPa=&)W8F$P(
%R?]Fer%.Z!#X/XVTfU-`Ad)&S*gh&"A^'5;rBgV)eRT(ji$mPL+In(+2?<ZRs($d-+pS.^+Xe_d*^FmiQ1#Etd/h_sjAZa7#K1sX
%8W"_mXq_QfBhE4JpIO7:8?=+?fO>@&TLd!Iaa4`CQih4m/hUKe:_C>,P0$-@NgRE"pE_R\"8Y=nC&oEV`ZtlI*oKoIOkfMj<gFsS
%I6p[L8G'jWP"#hB+FG0(CU>k2C^')iem7bg!O$Bqr)AORd<(Uj'bFs"#t[]7MPc`e:ISt[^+`t=8SjQ?J2FPdT2M%SZ3b!^ejopV
%Z;CU)LWIf4'G66G'[(3s6NJY*.EK-F.dN6hdM3c,X%t?AN#!qB&Zh@Y-]FN[a;0s?:I_+HbR.IrP4/HHSHjk-6jCV@DH"h01d@4H
%PthDN-ut_DP-:&D`$/8\.&K8gi_7sn7firLl'<?GAo<G_6.W0),9]]]\#Tp%e=9tSj@@uH$(VpLLO]LS)mcjg"4%(.%^`D(Zj--%
%jlsD_U^7daAhFO3h+!iY+Y30EJC*qq+HdT(U`dc"RX^4J#NOT<LlrqcG?TNE127QF/PR/Uo*$c:Sg00&1;9@3eZ2<[N=SgFBH[Y\
%dL7Q_N^C%lq#[r?:4S#TO@11V&=Gp!aH`'B]#E9pP6-f%F0jb#YJn)C]GT!p`n;W0L;H[!ZB=:+nb*H1.?H0tfE&mT7uj7XN?.ki
%6dJ5rPnTQ^:3*;$peGmA[Lt-(He4GA#$sbF8%<Jd0/GC<RC-MGQ\u7ZN9*Y*E[2NV\6HHMaa5-imhe;q4%WNh3YM),O=4BNTecBN
%c\sAJ#]NnWo>5\sl^aQTACPS)oc?]1Db4`>lTJ]\Co8sF']uCF"GDMGcQMEQKGk0NoZ1NoF`;qoh,*itT6qf-+]9nHH44Asb[tO-
%g+K".H@E$iOtb'"h<(@apP@Fc;opDbN8P>*4q3`1T?m<OKJ*J@%SmZ?r[6<e-Su<,?`P?8340T>j6B`#B+pr2E\Q7$Y7g:mi_r"!
%)!U.$iSY(&iCChu/TaZKS0Dtq#)k7_Y0j:[.kMFgb\/eqY69H<-LV%;8Iu%sa.,]"JugqU#K.fLj_p04@PqAQOcm<=/g.^$e!7%d
%a-GH1(+[Wu1@HWa?Ro8!`8sQ_n>n/R^8cP]Dr%K;'RHdQVij.k8HHn#m+arOkKG#o.%&=\^a:5RaQUdK9N]P[huPc,=;GIP5EN]N
%Aj[40SW`qM'$YqF$j_3!KTY:Gi(XW:NM2elnqtsdc=7`0[NJ3.J-+CnE)ffoB$A$d=u[#Va%a>7''E$TW8YaEla`?gM&cGT]h?Y5
%U+cidGpg-h5_]s\U>"5$_P\o[%?<_KD)5"L_2S`J$7Sl`R1Si2Vti/J+l7%D+@q32>>pM.!c13?=OGXe^?f".Y@U$QZE$&qXoLR:
%hN6)'M'kG"H9hYp7"qm#a;oLf9*.=>9MV"OJAO'(ZTcA`&W"OWmYBI'A#6)ehWe/e8^NSVb>H]^]Y#;`7-gh6cUEe^OlZHhY_4l,
%nl29'+=\(Z+tXJnLU9;q47WQNi#R+nanD;?\16J`"[M&#P2e#@nsCB6/S)VE$D>LZIpQr[nd)kc&OV`5`+"L+-WStH$;rX1>StOa
%&$p&WE.#pJR]\5<f[230S^Nl'+f?So%LecF8a6Z/&382iS5hRdI8Rn,*.,V!0MkeFChaQ8gP`Y[;]XhBJ@R&J4rL.-C9:P>86pUC
%N0=(5.)F.@Gq)<:aF\gEnB!frY")VWl!5#H@A^pR7(LSE'sG[/Bk>08c&T9>r!=a>3Ps?XcSJc)PU5,-`B^=799s\$ah^69/)h@m
%C3^QbIL6d[Sd\-=<jM?I"ViX/fVE@YJWL.3,SlAm$'Ap=D*cBb-h3jf#o$c\CIJ<lUb&#`2.O@Ni=EKVSo6^.%p9f.OVBK+^s,"G
%8m$T,)&t`(*sG#S65egj`+.;tSNN:ec4_pqF>Q]sT8Z7%an@Q\MiJWpQUa#3dP1p3#pQ1nJ]A5&d@KOgTFB4dl29N.`Mi&9o.$'1
%XK7*&VqFiMHR(gCiBtc<[m:^iejh%k7-s6cKT\*kO'>d_GZeK!$-l%A>\.^\Y(,JC-CRPUCb-_":@i&*A<'Cm+JOu--n,F9/FZ,q
%EYNkL[ZhA4`AAsRPX@IdFXaZ<&nOO^,,):&P=qh.%MNDOhjQi1dcj4$*ggG,]9Kq$O:F]W>/aq\OI[m/-56(+:2VN!Ek5h#N9(`K
%mNRI?fiaM]BIi=ng3O9D5=7Y>j:9ioGl"+!ilF6lW\e8pA"Z[c;J&+Z'tODp^![PU=:<oX'%bY9-7s=n`\jec?rNFGOHXtR.G-t]
%Tr0)GC!.5fYL_"(02urOY`SPoo!OZ#&s@d''e<Q9Nl7?`iu2]08ila]-C1Uk%U7&l`[R*37&UtS?0OcS9]mZ?-7MS?L0Ob]9Bg?t
%8UE5=Bc/M(I]a=U=oc.>JhXljZEd#'QLY1f65j'bPmOKI]7XEc";mu_&C[WG^4tKbIV_:eqgi;XYa*>'R'7u)oHNT'%VpB:H&5S?
%Pi2c)+8)$[!jo)&bllY2&9uqr>_/-&am,Oq_C+G>P-ZN*`],<h(?;%I$5[NW["%!o#_hU[*af+fg5[IiY`>PQ52W-XKO2eDq?aiD
%U1g1)9Y@6RlFG!N:&^JE@>)@XA\o"J"D^B.LkS-!17TQr#CIU=="!C,/Ksoio6G@jH^[V0'M#[C]HeP@SdPuQKh-g5J6+g(SO%-p
%ZD,7"%'EuF9Rns.N:j,)TpP)%g\/Al21fG6aZa2]pAkB+0S.7uNrG"_NA`lkPK"^O1<Ld<Tl:(.@(Q&K^b(.=O>C1eYfoBP$:d+P
%cp6%h#ZA_Y^)"$N3Kg?DYR%NC+eJt5TomM=\*-m"VBcer8WIal6)'GaEsu[[;jm^[!sClICOrSbKI,<Wjs+o%fJtEXk*l@i9%(Z*
%IXL6tU5T*T9enKVT9?]*\uqi^Ag"gXMUY?CiDL\KR0'h2h$N,K:1/\KTcsZeXqUJ?1P(qG8u1<W#M'c;(u$6D'/O-U8?#A:Yf7J8
%Z""?G>UFhT#c]7,4BSAP^/9"%9VLV<6RGuoZD8?Ok"?[m'M][FT)s]V;k]T4,`3Z_Q-)MrM`<j^UB9(HK*J!B_ibG*(`.bpQuO)#
%$q0'ak2JNI3P%1OE:_/]kE:fMOH`tB#A![57mps_YE+5rZUnOk?*GO#U:t6Pk9Y`jqjQB"S-tNA4?b6ij#1Uj8&p*qIRY]i,+Nqm
%Vms$_\VB=q@ZFZK'Het.[k8>aWisQF7MRTean"pYK/LdH_;[R4Ie>4^6sS7Sn^P.8`Ys+Pr.1$77X:YG>sKXT5Z9t'+b7""YSan0
%6,B%@Cd].2*o,*fq#S5d(bmA^o%6hW?S(4>1-TA]_`D5mYAb?M\0O0EOL7HW[HZf[%h";poY=&YX2i)c,VLk%$Ssu^2oBJKOo&0R
%eh)_l%pW_6nOV>k11.?s0RXU$O9i'#KjtUa#LF[%-@E@HV&]g$Xm[s.^nU-%gRBH.9JXCW5:o@-\DSI&'^#^Y+1K@'-!X^A'eT`H
%@2q!ZkE_tQ@D[+\7+.OndAuYu9hb64c4C@-SDb;i:Z0T_?OS3EQ6bs2'LO-#r;kqK1uTPh'>Ean,A$1=(*FKcXnG>>b/&*?dU2>P
%ALgH+7\gJ]/Yd;mn9-SYlQf?*UP^0sB_HV4<@@qK)%uCiVq`J6+<ZGWKk0SgAa:n2<09S/MOI5\3E1bu*c`MO`T%H39GjT6M&*i(
%dc&t,@B:gXP=+3h<%d`X-4qP8Q)mL(`\E"jQ=C,\cnI2?^s2Etf,5]i_C=FLN\YQ2h%IuA?b,YCZt4EYpnV-,o52g9QSD:[8-Ak(
%ir5E%ch/(GW'"!eX,k15a@t3WL-.n<'))gc)EGLM*$g;q$X2U8(aLj#Xa`nt:.s@c*_i0,$"(7&%He'%NNL<<:79:\ar'.J"%Q*F
%Tq?k[(]%-i/!Q!+RcC9!#VkIt!ZlmI+0G(B?Z"Qh-i[<fFCQ"XN8`eoU&A%.bkiB1R4(8$.,M_M76$L9Y?])]b1ZURLt#KcCAEMT
%k7XDjY`h;2pj@dD'(L5o/Ust2I"bKBddg0^&RSrgs#LJ].eh0e=ouFlKA)JVO5CVOoI]#:fmeLQU&V_K1_M"-QPu)ECqCde/=N@A
%TQCNP^f6dm*C."]'EW!k\#KSnWG.TK)gd@nfF6I"bqMpi(!M8s6<T[0HL!,QTJ2b]#q?%H5Gg9)2N=aH2tj+H*)*d/:`[ar^Irk!
%EP7e]/E@+9f^_`Ya#+<)pg(H8]D`i)L3`4!oF88#Rl(]IeG&/Hk-=C&3j*^2a)%-?=VI$^)ggJ?Nl]th>p80eqKA.B4SE&QaV>?O
%0EDFPcFCQ[a30jm,0/95dXomRC(!f*EQ,n]:/Y@/6T_H`9P?l\b(jJi$3R<?0dXgja)Ntk6,R2iN2\k@b-5hYR@2EPX7)g^1_]W4
%,X$pZhkB;-0B9X(P^]sIK-9H!I0ZV+U[a_c:XFAhqX%J4KMbsgqC>;'/E\PAO'usXff3Kq&MKNpocpW[b;COtcnQPtP/_':dZom7
%Yj]B7@=mpc*BC8cTc<%g'9AnC%>sa=Y!YqYh@J8=j-l2]*7q$+@ZG/$>gFYk'F6nC1og*7>^]Dn<LFWZ5$rfQ<\<)[-us"Ih7Hrp
%']/"9o76Ysq2hGfPBMXNrH>)E#^lNAU..nnMu!.]pS--n0^E=Y>#Qte3FQIo^\mEt??H"P8H-'F3]$g5ErU3U5"HPiKQ?$sX^+#'
%oEm6u#G;@4jH#!&W>cT[:8'b:0>.4hB)[4klKpnMn&R`O?hhEiWq)2#<c)g?""kZ<'uk2uH,kRc_Xj?9YH*)VrUED%\pW08PKV=b
%/'#&(]p&-<e<5#LW4Q@$2L:@8JiP#9-]JMkX6j#+FaCGr@B5luYD[87q_ud3a_3<'nrCm8He]L+;)"W4f>V;:jRCUo!R(*tRLiC@
%5PY/9l+m=%QM`sskq9`\e_f&3Cq\$d*W-^6[F0!J5O@.mB]kB/PBK+`h]ME/)0p$cq6jXlJWBPU5Q8jZOQ4MB^KQ:k/n8f!TT=l'
%@r>h1D]eSOhBJ-n"uItnEb)"!'G@!]WF[,!GRK5d^DOD5!lrSW],A6XpQ+?[c,uYYk;UY/-FYRDR=4`[)a8I9gZDV)[-3!%mH5M>
%BX\u3kDue7:FlrF9BBpHhZE&Q:Rb_tTbl:f!&6^ZLE+*cas"$e+-Q*[hWP,dDEls6h&J)4ISTgiTJ/8R.!/uJT[u96O26p%j9dFg
%N'*o,qpo3OSs9r3hosO*)LQBZqZ$E,KkKeu^YAYil'O65d5t[%N^2l7-lL_6cURd*Ko2ab=`(Uk_"/.ZJi)3cW?T<E"_9pbgk0R[
%Yg_qtNRZ.<:3an3!$kP$nre$qhlQ"1d:j\m2$_SnD.MnJ_FCXd33PL&hPnor9L1[`m`Xb<H#14Gm$cUi[9t%n,kEkO!E3pK3KWtq
%r)Dun:C\tb2m4!b$1A9\)tf5Ri=G_8a(D/b2@cE?k-"6kV6k(7AI:S!Rpo\A>=6&D/6e50kjg2O+th,7&P"">A;;pd9Fbno2;Abr
%bK*7<']EN%K5mT"qQj9X1I%6'/DH;!6R(Pr_fXE[qX)T'hl;ZRUOCL=fhVO2ld8J0f?CVnTj_/Mh/:e*#E;-BY;Z:6<pcsc*.Co1
%b/[t@P]#r[b/<+3R[cK^:90RC:OY9Op[HXi"g4B4n.$@Br8j5ijI<U(`QOD4bEg6eh<"J&9t=EQ??1Kj0(,$CT5WrF\*puQ[Y3fI
%_3A.J[UQ%-s/mq.H(KND8bqrHYhp93K\c:[drDM?3hs6_e!k:RV_S!8*-tt8'OEouM&k`"HQ],H.1PHSX*MjNU*[H=>2D:+&&)I^
%b\i.7qGt*Sh:$X2_%5nJ[st[+_3nR=j-RZ:A/@JoEqgej+ZAE3%8CScIbeqDr7Pbu4:nf)me^gMI8c:qeARA5N]:Z<?9$\rV9P\k
%0ajX"F3BPjg6S@F$&,]#o[g2ffD5YOO?`,O>cEDQ/'S!H8OU=+o)DTnji8qTo1Vbc/q;q4-6%(7NYU^d4'TtYDC[O0kTipFq)pj(
%VG5>/i:7YnOYnpHbtLc[V%V`JQ>HYS(WRSad%EOH+d-ih9M72/i?)c;Z@aP6oWBKWQkdk^8i)sb5N4_kfp$),V3t'BkLU"b:RYPd
%>?_5B2Pn0-"o5pM$C]Y4^2N^p_!s.c.FFl"cR_+5Mp>*A_?Y)!<4OfhcqJW_B3TKK>Cn:YAmh=#@HS_Y/'JD`1W.M^Yk-<nB!rBP
%!`4rG@HXh!6.%?iJnBb.n!j7n<p0eAFe"k*B4fck99D8AjEQd<_q9)7SD\[qlct#A1WfTfC"BO6jN#/u#[J]YUG<cX82`RdlcdR6
%s+F$RB%EB<F_56VT3j1VSR2G90sg3DPtNP#'pd4jYk*:ln&u>)5KL.jc7D%5bKaHD`((m?Xb-hKH-1gJh$N+\B%iYEn,Gr-:?9Dq
%Ll<7\*J&U,>Jg<=4[\S[9KW95>@D-tR@/51VOa>d0sg6b^!CKurHFPJq\N@#1W.L^cMe6Wo4.,JhTW,YZg7OS&ptP-U%#a";&g.F
%&-ej+9B9C&.Pe?ur)3anJ"h'5@\,bkg8mh4'V-X+]4,C.R9=b5&U2.:\hg\\bcElj^NSc=!5JET](8^$6"0[AXItu(kPJlk#Jg=N
%jrKn7r0_hCB&<>V@676FGgKoP^p._MgI1h)IHR4H_Z(;:4-&]<56PSTHf)=fAlbLkQ04LE,%alIR?_Dsjn\_[1u&$6!#RL:cX-t[
%S!!.:F,`;u%)VUGCcoPX`\Xskr,i''jRh*p*=D..&-ie7;BjGHB==A!i;SeEmDP%P7_W9_N.sALm`^VOs2_f\B&&dlG@njc^P-iC
%r<`O`R<@[G>XA(eY_$K<SaQ]#bof,5`4TU@T>-/,kD,RbJ"6Z(>F+Xj*e2?Kq/5llJ$+bmr]fP,S,RdSS%S4#T>'3]q3R^sc<ktQ
%p$0SpEK>I+7f2Xoilqnc^T,[*oIU:`MBIk1L`!8@EZBkC3BQ^_10L!>p"(s#bY6_HP;`/'*0=s[nH-l@(l`97YoWk+h(UWpT4c0P
%kFJ"MqsS(5roGbcRJhGD^]&$9:R41C5!C>62$VWFhY)?O#*F`-qJcZ2`gI>X.gh$t;eFm\a>LR.hnqo$s(.A6heS3FZr&k?#hg#/
%m?LGIdjmP[[13G4G2r%j\,R0eom^D9qECD.cXr^Bqk#2n>TWKS!4tLikkjspkQCD9]?]<^qdnMHn3EBnVf*/TJ<MWQ0_&uY1WC'6
%blS:PVG$5FhGpnYF_OkjMp'4tZ,Rb`DEK#]@;H]Ykf:NsF$V*>1R!C)FY,"6j+$0fhq0D!e@Oeo?C-tF]h5@"j@W*^A"r.N<jm^&
%1\j[XX0T/Lq:,ZX+o'fOCZ[jr/ZsLc55B\nk)qf]hf3U`rBW7<rEFs4T<mElr6FU-Fq_Vpg%-lr^P<Z;\V&V/G$B;Do6qtISB+Y+
%#&7s3s5-VYc$g!7A)4'qL!@VG$PpCa1DSqO<&&iZF8!X@"f=$"Dte#6raD^KH6if,mVUFENTitCP%Q^g"4Mq3R!rm&2:V?c[8pdM
%Dkk^\Rqj<1eqX14>-".d%GQ)RSO%,>fW-ojHB#r*QTht<V,&^il))#NC>.+C,<\%HG)$T7/Ubf?=&7^kZb=b#l?C^DT6C3%56mtP
%XgJ[#Vo`()<;Xd^D)QjVfhT,[?Yl@*<]]'6QHftf3UgbE02t!GG,*ZEma*!Pn5Fi-IN3+EQ0cVT2bpt<m;/no7=KF-HC<SrZhs'<
%It.FnVpa.9m@a(>RJ?S.DVngFDC#6Fq&ZlYIqeP;CU;a\F:63>\bOUs<BVEs1A&:pYKS-"1&"mb.PK)&.@@6dXjo'E5Pr2:^OElH
%)j9p[rE_W!32I@>2L6QaqW[s-;!XY\bGsB%F8.oqXnKU#H]C2$s#9&]rD,Ythja2j=_mL]J!+_-:V3aq,Tko5S(Y),([<e:,X@^8
%L,hs46OgY)>)W,Ug'=J2J043ca@FY7Mb\VoB-(`pO,?@X0/q+`fJ%&ndDr%?)uK1,r-.T-VYN<m:GW%o0l(_)kjEE[^]&/H51I!N
%2oj0/A#PnJhi,1XFOG37'r&A3I.pcPZZ2(RAEZh$NE45=;u*IWqH#t,B7I;ZJ#n%"AUh%As&O$.20,f:qV1VqOjOq[ae.a58IisL
%_,>'j'KofTU:IlM>D6_P?aKI4,(fKqY%=WQW+jDG/`eJarYQ/IN;1QCMLO,lf()ZGT-(5uqVtp@AYWV([hu9!G%sJ<-LFH,ccH^l
%P%/4.OUoe86e2,+WeJ@`6N<R%j>jFJ&?9jt)=FkP2V]9g=3&_dMq!g@o5lD:O[eP!7bSFa%h_H(JEFtR7TRqGDn%Fj%G?3=MO$T[
%`6_<D>J;;.`p(]K[$(u&fuMM3kNL7[P!;prec6]f:VNh[:C!.*5<f-k^7j4H*hCf.2;^HmRO`a&olIJ$B('j?iRsCFju\i/og`(>
%#J_567d.NAZ:Oqis'E-5d/jQ<^#@,*:?]>#Y#P/bDU2)siTF9#s$+ScY+P-t^`"7u5H,SmF0n+L'<jYi_]*=$VtKXUpX7d+Ok-so
%6UREQ,ode:2ebpLDnDLI,oUKEdL=f*6R*9>ajK#Vf+3!^F*5B:PPRWo"SYI*J*)J?9UcYA[FNY-j&W9p%X@M"?1)5AHXc2]X0mRL
%@F-IE20AZ;L?iKU)Y(2`7+h@%<fT@`m]3fXLBI@"@AeD#`\foulR+hQ1_A2,h[#'mXg<2c0hm"Ml^uqc8uLE$nso>iMUr?iQe*,b
%Tmp<D"7bcP2opL+k?dnfclINY3=tAti-qMJD<#;3#a&%23Q92t*>W&FUY,LbRnts`XVmRb;)FtY1g2]N42V@^_pOo:C//MW0NN6]
%-%E:bHX:?td@/@+ST./8g?3Uu)6IVDf,8q:VK^>;rG4sH^#m`4+?-2Y!HKX$6cMQhE)^odrJC31)gCM2A"m(#2E=8_)7mY*(T?3I
%itlC%8+($nJ34T@HtoFHanD\:T*b19EW9DGpS+_"!WSI!#O=j8+4=INMpsa&o5W+@\Bk([,@Qr!>)@Y$ElDQu+)FUL\FoN:^XL'#
%rdSa#rId\ighNTB3&W65$6)LtPhg&h\RQ*TEu^K]mC)q0e[2l40_@k\,Q?mJ'K3]!C8[rGVU;[BAO+n=6E/Ss:MG]#s%l'8k`cR+
%[8T:O22?Xg2Q3&7]nN6^8g8`HFC,frID5[^8:ns5?7a>!kHrbt'oM,Vlo"O`#3u"=PtbIus3oS)d8tA]lGq0#6*J\e>"LPLnn7mH
%i+ofqJ"F:*mdL*Wlh)'R-Ct@6jQleJK?gB[nV@*('nL>OHJ4henB\lJ:pgJbEp5![YdFt<)Q'=q]q;$Oqp"hcBs9`p-dA+5C(+FQ
%2cFfT?i;Gj`IC*#p;MY>h,#qDqlRk;4(F_IrlZ+p[iYtOs.''j5i&&B_5!XqZi6V=q@aiu5BMb=n(1rP`>r^eiUeYnJ$Eq#TMk_n
%mJ4/uErYXd5Jd3q)k?!f<jVek*94J?)a2nMfiHGdp2L1\i`$S`<;e8kDqg-3I4GRUmGPaK#@mhE]RO,VVs'`447f=nm\Sb:cZFO-
%BBb`Jbe(UL?.uEa;g%El:XZAp;g`J4p,`@$Brj6'#;:EuUY&>l^%$l,)PMb\j]:QG=)X=3qY3(H$?Oo!'^[ks$u-Djn6\+$ri[8^
%rBP3H;m!T8D&/tPLiTQD35A_Qah9g1KrFW)h,:FR'0t-%[5aN+Uhq%:/?@]R35YKpDA]2L)L56>[Q`k68[YW%8ScfDi_)juh`l$!
%1s\o)RuMlpFf+$j;6l20RV`j=CQ];,cFTh5(c9s+?=BV\!-q75B,s'5h"9mred`1qnW8C][+7GZ4WO=Sc=""cXjp+RY%o>YH-gER
%CS@@C=#p\"@CJmFL!nYI;qS2E#E<$kJ^1s;ZkaIh2>@RUc-s""`oE2`DH*V.#5arpn"<L4<ALNb\<37]8qs9BC]@Q'De7f5I,FVC
%I946;ljk\3Ug7T^P8.+XBm8hiS[1W@W7O&q?<jsRk-?mYR("teW(7hriHES(kDfI\3\'K=DA=Eal?H'GI`%^C0=Ar->4kFro!8)7
%Re$#cco#+@UbPX4m6pkrCM*%e^R@)?&'X+2_gQ5tEl3=ieE!*IC#s.jm%LE;*pNXV-u:jA1FT=E1^CGeAudre3c[,Pg1fl\p<d%1
%W);42FOQZ(^YUF[VOOjIC3E<eTYpcL[-#Gg?N60Y\k1X;Il;UYR$KCP_CWT*Ze[&%M1"Yc=H&GY%ntT_C7#Ii:t6U'5k.XTSaY06
%[<=^$-ndOIHMHE;H?E9+3#:'aIl:KPWFhW0EB\RLcCL3N<mOsOA7Tm&]tP@%o@JgHGF>a)rp1]X=b^LCX[_VJD.$\bhPo+13"#QY
%A+mRhVF-@">'6c]rpST<Zgm;HKTg"3DKX1eCc8k;Xa[]EL3p2]l&K"5\Nasu4j!_L&V&*1E$JX0_o`EA%]<]0fp=bG>N`/HTk`?8
%Ela8DXYRI!LX3MrNNGk1U3/q4F'4im?+>uQM@6%<qt"EDj#e@Xc=eeYWn'cX@CGsN.[nUuNj#5$?J%JVG5'5s34XHWo6P$5p\G>@
%Uc2j(PCkA'RCVi\J+V.LOaP=ge)Lm^_5Ek&[J"%,OB\r4rfV,BZ6Q6nD"F%ZoUG*\Sg03TU_'\hM^4@g79RHP=OH_ZF6Ga1+%!%Z
%f?]%pm`Inpcd:JseJ"$5U"2ESbB3Br]"CP=;D7=`crDN%"r=%3lH,B<UPsWS*nrCcN5Tu&aa6$4@T%.@+d;b$N7i0"jfp6qr&oD=
%g[37D=o3efK1ZC.a%iE14!g.2XdD&*K^lV'L9*a`e]+<Iha(]NCSBH<.REO_c%m1soFPfd8*Zk/3PX-A>:,=BCJirWrid5WhtS^+
%^%kUupk=^n*R&_R8+RPk5V".PP$E+kBJfuOVJj)Rih%#ET=)84qUZ,+NDupeq\P9pWAH;\?n.pI>c(#h-hI9N<.7-0I9c0+<N7!$
%n:Gg*[KlC/Xl7s$=K-eYTD$O#oWeCC.jpQUgfsaQIF9'>eE6aX]5^fnl,r2=Wd!/`X`..6QAo+H2AeYp7On+mCZ[ZpjGq<<eKDK$
%>a)]3110E5h>(JVG1'3S8s%j^BYCCml..q_e`^?s!j$B\p.a9@aRba7D'L0j;)rFDV`QG3^".)!gAYWfM:F4AWp?SY;e>Cir768S
%9k3)9H:E3B."%E:HLl1;_sP=5cGbbun*0O,LWsqY3Kl[>jHrCm[JgR<CL$LT,>C(@<t,Ni@peF1>05#VR44Eh/f@SMV[qi8CRU$i
%#8k3VHhqo.&#Oiib[:(bq:B<Oe;23.oJdga=`ofIBu)ek3j%,Z?$B_!8S,.V?[gII8>(A+>ru5.U6'iNkVnRV[0`.[M;nHIg6=7<
%-Yqk2oS"#qrVbm:[!'i2KXt'\2_']UGN5.p)BiWFm9S4H<)*%=I6gh>G_($a&1MC][D:9S1ad)XI?k`Z8#oK;R@mTAIFtp4<U3C'
%U1hN(KF6S\NA`Wm.JK(^k1iqHM4NcP1O0)@,ppk;KR_E65[C_FTaH_aPEVIHc*h=c^ru$9Ea`:@MCUB_mFQ[_MZu2*I`r;F*un5/
%cH_G!.ee[OjiaY7SKG\YohTA:PQ"+rVl6.Joe*G<Dtt*tLKZl=FrT`1=hdi$e7i*tBQ&fJg$Kf'g)$=]'^&52[.H"S,">IG$q@%s
%bW@L&]Ca+g.OqE]WZFlWX?gTb;f+4+LmhRGN2Dq5:r<OS7-RVq/[ZSjq\OXMnr+E2l_e)C4AN5O*J0h0fm-1]rOeuiRk<9Z.I;-E
%EtfpSs$F)]]Gf/BNU#fco1lnr5ONYhc2.B_>L6_e`eB7YrAWB3-VXr,3G<s<5%"\7%lQi@7,p3eX_+S?:>E$E%jZG<Wp)jL2u%Tp
%GI!g(S,A+ue?nY9MqUmEIYDPUHZZ4"hl^',S]NG[@L:6&UGm1nk3"Ig_)4c%V>\]3Qd!70Y*7dq&*l3NLXi_CHcl54GQiU/Jl9YC
%JQW<(_e*N)]s-N&8%N*mIbW<(bZtjAF3^f3])D!u5&nZnLGRJ)LV*FXT1thpV0]>O?Q6)u^,C:9g9`KcXN:g?lC=9T<k`FB[P'Jr
%,d#T4Y-mTX+<B:5;s]=^I_K`9C&'ME,!W?qY).5d1t2>^0Db78.j-c,(N7'NIIKrQ:)7C.U4[76XM.</.h:QNj._If]ZA!K'%-"H
%CL#FsR(o('^!Do-Dtf]ucQNutZ/2nn[IungpPm4cE^"l!ENrs:Ej,$o918W=F6k7:N.:)s^28&>eduBQK"7\n"[f\gK,%0@"P$!!
%b^++5Ro"PPYu=9.MknY?LZX)76VT?Vk$269BnGM]R%p_K:#6b-knPtY9,G"Y/@GCZ^1dL9NhcMtE5>HSr+bA"[[/PebtG]&WF08^
%[l9<FSS$p>;s_HXJf6]B05o152iEV)p0_aafKMJ\h/Co6Xn3[j4uR%WU"2"]o=.Xo1L\,T#rpN4Kmt1'g4b"C:FrnW]9!j!EE*`g
%I2!&DPPJ%4Bpp]fmdl_+ItqD)[<#C4)I^6cNr=^&T)>t.mKgI-c(P[(/!uBoO1%cT&W1L5;/[/;FA19nXkHiaX_Q[p)*GH-qIfJ2
%1iKL%V0stCNI7jFL=KtRL!F-#q.@B\eij,2chu8t6+tn:?G=N`gC+CLSaF&pl(Vlb&J<JC3&t`_F$QcTT&RI8B@`N0%p<_SnMBm%
%'q/3B/l_5HcLrE>FP;@A9]6ZfC-(,:VUqcoH;1*s+dH$59GVr_7\p<JC)tT)Ih]9Z['O+a.=]Kep;8T0C!FQGE[,TJ"1\*hjj!OD
%+1taf[9.d&n#:[*A[/o'H[L-es/:A5l0>['F13XDg3iqpi:W;!i;3E6f8h";pE&-ts)@<"Epp(NY-'b1UDpZ)?+6naolKfiT(W!O
%ihuT6b7F#`qoeqNc@Yl9o&BMR?;g+RTR?Cmeb\h=YH_)A/j6:;kN?b(NI>U@@+Tc[XKLEi+23(aW.+_Jp>-PQPtjF,rR0ENi:u`X
%i;2,Aebf;>q/blQ)tTK_U%NMWinJnmj25j!eb]lRmE5@Pq-VCu]DlmH_9(u_jno#Pe%=.W2pPIe*ZlAjcZ$Nts"N&.p$h"2YhWE"
%]tJnt4s![`_fth$M#;8!>.<+u/3eB$l]&Qu1qI&iFS)PBrpAj7lIs).[;n"ur-N.YGeG\gG[!6h1S9LgceY_,eGWHiQ"+`NnNlDo
%Hh2.N`P"M(/lur(?EH'0mQB9MHMr)n?E]pXhjSaj%bHd'e$cY\$[^.Us1$tao^ng3](+ubZ$5r[=_W<Mjqi-tp@@4lA(Q)T=PW_^
%>\_l/S_dXu^:4`GITU?>iBmRk/bSCEp>(r0G5B@-okAorN*LV.&\`7eKDWp96Hr30rHr=^Gcst^Kc?r<LY_VBbE]I?fAE[bMg_gX
%<S-(4f,oa4cDS8bFq3BdGP84ijEhuWDjW.?%.7B@[(Hq+"L$MrWe]]"gHe[Qkg%#UAUhAl]XgpdE-(^+h02#0-GU]enL^hO5%F![
%[c[,#h1r$Ao\U_&=a;@e/,**DOLI6^cC.nPDlpV^+0OC?WfN1+oL3\a*\8@[Idr9$RC:b\mq(0J5%A>mT;G?XQo2^O>M;KIL;u(L
%>.M5biAO3t,;49XI'/gEX.Si]%i:gc=fKqhrE^!-?b^pVUq6<)[!c1$PW!uo5;-k8/s\aOr4%+04EU(1jm=.NcI,RQ`B1G15Fl>'
%Md#_c-cr1OG,g=%.gI%loA83g]+;(u^6)R8S'>SHp?]CQAaf$8e`C-+ppG>Gq3smEV9!TK!],IQmbKI=i_Q>E3Sa<*cmM1,PD`M1
%cRdpY3h'?U[d:<meA#r$kHWR%(Hi3#43NQ:KAT;U:BtOmUH(*!\Y2f2s)%3Cb-l;eI@5#>7Yg8F1N';>h<a"$*!_u%<q`X#GH-X/
%n"/(^=B\C&+sW6\a84iEhG]nZmQpB(<G^?$o@:7p@80MuRFQ!:bNZ@]b>76_X-LT#O_$c35?P$-SF5qnSM1S8bH51::%n-cYeKb4
%r+,^$dRYV,B1tB*0<:.0DD]SH?9Q)4j'%64hfQlm4'Jh*rpAS#EVHs@353#g]bhWN`O10XYgVks"!4#PpD_EFlYB;%IP!JGh`NcC
%HLj$1g%2gK:Z"<0^3]FfS8#/%l](R!NsC":VkpL[SlQYr9670)K#:egK$sAacI)4.p0)<U-$o78I-/7NCZRoE,2JN2SJTT:c/AS*
%1\#,J9)[hoc/]8f.'8pXdl61A=uU*Ud]Lr0X*Z4$moAb33=9\MiTB[$q9lV*Xg\%!mR0i#ln*.22d]V:^MMXl=3-r%e\fh;:IA4#
%k3D6gm;'c/LcL"?%C<J?rK4iA9)o]%L2NU<j*/_TqREkPDnE_o#4g:`Zc1i$IeVf!i:=(JXaA7Y9!e?Y!1g`V.biKdc^khP+0>7H
%q,d:PkY>@IDa.UC;/SP)jtU63Z],kmO.(:*jdl@(E9#(39mcohl]QVdg@$Q;mGC-.m)PCaAc1:MZdS4eX0I0SOaV/NngH):BKe6M
%OAod/I[4t?<qmqi#$^E=/,XOHO/H?`TWB]J.Qo2_L46D=l0Q+LY+Wo>SC"3qP%siq12=MD?6l/Z#D_3AS2UCUqSXSYTK*s-',uMZ
%Qku$`1$GV/)9p"uD51p0Dp(>^GDqOp)Em>cr0[s3?F_pUTR:DbIq;+kAYU]>d5i/dp<hm#F:bl?V!2M5jEm*8i55rcGO!9eR0iJQ
%Oi`]?0OEGUfb"_En;&X#?eJ5h.fK#"X:aSN_\;lcd_`V8>,9RD\$TN5ea03:[#)t9MRA#XlY4,>oeO+![5[9/f95ck4"(u/V6&:I
%r,U5qNbhkiR<0:47XCL5bPgCD4;r*4-$tr-*VjG*2q\DZXdc#`I@)Tm<lSO3->]*h[##ad0d97jHaCl"jEmdFmT^th>VmFC/-1]@
%qXTE*:.'1Wh4rl9(c`s)BFiNEYa(\DAD_jXJ!2<Pq\fZ#o7uHfs6T#>(misQc,6;h7c8[F*P"C,gH3a8X37r"@QsDY`oB3</H/n9
%P??+:h0?082qYjN]P).e]=YB?p.9;6'n=QO(cb/r</o&P_h*X"+@;'uQ1*k"2`io)c*MG0bK,@Ghk-reKo>EN=%hu'mn]o/%!Uqg
%eHb]6W:SLG=,Q_^^$;po?bH;Lb'T,rAp`idBksqr\oN"C@;bkDXjuP.7Q8^T2K*6nR=&H1rUuT+b=[&4P)W(>VaFs(e5StO_gTd$
%+Q6f.ok#ZNn8u#5[!1\o8M;Lf:HkqHT"TCQ)-YegqSpY;rl[c,A]",5Cp*=>o;QIZJ$Ea.Z!K_Y,>g&^[P3+-Z14oApo;*:d+ika
%7-^$j'bSGkkI:1%CJ3ij9'.pTD(/\fkaX'\DbD`bX.S;9<LTP4KuLsY)b3Bi]jmO?H2'lHDB<oH\md!EWJ%n6qO"r'$X2H]CFL=@
%S^_WJY^09]rCFZlb'j&?&`@!PWZ9pPXXl:N0&>.T)BPn%<TV0#rqY)<>K3(sT8/CRS-&:^pH#Aala$5,NTODbT$D?ITe,qS+)F&R
%61N%GK43RYf@9SknZ632FDuHsO1g<gp$lpEBXIIJa)W5JcUZmilItV9,<Cdd[$B^iJ%Vd&^:sKsSD(#DkOu`LCdkA1\.W72`'->o
%H#hd@$<KH?]Q8LDV1&&mF!El.OsTVUhX:j@UThK3[/=ZKg%8nNoS"1bc?=,j?G5"F=fpOE8H+^Qq9D\b4?;0RYh#H6G;Ds>e2ZF"
%42K]ON^$d\J+qp^]tIs)I@N7F3<-(-o),X&r&5+lc$LO5R8;oXBB`UnLX]^>h*3l9=h%C:@)1Z2FqH-V'>AqGT2l!X7=Gnok?m%n
%Zr?jbHso*A?@93YRo(o$Y788EASLK#_.PP_90Hq`osL1Y^e%Xs4*)<BG_c2!cEp*^rA2`@r5p"ajtiWEjrN4TQ+a?6^V'@<epPcA
%k4l(9((\_L5*r]bf65CTm^K:J&'M+icBD^`<f`\1?r(R?Fq2i&2g/AI45%XL[nXDmh'"$(`B2anK$qp/^=V#KF;sCHJo,mg"hf5/
%UU@U8p"qcR+7=Tj1]GNGX9#m+Y3365H%#.K6]/F"(d's^c>Oa<Qg_]aI$3>hgVIg/m>>'\bn;RN^N>ppKsuu`acP@o/0$T4rIH-Z
%C[3$CQh37cZfL0/GKQg:+6$HC&k?8Qjd0WJ4#>Z]rKY!=K#?@YQE<>%W8RF9?_ZZZDn\%E&"i21/`2&iRX^TmhkK,NqliHJ(4U:A
%2gE3+kO*DnC<[W=IS_tEphm@jke:<"N"K<%pTC:8WBT'cr`f*pE2U+XD/R'X^T[!,m>of8m4&O_/,)*NcV"1Wl2=5&UNLoOMGe6P
%d>\f\]#ML=rIl%LV=!qem)QUqhY[V"bIqA4<nc22pisRL.69;lroO^Q-7AK-rNrq>f$4%3,IVuE]t1[t]J01^kM_b+1XekGQG5P^
%2mPYU^<T?uIeRO4I^4#jbKMe1:>>dH96#*W'Ajl,S%ZSNk%*pOY?Wp\7BtW/[1:HU3I)E']`3"rH*J=Cj.4YFS/YBaN*^YpS6LnO
%mN3G8Ii5H\Y#r*kGILU'NSpV>?*2fA<cgL1S9nV3bP,AXC2q\mLX"ITU3C+Hrq=%Y4OrVkc0aUGisXpo^X?A5hI""3HD;6<$JmtL
%]Vt0Z9#\dm\So=ic2.>&>((Iem(IBCA$c4"qDE>^=KbcgSj$>=T6s`]W.:r_3H(5<ZXE=Vn"mqedIiQ,GeZ=I0g\e0:A-.L#P#7?
%7L*_trI`k>hq5gjJ$?5nn?+i(Q:ou,m@1k/XmTK0\Rg)3pVY.Oc\":'QK(@/Gd+J\^,'CcF8u&ApO-b&qrY;[-1be%IIF`c[<-8e
%bE8=mr,Bq2H#e>@;Yk';a5o0\#?Ru#[f+_"..*!i8h8Ym0]"pL]g'Z;VOM/_ga]fMC=&ep(Ye\m;mFU2C"k_1:6ltam(uIrDRHU9
%'Ah+bTA1>I/UP+E]md9Z_7MR)?WI(EHHY+A#CbfGm=eD5<]^$c(bBlM5<adPe9'>eY8[r1?(AUg^)^L+Z$Lb@@o.K[CEMWO](G@.
%61s.m^,P-C0Q!:8L]5J\U[0h',J!EdZ(KdVWUE37hn(O&T<!b;doLVk:@grfr^ZFnC8ob_NAf:K7=uldLZ&+IQ%]b!B?qVML^`IZ
%g+'8.fS=OKpIh!j-+!G[c<LM,$c18+l!ZT^dIjPU[FU>BUStS?gPjFu9cU8+eRr[4_9b'FP9/L@gXoe;[K_(jinO@2fC%G#NLp"c
%&&jR^61,h,5<asFmre*Ch%g/Ng^ZOpm]Y^k,;))!LW.fS[F8$$r8GWfe`t0GXjn@rc^Ze0)Fqtgq43jh8sPF\^L_F%*J(&+l[#C<
%rr:+2KAugrae(l$Ru^ugra9KC\Ds(GqFSeu/&,DYlgK>AR:;5;QdrkFNg!joE,kXMcYT_MS_JqS'Am6UH?oS1qH9e=r:3Th[CU%p
%EqQ>&iIr3n[G/Ho#6FGX<,5^!5<Q[Mpg[hMc,j+knmHn=UKIZA^Jd=iX-5;\Yl)-ps75qNDXfn!mWDS!gqFRAl,^JF1l^T4I?oeN
%\A"_e]\r&?HscKRMFYtWik=5)4b%jUjfe7C_;X\7Zc@'7VR^5EICP;%Zq=R"h*Y$fS`$uPo'()?kF;O[r1s39h4E;J_p>u8+4S0H
%="cL)>A(.1nI*A*<S(!8I<1I7:JDL,_<N,gDoCg3"Y]=/J>'%7r*]L"j>g!=N@=3Ge5u?*:PtLggV3LGj%A^"[GT-)GAlX3lu])c
%A<KG9hO<\Hk&:;FDp*"5Z+f4L3SZD(q;fg;,EAt@82"ZuVOr4EhQG]tlScoB=kT`?7Np*Wm]:Fi(Ra<*I\g'Dr-;e_\p!RX:jkA`
%[gIWMRWtDrXkG3MVNo!B[;3m^T>J9&6*=Lc,i#DQgUhobeT\4hlHZ!31[Cr^rc!=42R(ch5CP;l/X"s-Z),0_s2Co7Zdh9(3N#tn
%DX*^@QX<Q^NH4GF^lFbD\7(r@2g<6q\a&.ume'uWCp::Xf:$%`r_2q4]d#<XrB'!::Ns;+;7\hM2t$(ACP2ho<q:.alGWCcB+(R"
%EIRs.Je@Y+C2]I9\)70cIJ3<ns1c2?l:RlZ)MRXP[J18A+GWNV"XKk;@R.b_+Dc1i!RH,LS+GCLWh.]RH=dH[k$*0a2tRMah::&@
%\uP(o2VEH0e/(if#Tb9'gOHqgPM@J5q9`olld,+13O$5$Xi=at+)gKN-^Vgd]enCq$F<UsL(6c?rV0#$!61JPS*]6BI<8W+Y!&Za
%Y9m#A0enrCBnBQ$=j"&"a`:e]"!2#S?Z,Ue)Wf9DGQ)j\qdoCHVUIbWm_&6m*PU&JYK<]dSlhW7DuLa+24#Y8jT>/T70@,OYag\#
%2UQ<g,TKKI>3@5Rq:J:tC;4>#]Qj]r82+@cI$TgZU0`R)DnC@97;Xc%q$bL8iqIJp#D:*f;<d^hZ]YYS0[?OZcI\X:eu?<$\YW\;
%6!q*KrmcHk(Os;?Zser-Xp"LQp"4]3&&/iCFI+Vr(J*Su=%$6^-ZW<.od8k+m>A#XJ+3D-(oFa$(tdFU8F\5HJ=X_">NtBTWrrc,
%#oNB`:PFa!F/]LZTfH$$?Fnl/-Xk2A@uVKm"P38!H)u2Qs236*OC/"LdoSb`b!\QQG1r@sWH7H<UpNVLk4u@WkNb<(*)3l%Dh[da
%ZKP<&D#Pcq+3I)4iN,cU(fCpH5Q,I`A5?FhAPS1)mPY9SX1W^9>"=qP09[eCG4\mbIVArT$pAAC[+<';\lo%/R3aRujKs+1g>=Y*
%II!sWIlP)%ekog/[a.2t5&LLm4,qgHAiG8EFhO?E*CdM92!F]0G5Z+h)j@LZCS@O\Ir#=.o`qG:m2:<4pR2!9L\Pf`ZC2Y]ANC#_
%4;f6,^WMap5!$4j0i[#chnAJZ17nf<I-pq/?9l9@`VY*^m1!/fB+,aLFV!VNcr01h5dUEkLH6aZJ_X6dIJEZ/^5Vf)KXsBS8\TS4
%LYKB&lR<7NL"BF,q!+p[2Mh5W)L;1YESL"Z,4\\3C4lhUiF<O[JaTInma`Cbr-q/-QHWqL\#YW!.+S)XoeN%qiW#;cs1Zfd^Y^DM
%du?rBgc+j$q=["A-_A&$[0TG`ZgQcCD$);:QnD/q:iAHPA^l,=5IHD,G&<mN'cTkY5nKJi0*Lak;'07q@!FpqfuG%$MlF`*(uD#5
%Q])tUJ_A@<r$4g[B6d@$E2J%-%sGq?jh(Z79(T0mF^>mdU%O>t;^#=(:VZ\Be#DDh>s4jXlAoT<=b$&mET%EmrlJVjh&dSp;uZ:P
%gUf[4YInnt69e0%_eOtQUmWnuL=+Q.J-$dM@O3O:JP1LJOMDrYN28c#>([,"/(83Ppt:&0qE(]>*hS_@TV=pAf@A,PZ;nV!._!j&
%C?)TFp%FU@]c$bGn:PL>G,cJ1;gJ.KY$?35M_Qs8lC[40^O5lsf`dX3qFadY)&_hpF=PLhrod)?cl[-('`F^[Qgi$K8lmu\c6%E/
%HO5qnQZ-sgH?)pM*'[Hu8GTD^-;r'q[f>Vk6>nO&C?E8Aeq@FNZY"M6Odp!P6><Ln!+25agc3Zad0&-o>tseEZU\7u\r]5DW.JCE
%oYg^7&?>Ko9E(-D4YGU`^)G[#M!aPI[+P!UoYhqLV6BKK:DVH8l2BQ%_?<l.9t"2L9`7An3ErEml'i.jC2<-`Pe=8V]'$i!D-ci)
%FO>QKB8'_J?bJV0K,WQoP4f_h;_O:#P&tMl9#)"R;SU70\B(p,eBPum]q%.oT@cHk)OK&5#1W:r:?S?VQFEd:FJ\s]fA*t%g-]_s
%pO`^G7*cXdGCPB^"_oD%,Z&&+b0l0ZoCjtj$C!QN)jdut]b_/S&8Kii:l/DUE*SA(<9_Rm9b2Rfb$Y:P6VY7dDU)B]LXV$oc4pFr
%j!jpE9T(r24SI5)ccYu+$Yi?2]'Y"#6f$K*c%;A!e.1d9pQ=>60]>jmp>0\udCnB-"p8UdC[:0X-=[QdlJHWAUV2Zt<K7@:$0ibE
%,G!?0m%ABYYLc,geA1V=Ure4GL]:WND!T(^aX>]qc<Kl)!ha/>9i,K=k!6n)59;RG:&V_1SBFapGAdp(l]c:E>l,Wk,1MF&N*C3b
%)6$Msm%ACdO$=:)<-46Ef,mIC?mF/+me$JM_B.u>nE)-]pmTo']f6c`3`K?',N*`D3g(=VD^FiBi$-BqqE)H*2fCKq:iU?T\G7Xr
%\sJVEj9l@\!I+2J/D<I.kCQbYs%/&4"Yf*'?H95N9W6S)d-_YWl77&l.m2HM"Yd:-PCptas&11RMrac_jtRP7>Q-d1aFJS<iZ9/`
%&qMP0H&U38NGa28JD8gFI2%#O-Ig<>6R6@NQ)G[LIfFNDke&(sW+GRj$N&5qm+rC@c2X1,i\1=WV*KIP78-O-#+:N$JVo#/_.'?S
%Qu9DIc%""(#W65MZBr\(e(<W$J@[s$caA5mbpcKPV5Ok=3Ag<G*H$3HD][kdSj,(&MDMDAmkt_l_TE[=r4trQdg)h2?SbV3,idJZ
%.Tm_i-uS%aS!Sns19V6^h0.PGA'I7:6?W9\:cZ^(YJe&f^"QcqTH<rPW!J,#Gri&t<C,C80Fc2Yj:;0nT8HDLETU3(TtfH,Z"E_s
%-ST*qjm%3QR/6HlU*$c:>IWnHX"Tt0ffm.jkV$&0NZXnG:QPJCcZW)aUiFH'G(T\ae).XLm&(Y$\X^RdQ[4?PRe;BXo<2*Te*/tA
%W)BeO[qt**DWXH;HM:p%[&`BTYPs--j)'"K*M0.s6?Z-^Ug:H9C@%SMUi)soVtY,';te[qOOU%eB(Nn2_h@h"7"2D^IO\XBLJCD#
%$].)Rp<P6L8RanI.>hJ-8E3Kqo"3,<k6'UK"6NO3+BhL=:Bshie*Z2T)hkY]R1]9!Y4c:OqJEOcOQ2jH[Vp[Y/UiKL^4B-%Ik"]:
%G[Aej[)^(IAj!F-QaJcd>"KcAf=!#](U[05i\DJI#CbW1ZNF6AYhJ<s29*4U#9@UaD9VFMjD/1W<?Ya%2s\9;9BQLK38G:#Khbn(
%aj:`rk$$OQK>cCgHku+B^<V(ha4\c]R&@W)PUSa\a.GLe:K%6,W5.?_4;03LK,@G6>A+8tS"LBM8d=(c,Co0SK%BfNZD"!5`.X"k
%cnhMr2;dZ_meOaW<9[k]Jsu)&":FER&D3^2N4+9A<?tCP1Pu0-]qB63D@]_Shm9"o2MMMb<+6fngJ]q'(N"dp#1WXf!GZ[;D1YAZ
%%NWZ!)_dq:\c@W-O9P=4!Q-9T=%5?t1gO';N(^dB:Li+V\=uD\$;'FT1gT$@XE#Anj;oQAZA811#,^u$R@sEij[Cq@iZLOKm_UF8
%R_>^4/9(oN)q""m/&pj/l;'8YW=k\,+T^Ltiq=6JTBdF(:n%e^.poUrGnBJEL(8r!!H$gn!5I9>Y5rajr'jWkZ?CUbp'j?]7aq`l
%X)D;1e,D;aJ_X[KB1Mu#r!n]>'lBE3U@2K7)905e6XHISNM$`lP'i\IG4<hDL7j?nG7`nU>N:Ln_3TgC)YM'YI>@_DgG=$NjZ9K_
%9R_[MVCb!_j^\)KQ?LQP%ReS?5S.90eW8Js:]:cL2;Ru7S"[@*HdpVZ80a+_V#89CN7KipDL,DPgo/i)#>-^tN*]D9ZoT:hq!t_F
%!/=11S,Ag^/V5W67<"IDgU4"2e^<JPp,4c-`RjQk9kX=NM2Qmme(8KS/,#N2:V_M3ZSM5cI/U#kDXC7RYDk'H9O+NF=,\!,:u0?L
%[/#pRM1aIHMY(CW!tM_))nF=kP6f7PRdKgMUX=M**"e2V#d""bVP,Z]5i4q7\GrZNktKmUp66SB2Ns&;HCZ%YNH'Esj@]6S@u&1J
%HRTpWH\mI=Dt6ltWa"SK5-O*G5Tp.IR]kW!iZ=tM?u2.Q5XG?eRbY=LBH[$Lr]+UD'nZ8!Dt[8PNK`;'KOb5nM5P<_<+dk2JF%W`
%guJs5]eR.IKX>Fq%QBkSis'<ZDa<LAB-QQ%nE[`[ak*YBN;QQ6/NMgpToJ$n?rLE1RaOm1\g+C.jh\A:8Ai:Tl)s`jah4)g@fe@V
%fLB>;0t(SC3R-X.=0uAccKH!4U`#LfefbLGdWEs`>e(Clf#CEJ;Yf(OQW+B1d[hZ?Z?)4sdS8Lc(E%u-nEX)R1*([D(:e/Ag/`Si
%BLRt:-@'r52HdrOf1*^0or'UM'KoTFSt9`pf3Oc&RjMFe_K"B_!dY`*43lR"!c*#q<sX+8]s6*1j8t85Q<\fF\p\)QNEb9sq6_D@
%==_h<'p5@aC5(GP<pTIi`JoMf\l[-Z=.;qI2`TYdDsY\9-sbGR1X&L@=.VlqhtGgr\Rh$&.rEUXBmW-eR[i`uXCe:fh]_:CC'Y/k
%(_2\":'fi+_a2nL^VNr\K\6csY5?5V;V>3(VNJr^.5$83=!!3Xf!uJu>dg`Z"Z6*r\2eK]aK-0IGqWVh7eOk8/tdkOWA.>Fg(ZIB
%D3Z%.rTngD#R%L2K@4T8*\:iSZT$&*m)L[LBqs%uYk0Y%`!Y^)/'HcO"i:YXHXI#Ug"an@JQ38bcVQ/u>oqbFOK?]9LjsCVdUpWj
%2.%($7cHQR7t^,q+nmAZdo3YLD[o["kmgp*md,e[OlcsWdc1%"rQnSm/[j=ApbM5Yrbt>M\j:Y"gUZc[GN7K7(\Mc]h!&WfMNcLT
%gs1\`*J\-JjN?6+<kgjUlhC)_!tUFIO$`nWeF/anW5.JiO>F%:8A"[a4q>i#H=9="*6W?sCG\,>RSrQDA/a4&=C_4#W27@Pi[(-`
%Pe7%Pr5j_3(3#ToHom-)PAc4JcoP)Z\0R#JG1*C&IifQYClsTQFjm_BlVQk9[h_<&Y1upNomPoZ*Fid)p?9\l"Y&^#j:QMNNA.p@
%)YVGMO\mS\612et9&1MZ8b!kDrQ$/g%9$/:j(1hN$nfX/1eNDNnf&n519:HePI<ge;:SgdO.k\W=X9W/>`-rZLIM!sH'^66j@jHt
%fmqA[O5YOQQ5j1q/?5pRP50@Q<<BJE+82"E_')Nec<a]@XY=+Q6h`4aE5[;XB-RNG:'s.+A2H4#LLYPFNZG7+($T%(F&UQ:QL2b_
%+J]Ehei=!"c$7UFOB=r;@0jKb'B>1rm)6>co+(?L,h&+ioYu10O7)!4]8E!:U6h'1-8mM@4^h:^E[\M5e;:eCI9F*"[!C_MRKn_H
%?JlmpEYdl_h;g9"L,2Knbh\qm[]SYCCU<4B'_^,JYHC.`]'J9lY]:Y+>DW_q8)CbF8nmXPf"g*44S0OeEQN0Ygl8c@:Q\$1#=3O)
%0_;#!g"Fj]Ue,R"<K;!Db<1NS<cu0$[H(2fXh<nJS*]O]2)\];MFX,*.>sd=?uPCQ=(Amn#GqmBYmj>:*(Srh<PEp+\!U`;6QfHr
%J12hOEUUt7nRqQ)OIg2W.n<U$?>-\"i?7$k,O[?]$5hoS]NW:rXU@YD6&_#7b"$,L=Sl_JKuh`+/'CH@.6Y*m:/TQTb=?'$L=ZD7
%Hd=;;2HkAF?0f@I-*[Y)kKsCo,1`un7C@WW?3gk=/g"L]Nl"YS[e%k.PC.HfNYZ5J]qg$d$-0PJ!_3"<>:%e@0`Ssg(QJh=@"r9=
%cjtHdfkW;HVI5Tg3Gojc)c_DLEn3,$S(r$RJA&X@fU6'1@-HlmgWf]T`-I>5F4Z*0;d;hVBe]4eiu,nARSa?[,2qJOG)FqY*KtKP
%;SGn%qoifpNFl3G24BrOPQsE0bDZP0PO5t=KuSE.$]J[-DF8?3N-5['f,!'J>oCt;b\OQ3nIP?5+19_]9Gu);q4S\($7:A--Bd*P
%?$g)F*>kGWlRPiK(b!:1=SeCIP!tNp,HuEO[-`F&dE^A`*eq>@bb*WSRG(Bql=)t<YI*WELVc=&jT@4&8`t0?jmsom9.Qq3fg4/0
%q=IV@(";uKF8:2ulJei.I*T9M[(KNjSM08qbNI>Q(KX8m@mF%7q0]9n`C88OS9+LRHKsL)l$R<GR*0,A3EA]6F3`klZWTdZT5uWW
%lK),.S^50T%(UbC?XSG,5#VG<3tnU_D)0c2NFQ/NA*8F9j%U%oEchr2Yc?"2s->sMZIdmRg2mD&o`X,T*5q-0Q>mJfbSl$/nhElH
%!Q#!rIbcf[8:I$Sc,V/qmJ+jl;AqQ[E;$cnS.n$Vjq?dpStS`dooR,TH%m))fCF`A%3SWiUbWme@C\A/*6+eZ*E@l$4Fb[5gSs'N
%9ML)\9;QWRLbBpXnW<(bO8E!=i%p&&_>O-NS7O=:Zd\7-_KjqbmZn,(YkSCe97!%$;_knkfOg@Pg>,*c,qRUR\7$KE/nCed=-ahe
%"a`$0GX\]K`NVX%GFCnR:qRVDeaQraqm=jA(ZTbm0]g!Z*bEf_ZR-/F&q6?,.Mm'2!PYpnEE`Z&m87:Pg5Na8am/YNb>-<;?E5@G
%o[o1$IB\TQcn-?a<?59lVpOOK"j]2_3VWFjUu7>i*'%M"V+[DTA)oc]CQ#/>lHA@!%HW$0[d>W#^#p(J]q.,"q4>9%j/-$UNjUB9
%(n@QakDL5o(`9E89:!jIdki):XGA^"N1C-7k&?Kh"O^Bg2L+N3j=d)@J'>GbQ/9F&kE8[(:!K4FJ">s\hga.aBCoV(h.-!b<X5++
%+`5[uVoOuc0"edDqdFD`g:m)b&%9.*K?Tf9>"i8]g]u@1lQ-kr`7:3DS[Grf.d>+C]JsuR@5fYsp=nW<jbXATA&Oa)i'@7B@j2Ei
%HU`;$dV!Mkf'R@4;Df>"%N8s7WaYli?tS^#kbKN:F<`$m%_VXi9X^2.3[oZdajkHA5g6U:qUYN8[/9ZZLFcZ[bMg,.%i4d@=[S]9
%9"U]cKBkd&D/MH>''sF1YB7"9pI8%63OMYa>KD0O0I@ECYoZk)HZ+<3/MaD]]JjFYb31c"[rZIZU\EniAabUNC#X;bF&`Ica!&p[
%UR7%]"<mamYdjF^i>7$dn\LJ<VgE@K6:SWN_g)SNGI[tDE#mdS9STl!aY*"p+c1g=hAZO9%6#^H\8fe(;Dal\`=mpWMKC<)R@=n)
%T:G0-&uO\XOTlhEM`GQ1(tMX.f^c9Zk(p2/UK'EA`lWp>,Da$,DNUlCVS($Cq)nmK\>?He*`Em2;Z&W\k\;T&r?fMu^JtBu&M_5I
%iTto8%6MrKPjq5i*lA"G2@$N(*pt'@G''u]Afbfk;9=*AL[CKRDG6ID%UmuTbfk.%ZuosB&_GBe$0iQeo/m8qY*PKRld1CI]TqVj
%PF6&=$9`"#0:\HN%(08WAtH(30_.W_Q^L>lc'k0c.a/[Pbd1Lm3c&b0R<ahD)WP)$WaEj6<DW6Ao%)A-HJ'U<QX7$o0;4_<kKllJ
%>i=m_Q0`uPi"B-iFCcJFoO8Vl]]`e/gsNua?rinZgsN-'!0COZc0,pgmiGqtH%'RZ\LI++>DRG%gU\K#bp=#oNe-c,+#-T$'t[36
%F^b^-](Y0Lh).004H6lnY<7M*];b(Oo9F7S5d;B:`'>p/Ob^Pf>YSJ6UK-n@I<%5CD"[a_]m0&"GZ4P%hUi(CN37QpX!`NXpDmb@
%=kcBi[PPODG"Ju`5ANfQjYqHd'A%So/ALEqX]76Rglc4D9kd2JL3BF:c6pohDL'Cm>>p^Oot$;sYLep_HbHR-fk[c->oR8Y=_VEt
%MlmL4&0Bkuk]!,dbsg6O'\7DmBV%S<%=*4L`X:BHj\]L39<?LG8U9UT0FdsQ,iu#[dh87XhP@eqD9iBLnef[LFXQ;HS?J;^=&L*E
%Ug96T%iV5)L1CBb+==8:(L1mn7t#Z>g[EgAg1[pl/)_2<Xi^*,dcadL1+o`_<"j)7-I\SY7h(m7l!3!iXu?l$.\nNrFUmda/mPn*
%N6-c)['4?/?j'b2_GY]g<3<6S>\<rf+9+GBaHbfGAb!Tl<TOa4F[$^&<W(@5bH8[SIB58Tk`=9>X7uqCNomdX<=P<"XaDnbThT1t
%cID'g25]2$RmK;OT)c@0)/r3[9>kP=0dliepOq]cRVNb'_R@&5n$fC*],RX\H@K4`rVi<l0VJ^G_ncuolI[^6bbs&AXB\TN25T,G
%]hEMXBeCo;r7V(rk%ZNBf69j\"!e]8aaRJ>a.4oWVRO"[5D08bZ<uKDfl&4BTf-DA=%oPp2>>)19(q$2-_-j<K1r5m=h!TR61sKa
%Id&HardF^mYdBUa$D2]D(*d(t)1QmVn)=$$dh"ghGW!2-o2+nH\osKf;5d8&VO7$u=4UANeXr^"F[F[6)&p?WC/H&3HS*CBbph+Y
%c)o9B\)\`bZqdjAn5Co@"-"0R_i!Ye-PmX8A<.U`<q"thjn5Q,Btc!dVld)6hU6;RReK?HQT,qc'Gk0rAN$fG::9SmdFrJU]>Z8c
%0k]]kWJ)-qcO=Yioqf!(GM+^PW\_UMia$'$^$hFrQPpRHTs^bF@UiH2@MGt$Z#=cWNMj]Y4"J.mD7<t`T4)b4<hI&8]i&=3SJP-6
%l<@J%T93"$eQWa>S_1uqSS,WmI11>o\eFsA]Ze<0@\6:=jLQ!$m*9lm:N9H/m%[ogZhg$o/'B=6fstX@oR3:r8aNcn[_DdmT%N5j
%NipnGqp^tsX?OnI?.L0/:$f2":3>FHRM,Ma`hX])Y:[$*/ut%nkZUnoTA:D8qduCUII+l2[3kTmW5-'+`4k>p[W#]J,LY/0f]O^.
%BD'2,n!RK4-2-$VUpMG]VSk[1%^\3bod0=b*Oa%LY-fVMd2c=A3F-!$T3W?Sj'ZG``'1f75.8+,3jI!@*VNh4PnNu\ZMN)<l"IX\
%QIoh/,u%BPl)QeFeB0Zn3EV]/'#q94K*C_6@b3I6oUF('V/uKL\%RF:Z)0""N[i*GWqb84n?],7*`3YW`6/djpPg%jmb3Cc3dC0m
%(Y:>lp6ZhfJmEoA_lsnKf;6Jt%N3)k\S24Ra-9bhff5\*/_t\`2RGk,RS8FGfjqtL0"8W6X3]#@p9`?L>:+X@;#JX'cGlp!m^`+b
%mlu"lo>fh4`W(<f5gZq<T9l'3a-[6qn^+<Ps&8SIkPBZY(]R^`$+Y0J58tuG:&Vh\ntk]1s7o>)T%hls>PS!XaQ-Xr/TjQ".';jZ
%YSPLR&51i<LP/nCa\=%A@$-7Tf&X]nP>fd5>]]c.,9.MXmY6F>9Ps?he&UOZV>qIBHq,hm\SgYO7ukEFMZg"f`hPi1AeMIL]eMRE
%BfHB%;OW=B1I_(DDREpo(h'SAdCm#"8:9T1D4suU$ZBmU<h0c)TiTIl+iD.%Pr!ic7*KU`<M;d+M7A_!a,UosfO4oC@7RT1bU`*5
%J_<EK)#!))bXN\XHH>dh>E;^/Qg;<@&:.QSm^"3qr6cg"UP0R!S)]$\oX6ZbZ0@oa"NbN0jqN\D3U[YD\:CoiH1g8bYBNd$!I<j+
%+N]7;?h4aoDk8qFQf=%32fiBf;I%"XXn2+?Qn.G=C+kV+UPj6$Nb]%o7nZqYepC9c#ae,'$\cQ/J-KZL3`u6_3,!@<1F<9+D/m(q
%o7![MJ(D[T;sD%CpS6<)YW,E_^@%U@<IOPOIm,FrEt/#/?2&7l'6i]PIho;$0)`9W]]dW(A(MspOIbCAmN:g=G0JcEY3qq6le=,t
%leKB(6nW1^"O+H_IBT']O&*AVd<i=jp#<Eh>soLeHk"cCr+920^%X+,7i1F2X7OL`U.aof*=8U18$I_a?g,Si:aB'JkrQ2<>Ulg!
%kaHp<QUmrg2WjrtQs05/Zn:GFZc(O)U>.?l-Ck#<'<1OGhFXe'F/^#/*))p*HRf'8K7OQH/SEnoDU6/KPCM=S,#pgk?CU<gX*Nf)
%FkgYW1721i0q[*V`b9<Ui35=EdIX.g$C+p^:,GEb(j!X9Z525/B&Z[b=H3RVDYkK4@9W-4GKNU+F1.QC:418Vqsfasl_t_5V)R9d
%Bf8WIh=a!;Xl[*Di$u]"od_An:>`YRDIH3s8[hY-Pio\`?(8l:hY,.tTV<*/Wg#_g[#8SF,[h7j$nqO`_>)G#\LaZK;b+qc4;t$*
%AFD+F#bo2f)iZ])(M-:t$CN[@PZ/9t1gQ9>Z"hA(Rg$:9^1k]%-qtKrD4eSJMZ;K5(oNV6#MVX7,tG,$5%QuRDf'u]]*!\6@n[2V
%E.H[7Vq=h8c"UO;C<d%e0O$d+h`Fl!S3pmpp2$A(Y\;7CMse<'WI-t'>Wn*6Eb,22o$&Y?f6>B]Hfg\lESiV@>HIJ;o[_;lnnQ*p
%3clkNa5r;@/osYCoALGuWrHreh.:"S`e4\,@(HRDe'd4sN>)*JPF<-\48/='l.3fFSg"FkYATpIr#WG>rXRe..)CbH[]#t*K2lLc
%5ECLl*Z-:%lL`k$r3<"QI<(I]&(?AumW8%:+iUT:p2*j'gnU"aBi4a[0lr4@i*f_?Z1ZCTAX"=IXfWSQV2`S:aNF)/H:Sd.PWO>t
%b9sJ&'3.=O0lA&]it`$XE_)7L1<63de%AW0DJ\h\g:FmNg!4ALW8![PY5?4c!ha<;R.%d1O2J9r0/'_OSAN':]Cp6S-3Ln&q_[mr
%oM,3f'$@klY'u>#Z0g@g>@6&"7Nq/m^90imIXKU$\RgeXlAK#SCM0mGA)H(AQV_.c*+`EV^<S%%["q5@*MnWBM(@Jd$]+>E\)qGU
%?uPBK0Mh[);_#!D^:T,T4C4)mB"6N(?6lnV-/D\b%,I*DB4.Y"E1Y$$l=r:br(f=oHqL]:]*BZtNCXmF?#PHoPSD8JBBIlYfbKL[
%-FB`WOqnSk$C0mmY(rZPkCP-Z?;':XXOCT[o?ndTb.4P;k'Cf4p:j"%U6_%RmGWKpcZtA>/u<CNf$HTqW9GI*a?)gI00Xf%ATejQ
%c(U5\&hgI[Dal1^.am+XM&$r\^g%e'V;<1e5aOaiKZPes=j4n'ioO)O]rI&qrloI4M=gL`b"&8R#aS"QoU:hS:^7e48bAI4-jTN#
%SW`2KA23CA0:%db2':3pk*E8Eb7kjO7mAPlP%]bO)\1k;B6nhp8TZm%c,ZkXV'LB37q>`Mb)!.j>-_8(c3=2]YsKNW8Tr@t$D#u`
%CF`HLqp-em=K,DrOf//a@YLZ]aa[<l:gP)r@BHG0TcBfj3E^X\@YK-hrBDl7B]FOa_fF,)jl*^[/=WX[qXh(2CUhoP=m^15BKM!$
%LC<!S[9UO8`oNA!LF\)PdKL/JO+CK5i1Y5"6T6BgkCSK7?43CkX]?JN*dYp%>XuUt'g_Og%gtZV>O^"Mg7`8+XBb76TnK^/`C*n0
%*SSW)V$\8):X7"`n$uQ:6e4g+g_u'BkQMKfVaO:Tektq`Ba9,0q4+X,pPp1'd<=h(Gj)f"'if\TJqqX7cY,eM;".:G0t43,BXMcE
%/9p@uQ_fCAY?LGB1$nagE.N-G4BtNK^3d]6L$B@)?gs0F`A+*&[=X1"?4=rg5)1E:KaJk^T?$`f!eRHh4Ci*F@'rAeN*t1P25b2E
%3_rtbi1]0k:XjK>[sZ"Zk7DQYcg;>K%rM#(<UEUmS]dp9F?Q.Zl!.W8Jqor.^hO#`[H'm5C54..c12#K(X?6S/622d[MSO(R]@5e
%[$nl(BsX/Q?;C_8SRZ>mT%ate*]i1@i_rL*X]k4ukZI6!V^3ps=Ra]5m$\r\Y[G:7`k!YM%TcW[on%t"VIOs(Gj&o%Y,C3OF1"B!
%=Bi#fTpHCG%S<s!'Kfp(#%R:\Z>WbsG\EGIV6@fE4O%!tcrp1lHoA#@4EOVQeED[Q$Qc;R\$'tbR!6oNi8K9u\B>XMFKTfNOKl)n
%_8Bh/\nh]p/t]/)60)f1Gc:($]5!+A7+W=a*_%0N*Qet"CFFF@V]+dm\;[dP'KgKGmU`2rU#;V*0`,U??@ABI"V6s-4VoYoaNBU/
%Wu\>j6kRK#=RFI*?`h(8_*_jp;%6B-\_s0&P-1@;?E2p,".Moj6YAQ!JV&[&dDn`$`pFNoLOt;>CGng#4CkPU^_1q]e/Mnmp)R_;
%3NdED"V7/8L$lV*`.dl9jXRW#ZP1XG*Gc00q)2qFO($>R,CJh<&U'$*2^VB[9KZ$=Msg.^gj(h4!*&'eOCahS.nBqEEjV5!I-E&e
%"t*gp?7Quh#Cc!jQ"rUk?$n0k%joikZli>*h>;ZB^[mkUr4tMIn412FcMU$.i]+OHT!(P?L$=&nHh7s3l6kI5f>uM:\]4S2jqMj\
%f^CiPc;\\lp?g*<G9!"s\;T0NMRs^i.U;`:BZs`c5@:q$2ZL[#I33?Jf;2?(]0C^*ipPud*]H'7Ir^U4o,[7=miafaT#?91=nt6E
%SUCYOVSDpe<r&;'I96Cn`-1iUaYnSHl4h]5s)GNR,@j-Yi2!]%F`U^@rgY;S!C7Wo"<T;fg!.^XVg.j>d0UT7p*T%&QBW5&:%%<:
%9KV_[Q6k8#loVlW_*<@]:[Xae*hO*U^kMm:.Bh^^pRFJE/tEjeA7E)D.GU!PmD\ZDHkBm4dKi<Mc2mA'3-8c$Y%b&dh'WMXcBX8l
%j79dt27L:\dolBj9QF@FFOeQJ+W2Z(3]FGTaa3o(E]Ui0g;W2+P<pqk(4@,:$f@10/F+.1QaWH[cZBS_n0s&MrK6us0,>)caX'Dd
%a4EJ(-pHG)]\c*SZ\rBb48sI[n:6lV@Qi.$X>HB`d8@ldAK>D=hp7JY.XuiRZ!_GEkkb-!>)VeG2F=Nu"#*Y<mM^`Im1J^QIL=Ve
%D.GP4QToB,A^dZH\sq[1Ur&9nXe>A:KU!#(d;ah^Kj#(OMl[nE`NUX8B.!e::>j`Wp<.!RIar5mE:1ZmeT[kd3_]*LZ7(DFFl=/B
%I2&Qu)9^9[qn$_F'H]`b!s#)YCIb#(B6!c<&"/:J+A"fmY!-V3Gj7T$nq.T9M<JfTE\tD%Oo#&KN.1e0)J]ir";uT&H_2O=jBM//
%L_"`^"MRksa00,TkPXO(MMO8;On[q=VsR/aTd=*'1=LT-(O1<X8TH]aVpYSikY178l)[PS`B;kf/R5;(VP!:tWu6pj(qk)12]tg#
%QhGV8bcY'ZS=`m>'@2e]kNPdSG')ZWd+P"6+^`cup"C9i'd;@Im#b$t?=9?&T!\s[?n84%B7&(>^WAYa6!sP-^Xd>C*>CQ$]LGn^
%TWC9B.ob&K&65aAP]Z7"[8KJhSEi/NVGK@TiW[BS8X9.Uab`N-FH:W/?LoWM?PBF6KqCd#P9fm"hu,euH)#IAGTq6KU[=]n:A_sK
%-r"q#*a[A/h2'QW+)>fLor#9k*1)'MS!%DoPa"Wp2dh_a=$HmZQcU+<A6Ue%;uNiS1a]oif(c^\]l0M:o(T%h+cpogLR%B+['QBp
%Vd#EIQakhaBn$nfmoR37E\$N!dF&TE09.<V"BfQY8nWcIP[S^[SM+-(9(q,9.`Zf7/cBNBOaQ!O"N9]_a.20VM4$-X<'n<"K]nWh
%<=0E1!MQk"7?lP+4pp'4Dc,XV)In=??#_XS5m7H;=;&Q_aYt:S2_l2T2s=G87[o&Joa:eO@>%2L3$70E+#PAhF$;cgh9d(Y;+t]i
%nd1]b'f/pnlJl)o/6$Mu-'dMu3A*0M.M5^7P\/iCBd!<9;jepHqd0Y]8@eXLXtQ,X<b$1)E:X(j=RuN"ku9,!bc$G^Vg8c9d,&8)
%,nd8r*Ru>CTtY_kKTTFU+hZXc([@.K9;6X0Kl@Pe:rbYmS^Dt"73)eXP>7gkrTWHi1%<hq$%q""MS2_U*=mPQ!rj>0o<%ufBs],g
%1?\p8_cKT"U"`QO>NfF-%UtVtYh6UI-=9]>M?<YIjH(J^"HVA)hZ3!A/cg<DY,\/dUp=>X;qX#oB7]3/YK_5jGRX=70lUDY'$Jc$
%Et=q+$e3Hcb1tt>(86L^I.XNMs*p9]*^R]FMnL$lHWI'kr&#VkEKV',7'407&B&T7fFS/a>ZqP(\8(TBJ%C^=lRo2C;ulXk\41k/
%-5RseGrmYZLAaW0N@>.@papK_eG"tY[dHcjkU_6"&%Fi*5m3`oJpAW,`'A27kQ*M#qOSeipu]cn&IJ:LGK,*IiV\7N"WbUVNltlX
%q7;?fLAt23-ENR6aTPe,)R<%a[%A'8@f6:F;b@FMK?,dI#.Jd<+VfkJn>BL4f3#G4RS&;rHlH-pDhu?",5W_pI0mqEfgn`'0*0*R
%/T?LD.bIYD<s_CRJ;M2l2J*X5U7JRrn5ii<OZZ#a6jjh(0fRtbXFZN*A@u1M%A1<Yfm"er$e<F_UsG=5q;aV9Nn$<7GKbL5N]KCh
%=VA4V%]Q9KD>ljDMe\m1Vc.$T2;IRc9SGZ"VU0ae^)H,t`.M:-NsiK/PmaI"?6(J-5.P36&;9FOa`,AN8I.6#1P`7c9\P<8)?*$g
%k-rS`>1+iok_otj!+*m%Zi5Bso23D:/jj)'_1P.GLd^eV*%KdY)m[3>lT^1/Za]gOXr/_`\rB&ENkqE,l:'r391md/kPn0*jZ?#1
%Ps.5pO"idm]>NeA7#9?G&V7HdR8`*<7G=peU&&>:9!d7PU<8NnHa7L!]uig[lC114.sT\_.6Qt`q&`U!84ag4VCR@2f=$Wkg?_/@
%>_kkdn*MQ,)[-a8,9C=>GT]i%rNf<k6,KjJC-Y+7VBA1:dR_3,Z7PEg..N'KAIDJS7iE"DpPI/0>ruKq0KM?.4J;Dk.C>U*I8fVX
%r:2ZcSkb>L`1UA=/Iu'14sM'J(^iVip-Gha?C2r$-rp*0cnpc:#!l1@T`\kC4S;!XW`s@V.3Tp%3UVCm'a`8<@O5mA00lJ*7G8o2
%7HcqJ@T,kr<tNNG81FT4WV-oYh<Ga'0u4h4cGkuJl1E6.C)8,^VQ!AOHXTluK?>3CQPFB1qtF,`dpHCDdV&it1o1dklZ.X)-uHr:
%+/1Kp/>^b8E+6c0%ceisD=99[Q0uOP&UN=iYXp7f#oTeFLeNDV#n:TbA2s6ja,THj6&RTn+,mo%F[a1DEhMT=.FJPZ\ZoEFMS-4d
%6*9EM'@E/2b^psSd>>)p(jcfXoC[iH%ia%@XPKErI0_XX9na1kNN+,G.l&=F7U9[=2!^)[M^AseTP8I=eeulWF)eadYg1<VjCpOY
%U!i*7W3>ser1X,?7r%!_O5tqlakoZfEQuku3;UQ<d't&6%Qgb`(YZ6q]oouk'l-P'lOW#[ij)'-<a:25r/'\;;XN94>C2gh4?=iZ
%Ru\I))3a?@L,hciWlGD/Yn[%,$%n`#54KuBAhW],T`\*afHjHYOYZE=37"S,f@'lMTuBW)bbi"+I'q`=m%WID^WTo"'@.iLK2_66
%EM.L(k[-f#;I[Yr$]t\J?rm2_kEOF_GGZ'QQ^g/a0"db:puL"B0A>7$Rk3",Y&mReglFg[0DXbIYP8k0[fSQ++oYsI'OoRPBb,rK
%bll[YUN>FBMkP&6/:SRU?H"dO)B8RQ6r9EVO%2qCG66[A,hM9'VO]>^[7+$-lDNmQa`^NaV&Q\9j#;$7//8.YAnq&!:$0,5h]-I)
%^n=11*t&g,Ko#ckOuf,MUBT)<l6%EZmT.W::@o\Pr%kWla;tu6#ADYpU=%uO;+RXV#@#=O;!0CP5OHCM(%6_os#Q.$U[R?]5&gM5
%-k&-PjI[(a,:,`tpiB.]W:9Z<_I/Rt@T288Lhs-dhNW()Q."ohn`TF*fpQkbPn37X@T&>L<M'H/akn-FiU%/IO1nUeHu$K]6Zi'A
%8i81Qs4.[.gn.E<bdVbI:%TK`cuUClRa';I>XSfp/bqHmQGl,aoH*-WQs77l@34A$W^:PR9(34nOaJ`]$cEhb_`<MH1(j=uOW0)$
%qdd>!.3#6*<Ju?+nWYJZ+eA/aCT=t,cDhR#$bjtXg@EZ1cHpDL=C"jX8X7Ad_HV4S3iSYV_;]&YC:md'jojX556X;:pp[QNA-[7T
%.e=+o2f/h"[QC??6.!Y1oA9dg^sgVZ.)r.>JR"+kQ,%MM`Lh="fq3"s]Au)=:l[,aB0Q)G:qcOg#s8-KJ,Tk")gc_l99GY"h#O%m
%?M_-HR@-8NXesJ01oKG05c&PH+0J+3_`h#(q3[-We)A42=YAHFlj"o)[=b`)K.Lu=*j6Sd$.LD#pilX*=Jp1O'r);G=p:GOF[A+/
%\iJ^1e!8Y9.66&rFiUh[Z_=,-("=NJEDGF`U#D686AKAj`sM#;GEk-YFhWt[hj!uk.N(/+6#]o.=D56$"ZHs<7.W9Xr9eSqq/MNY
%D!%e:*@g[L@%fNcY_U9&VMQ$3h`>B=Zs9[3MfH)bKZ\iAEBO8].1AbX_4I/)D/.gb*9ma9mIis3<Q,)Dc$iDON@MkGif/C2^CQHt
%Th(Ch[q5ML.^$iNil9UGBE+D:""0?9MMWh!8OBWqC#V=?KBgDBh>3fKIJbmAP$f:<H"Zna[B[oqg>@$nV?%+(]e;M!0D!7tmVMZg
%8.HminZ!Gq`t&HVK--YM@*P12(tdk`_!t#ERbmY0*nNtlS^51)9LNNujFgn&!ZDmGd:oFNen'!\UNRp,Y5Fd>ng8K"3_RLjXYj;T
%.MecD5!+V#_&MdSnk%C`eDO)%;WaP#2OOqLRTl"gCl/u1KK&a3-eWgIE/UB`G6#@!,mBNo8VI]bdF0rO;*M&;OqW!]j$INB/J^g`
%;Y8tS<XOh)pqY+G+O3]PS]XQqiDdYe^g0etW&&X9#OXs9;P5F\E-*"bFXL=<O1IpMr$FGhEVub`&>fM`XOp<G0a(l'W2I>=X&R(c
%>3I).O/\?j+.Q30UU/Y*=37ZqKp[8[%#/?KGZL)]I;i$F8)H+apO999I-hp'\AQe-Xr;/4?,j!P?=dtVQRu!k*0i7;-;;V[Hmku;
%H\Q-"^)E9*^/7ZfQPD=QN8X2X`/SHiUaK)e7Bb`;Ib?F>E%:mX,fE=GrKq2k7#UBE>lj8[W&6[!TtV!4)Te=1R5.X4>,QZ6..k!c
%2d[a\]Z$<U_Wc&+#Ub50I0EgNacZ8Sm!K=S`CCU;>T0].^LdBn'-V`u!_hY_jB,9mA]1BBr=aTO4hi_)#_$*^>G%'SfP-W9TBK3o
%0J'>(r=aSd4]"V5lC[9=L*-ku;Z.8Wb2>r:>Ki!hV2@agq@p)lW`"PP-d8Csm*URmhb(BLgu8/f0@]qj(F5/j+aj^5QrL)8U/1UW
%Wq)$>ohY3/Z98XHQ(h'^UE$C3RF(]Z/`7^E'CCG*f?Y-rJN@PhI&>"eoA#u+\"N%c\2MA%)?))a>QD-I2c-.+K[B>J"2=Tk7n+mb
%P:p::X;DM[&+ZmO,+3rr-=])W!Ici!+ZCQc!BKN"7>ml^YTe)i;JT\'TCNlB+kjH)f&NC.KI*!k<9s'M!>oGceU%-l^AiAH>u^.[
%:WWs.K8XJ-r[F;6L$`,EhY^:h;IGA;$f)TndDJ<RN=-/I6b-P-L$-'^kFu.@InCL)%PFdSpnos$S`QSLgcn5H8GT.pIAfDF)!%;]
%Z]\ES.30(U$Nln;@c7)(".XCe^h9I3:_+(lRXaVB(j%*5oN$s4jo7rOD4MqZMqnTbcU`/%rcoUbbh>ZY&8Wmt]XG[Hs'N]p>`>4!
%VNmVdV,`f4UUTTA<r'PW8;^<mV]HNm=^="E'(2cS`04;$Glq)n[o81Xj`l8d=;@CoGgP9f(::Z-0KuS_*Hq!^,_ih1<8>f+Lh.iI
%)e^+DAUI@D$6?FS=_+;BQ1sWG(+F*Y\F"t&:p(]P)a)sO",53W58ZRHTlus-g`apV_/)0$JaIP>)h.QaIE<IWQS6OSf7^&ql;bBS
%4NQ1XiMW7_\%GCj[2`OJLWd)(ZB1rgO#i;sLDB?AlKo%t^X9/P.ih/FC)ecoWDZ>TVb^>bQC_;8,Hn&h5-a*Op=g:S$#$k6Q7W^q
%3jZ%<KKna)<V<][4`Z^eSNUY%.+SM6eSO`M'OnEk`D4*DZg`pBNJV*#Igcg0'*O(?#;:]6e1M@7UJSOaFoMoZMRjQnqk;!ilfdAb
%4.OP/#&Wef)[j?$e_=s0AiAk:5Q_pkdCtaQaf(XAC:EG;2#IJ"h"n/c&(L:$Q,3/ESH3(]08kC^%l!AF@0op+=]O%NC@PGZO*.'T
%jDtRq?LJ/pnXl?E.:eu=Q"mGteDL"WG.+j#Ol)>uPS0_Sq8dJGI7j3UH9^t);P,^6GInsm/ZDO>+B[^GDb5@L@@_R3I\Glr.5Zqk
%q@p*WiM]fZ`LpGNg7KhH&)1J&m[[Ua;4g`#.*kD49BoG>V+@0/,JV4j.?_[;PHY!_<%9-hck"t7@4"(^7GJE!ronSZ%K'o.&/a>B
%;],G(5Nqs.0ngapO4qJuFF&tY!.)=4^cf"S%,T`AmO8)O\E:n)8+DeF6_DeJ4DYiM9:liGs&S_!ku6Xk_Osg*'7EKM1g6aP-i+O-
%0r\.P7%ZeX@oTH,M*=@`-.l[V.=I*R2X+02g<_=7K0BHH/@d\9_5^<J.rB>+%6//<q,Us/0^2M"lE2:i0<JTR,-s#&<<#@Y!\bsd
%b+h.CCXT,>ki4t$l2pG?S8uQUmZZs+'ufaoGaFoDchHo3n3CTs>UXT%c2*8U^cX.^0ki,\*PU?qJ5()4`8q0;m2#JpKA<`rcqi3r
%(-M?_Gj%ZJ8<m3Jcj.*8%6DgC?.f./\fZqs2%`%!c_Y%FhIS^mE*j.<8j4F)DXDIPU=iogSK`/`2FK8to'CmOaB-77i+k3Dp<cEG
%XIGt`Ne9"Mq.MJrVUMg=@GC=aC,THCWm0Lo+)Y-fl@WhVIpg>>4@n`J`9lCDZMNLD2e7=e.TNeddGBAG5rYi!l2_&,Es_p]&QNdg
%@BASJ?[-P8PHSGpli/8%lg3r.&!V1\:4o2hU7PZAhXI+l/FoPe@.P)Zf/ZRb^57t=1[qeFqMcn@]?[OG4MH'X`0&6A]KOe%B3A$r
%\)VX%Up06)ijIid0;'=Ir3bTHRBm[ne4%88!t=k/\oPQ_:+>G<>Wg+)?qXL;*KFB)'A%?kWZSdgVd!K$i6d0RbT-\Q:6(('qIqLC
%%`h7p*H4baCReWn"(-CHIG_]nE_8i?&%jfpOj4Ep_-!KS4SZmH/G(!EIs*YK\Y@Q2Clp.!_^%!+JH.ouF,YmDLLKuY;gAaE(*M95
%meBUX^VN/k!0nZef]7'&EMQk72JhplaepC<UE99,L,SD=8\o*l?@!8:`i^"N1?i?CA<mL+o@EWlg-6,FGA;l0qF?D(5j!RugjJ-J
%1oai)T\X^?ZL''CS@:WtP-r3@0+Kme,=-C%gtR2;IIje]a0uRc#^_eioLYD]Wf5hIHS^4j^*r@/r?sGR@jK2*dG:It&XPF<*]hCg
%qt9u>"_Y-oe4)?]c"nZOJ);X&e*62ilfSIS:qOIAP2ue;ms^;3)UlghEq4_C[BHLcO3-R4,JT?l?W7OGZDlR=l"`E7LadX;7b^"%
%L"[9\8n8g_ZGKZ>PA@n?[a#8ug)mJ)1gAePn&le8>!s/K?BDFE9&-O5-8[@QU"1cL?i+jbQQGO&d>Q,LN,7#ke&lSlHJH4mh.&^W
%k1o!.'A]kblcS:95<4)I9=Du%7pt+Y?0is%gfIH8?oR.XbB%6MXcW%<H,(NY4-BI2AFKrps$2"e^Ko#0rNYkk4uOMZUM$&D35ZDW
%:r3T,`r=V1YN:iCCea.M?+d1I*"\i:?G=_])[#K_[dup)NN-n!NBJ*27k1/t,iqaPViSuu^QXI_\<*aUJj3,O80hR6+XH#I>e_ba
%/Lc+`hO1D`m=<[MRHA+]n6AM)d`25p_K-mBWB$.Y(7kn*:;r!mK^`5;EWR)DO:+)T\OD4LiYqRHjc]2_Vd4]09k5k*0?O%_![;\W
%H&8l4MG31@Z.tND/0'GL:1--(=SB*`Le9GWM>_gog2e6nV^YIgaT1iCWj;Hq;jm.>,XOCQd=M]A&Of7r2FYi6UhYq^+dT:s6R?2S
%3)Dt;3WW,g+;WLF*l<0$Ua"5P6e<%B34V[P<pQdm]PssM8`?o=F(loe02r-VUlm%hDlOF?//m2C4:[)9.c8<;'P/f5f,sR1C@aXB
%aWVs\"5&WWk=<C60+k)hF;"`XH)"X>;2C=G:)&7#V$6\taWE]De:Zn-53_m'(fTpooo]="a^GHh9)afbM:LBl1R0dCs-%s\2=l;9
%[GDs$\qhh[HcgaVgr0oG5$j-&6)<q1r%H:&S8Sqrl?fFL#Kd)#RC/)_6Q`EqMr$5;78O`XG`>Ga7)7S)UoIH05:*\F,\`Ig'8f&f
%Z&9\\1T*"KOUZ2\o86.n-Rn;pNs-],V5-37jbMnaIjHWDSs>JqG=^!!*TWfT/lS5#M?;JeU#gMNQTH&3OT8c5[o7:BidomPT\ptu
%]bs&5GYel9o^b3T#nJj*8?/#.KGtp<4s`.P`WIXpl\pVXhMI6qnb/O";YLjWA<Zj*9<1iVh<u_q,6g;Yrc.s^[<ihQ=r5=%#:=10
%PieeQE^0TP'^8PR%5Pu_D%M?!EsKkA3;,(qXgYX+0>IAW>]N7oGMaH4gF$W4DWsQ$k[VE\*aZ,)RER)1adbn4S*HbJrV85@n`=s:
%KT&V_9&D[il)*0)s$Q7-CE</AkkFpt)B&:Ke`RkFX`H:pFZrj%[#<8\.;^hIE=hU<eLBnNF*1+@IkATpXW<@t3i+hJb)Ok<?9D_]
%9keO\X0"pB5j_dJn[98Q)30-((?:!1j`1et+-Yr(/(/p8RHR73RWm3F^F_b/5%E94ro`a-':J^a2@/"qhC%m+\`=lT*VsA`bAF!]
%ZTGi2J+2ab_JkpkLb06Q+mjrAdH"r*5nMU-H<HB;7W5Vu=m,!im`P5CjjNAUQe%iHg?d^S'fn!:d4^X]s23C!Pfq<bdo)bpZtf9d
%BeX?PcPkoO0K>lme?EDOo'FcnRsF#1&*on1g,/Q!Ph1o#WLF@QGP+5D>X2LtFfR>p3V4C]'fT7$.hJm$mH*S3UVq/,esbshko@WA
%j7G:)fRBB76?]QSM%ZA#%b5tKrf$A_:[V:8?%+,b$[9&n@DuO%59R!E--ehH_"mEZ+oJ87P&?d>5mM^<!V+b[_@#Ml1/re?H.&(Y
%Z%al4N<'de"5)^R<nN9I>XRQXS`I*X61#\S:WiNoSl;qA9m5($FVC,_aD7-g@`h)!,_)Q$ZYr3^hOYtG2uNA#W=G_n'U<9dp6b*I
%>H\k!ibVZ*ldkAj[m%?+o<NSrHG/OnV^J2lF4[PGMf.&n(8nc^B6Z+a3t.1B#5-:sIImZe44&((RK%`"=&O[njSAJT4oF3ZeFt'"
%+ogT\+9'OG2L$CW+f&$*-&&I<QthGi]toI_g3@nb+Bb;]CTgP*f<<NZoRAgjUoejrmN0k9nf./S"*f0:,6VN9#4OZ9$BnDl!KM9[
%qiBJ[j.G3.i88VRe&4KA:n[c:n_547qRaQiEa1XQA2aF"KBG.Q2fA)pNNj#NJY*7Z<'l]Ab_@NW&q!m@2a2WhM'AQ_#q8GaD#=4D
%Y\V:GV-G48L(<u`+t)IToj)Vpor=)giW$:L9sp6-J<3ANUm,O1JCa]c9u6J-[2iW"^rSMgD&S&'R=<[C1MclC*?O=/\IHpD\:g6k
%Aq2->U6pKjnO"Xoj)a\jI[&#d2r=$U/sVPY#o`V]Q4qa:J]hX.%c>U.pfoklEJ-Jq$&Mhsk7se4;IR7T>o'nNBp>jY[9XU2b;SZa
%@Gok*4IIiY7dTd8,%E<&cB1([0AGom`EouCS,Gff%,#W%S,0PGe>shG]ule4*Nrk1f#fRL7R4`QL0HT;;,O&%:dcG`ju/A>XFNSE
%aIUH)iQ($;F$095fH>#V0BQWjs4&$<H^i\F%t%O63;/L'A)De#NDOkpGJ,,p'Ecc5I<,@\:];I..K4r`Kn%H^qB,?tn^aV>,:##g
%-`(mAZ3%m2ecu?QH7pPL^]6VS&6!$^,NT@)(n/l^#5=:FaJ;+eBZlC0^kpF*8n>6%+?)VOHkpm'2P%p.3OOiB8bcaAOlAgkf6foL
%ZFINP#p.$[g^(2[OKtYoA>%]`qcMh\OYl3@=h-,R&@jXs3X;-2-cq@9"E6$3CZtt_P1S>.0EIQ#&[E[u`m5QY-ikN4@a6YDBG5n`
%)<NIVM-NMB)mKL)fsE0Ugk0oM8>O[:ak.j-+=WL1608eoQo[CI9MWU3@4KXFVplO58S;GZ.F*G_BG*bULdGbg">Oc32>*]P.!0sm
%o$NQ,Kr2nh;hR=NSTLf%lU43Na$bm51dc^$hZT=?`$[O,(M/F,D.M@0.`((B&NU^/_M4/,FlCdHL7!_3MQl),:.jH/T&=hWZqNb0
%#@kkqfaU>92N.-^K:^!ir!m_='*OCn,.oJ(a:H6@i!#?#;1NA5?:S<hU]JgF-fNB>^a?-7W-s2*(d@a5#WX$6%Hod6j`7:L!#Q%!
%b(tQVQ/9pp2pE]q'SoO5NhcfE_:LtBE<=FW4=+rF#p+g&i[Y7<4<q]K;Lij#B_]IZX=l+S9IH=N9"?d@EkJ]'TJq_//<;;3AC<6`
%4t3M7\Qt>U@O;>tKF]Ls1-gI\b/,n>0G)[+-j$5d8H#bZ6;$VtXigGrm*Ha:/<tgPK[6A85oU@3+9tH\Jk@R<?)DjuF'-YNP`X9F
%i&ZLAKtBq9ZFD;:9%!dIc@@qb*tZJ%QMabtdKG,q`5-D$PTg@u"hR_:ZH2#n6k1UYab&FiL-t0fa'h+[,`%?`HR(nC$i8(6k5l'B
%bKBd[\87I-\0rRtaCSauBg=onAs"C8%cDV;Ae+<sL,#+DnO-LgMLP&l(j;'S[L'Kd+q<??AM""*-#/FrQ@n$P:s[8F#R+fRW7DNn
%#H',&-Ncc"#(13iLd:T[QL9E@+eZp&ZprE,KT*R/P`CjfEZtreBmGkA04d].C[.k+SkN(`.a"/G9D"GXNF]QO+s>32-:Dr:8Yi47
%MBDn?]`%sL>$:d"h?DH(cBr?G`i8^-bX;]4c^,Q1p6IUIXX!G]PSjREjZ*/i.`<2Y(dI4RJ]Mid&jU=p$0`KJSX>U$<uMs-f(((B
%qJ;0be#soh,!48bdTTV+aq(mL!@6NVhA'k;1f&(`6<%0\A;MH?9RDbjOkc45N`F&KK#Q]1M,JEH)q=s6n&Zd&<p)lXFn=+FD2C9E
%VdDg%9i#&5Tr)^@,idFe;WjiCUo(;S97MkgO4'5;L8L@P=f6.S]b.[jfp2sJe3F:P<^rd1Ve<-FU.g=,6YfOad;qeQRj/kMmmp!*
%AC'PfPSS#Ze6CY"[@YT`1Jp1rB<"fHY=;@2N&7Q`-`rN.p522LH7+#s5&%#o)(O1!1*$^j5&"b&l>-7#eZLI01N>6\DQ<S<DZjX&
%CeBtH?qZf%>_UR=%2;m=?;_UUeWJFW^n^]DMVnorP$1YS:68b^JQ!J#^.,f4%:&5?4?nP:AHnb^baW?HL9$.<D+^6bTdQuL*pPTs
%:4c#\V7#MCV](g$;dCi9U*/`BVZs$3V@?ktaui1>mc_+&U+8.@[_)ai#XQd&jp3^e$i2=#"Xp(k4&@bq(!d8n+@us^MGOrg"dQ#Q
%C!\n":fidtN4cr?9a-[+!L_](32/ua3E4,=1oO1f%VH%LaJP3hO9'JCF@?4=8;+gV'<,dTef,>\?tmEb5S;6b=-+-<NZ/1EGZ;"j
%*%,OuW>*a!@-iClplIpc.76(U`/?B3!AFa_KBT!h&N:P?Mj]f'G8jS!W(O#uQAB\jb:8CT398ODqZIX,,],4J<6\88Otr]SM(g+`
%Pr>.?#'KPpqH`3FTd$*r2\6l\R4MMO,2c9a%"jS.k(p;CB]K=7+6:>'@XFpWc9\@!A,!!d`utgUo\hJ[S1HmT%-:1lg+?,rNYjF"
%:jK*oW=BaI[5B2&0`^MDRnAdMHj(Y0Oi\&FMUi:pA-LudJt=rr:ig;F.D(D"Ig38*V)TG1:at(tY^!,UC0qri$AW*1Vh4n!:+2Z2
%gkCUeWbR5AZkSS8>op5l,JjIU7!hB[&Si?=%+nc>]n$mCjZ(qtb,*0o&6/0[<:!&!d6J;!LD$eZ:['_(5p/6\_RDdE#O:FX).aC*
%d"R.V'7Citr?RlT>RH4A'?uEEHXIi?RNVqLM7j->cKEOi#Cn76h"X7@c8$9EBm:b%NYi!=gdWt/T&A:T%i%fQHjM>h'h;q88A%Vp
%&t(O`3e]U!N//j)!8-(Y_KS!T]V(u7XFrFXDpkk<O[=<F-!?'5,V99aYsY=/=s5<X,0e62/PYG76L^r)_`1%n8&E3k9L[-&6Z3=.
%!cCGO?USrUVj5P<A3N:1IC-^enlL+J3:JIH.Bd8.=U@_-6ko\WL:n%kKakk2A^`+VnFGX">VV(C!k*_t3li_"%WYfDfJ);^`bi>^
%*6$Gma5jHUNcE'#S`02$E]SSra-4'sg$o#82MRir?h<6(ndUX<Su7e*r+e@HR([nG&%:DWZleZ$e5%$ts8G5.!GC<~>
%AI9_PrivateDataEnd
